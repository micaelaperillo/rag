the following content is provided under a Creative Commons license your support will help MIT open courseware continue to offer highquality educational resources for free to make a donation or view additional materials from hundreds of MIT courses visit mitop courseware at ocw.mit.edu this week's problem is from the 2008 uh quiz one on search is motivated by the search of evil Overlord Mark Vader who is shopping for a new evil stronghold he starts from his current stronghold which is s the depth first search Star now the depth first search Star has the following qualities it has a small thermal exhaust pipe weakness it has the quality of that's no moon but it does not have a race of enslaved minions or a secret Escape Route or sharks with laser beams now when I originally wrote this problem in 2008 there was another quality that was very important that was a giant laser and it did have that property as did Dr Evil's W base but that was removed to make it easier to solve so we're going to solve it without the without the giant laser that we can just have the sharks with blazer beams so Mark Vader has gone to akar's Emporium of uh new evil strongholds which are listed on the left and he's trying to figure out the best way to um get from his current stronghold to his goal stronghold the 603 Fortress which has the aborable qualities of no small thermal exhaust pipe weakness and it still has that's no moon it has a race of enslaved minions and a secret Escape Route and sharks with blazer beams which so it's got everything you would want and no weakness however he can only uh move between fortresses that have exactly one difference fortunately Mark remembers how to perform the search techniques he learned in 6034 from his mentor Emperor Patrick teen so we've got several fortresses here we've got the dep for search Star we've also um got sh ghoul which has um the the quality is basically of that's no moon and none of the other qualities DOL gor here has got the uh exhaust pipe weakness somehow despite being saon stronghold uh it's not a moon and it has those enslaved minions I guess the Orcs are enslaved Moon raker here uh only has exhaust pipe weakness so it's it's not very good but James Bond didn't need to deal with stuff uh Zeal Underwater Palace has that's no moon and a secret Escape Route zeris is lunar core has an exhaust pipe weakness and a race of enslaved minions Whalers of the moon rde has the exhaust pipe weakness race of enslaved minions and sharks with laser beams 603 Fortress we've already been over at Atlantis has all qualities except for a secret Escape Route Wily Wonka's factory has some of everything it is after all Willy Wonka's factory highlight the race of enslaved minions the Oompa loomas and Dr Evil's moon base is only missing that's no moon because it is a moon because it's a moon base so if you got all the references that were used to make those fortresses I'm sorry there's nothing I can do for you OHS now Mark being a clever evil Overlord realizes that he can grp produce a graph of the exploration choices with edges joining strongholds that differ by just one feature so although there's a graph here as Patrick often says and you'll get to hear again right now search is about choice not just about Maps so we're not moving around anywhere in the real world but we certainly are going to move around this graph to pick between these many stronghold choices how can we decide where to travel while we're about to find out so we've got this lovely graph right here and now we're going to get to do depth ver search on the graph now there's a lot of ways to do search and you've seen Patrick do it you may have seen some people do it in recitation and I'm going to offer you guys a unique opportunity to see me do search in one of several ways or possibly more I have the tried and true method you have the cue or agenda or whatever you want to call it you keep track of it at every level you make damn sure that everything you're doing is right it takes a long time and you got the answer right or there's one where you only work with the gold tree and you draw it really fast and you might make a mistake but it's going to solve it more quickly so who would rather see the reliable but slower approach who'd rather see the faster but less reliable approach all right mon Carlo people here rather than Las Vegas if you don't know what that is you'll learn it in algorithm's class all right then there's a third approach that I probably won't show you unless there's overwhelming favor for it that is the approach that is manically fast and will solve depth search in no time at all but is very likely to make mistakes uh that is the approach that I use when solving depth for search and I've used it enough times that I don't make mistakes that often but even I still do so does anyone want to see that one okay not that many people well it doesn't take much time but I'm just afraid if I show it to you that you'll be like oh that's the only way to do it so we'll say that for later if we have more time it essentially if people are interested involves just using your chalk or finger to trace through the tree really fast and figure out what it's doing by drawing little tiny lines it it is very fast but it's not very accurate and and you have shown basically no work if you get it wrong so shame on you okay well let's do the somewhat faster way we don't draw out the entire agenda and then people who were the almost nobody who raised their hand for that way can um check it out in tutorial um the way that you do it using the agenda so let's do it using the goal tree it's so it's a bit faster that way so we're going to search starting at s the start node and going to G the goal node that's a standard notation but make sure that when you're taking the test you check to make sure where the start Noe is where the goal Noe is it's pretty pretty much a a an move to have a g node that isn't the goal node but sometimes there won't be an S node that's a pretty good clue that something else is the start node now there's a few little white star ideas that we have or silver star ideas for search one is lexicography what is lexicography who cares well the most famous lexicographer I know of is Samuel Johnson who wrote a really famous dictionary and the only reason we care about it in this class is because you'll always see the instructions break ties and lexicographic Order and then you might be like wow that's really rather a wordy word uh or a cesop pelian word or whatever really long word you want to use to describe the word lexicographic what the heck does it mean basically it means alphabetical order like you would do in a dictionary so for instance in alphabetical order a comes from before B so you would go to a before B now even beyond that point there's several ways to do lexicographic tiebreak and it's not always consistent between algorithms how you would do lexic graphic tiebreak in the most recent time that Patrick was kind of randomly talking to the staff he made it clear that the way he would like us to do it and therefore the way we' like you to do it is to tiebreak based on the very latest nodes at the end so you might say that's not really lexical graphic wouldn't sa come before s GA in the dictionary um and my answer my my answer to you is yes it would yes yes it definitely would however um that is um that that is apparently what we're doing according to the last thing that Patrick said and we will keep you updated if um he decides to go back to dictionary order so um that's lexicographic lexicography you might be wondering what the picture here is well this is our friend the Ora Boris long has it been a symbol in alchemy of infinity eternity or maybe you know a um sort of infinite energy engine turning iron into gold but today unfortunately the orar is endangered species because no biting your own tail in 6034 a lot of people mess up from this it's an honest mistake I mean we've gotten some emails from staff members who um couldn't solve one of the problems because they forgot about this so it's okay if you forget but try your best to remember nobody in your own tell is the only smart thing our system does you'll remember last week when we were talking about rules and we were saying that the rule system is not a smart creature it doesn't know that there's diff there's difference between or sorry it doesn't know that not poly is dead should be the same as poly is not dead or something like that it's too dumb to figure that out well this system is also dumb but one thing it knows is that Patrick really hates if the same node appears twice within the same path and it will destroy that immediately before even adding it to the que it's gone it's not considered it's out of there so very important sad or Bor no biting your own tail all right so now that I've gotten through that let's actually solve the problem with some depth first search how will we do that while we're not going to use the Q at popular demand we're going to use a gold tree so we'll start at node s what do our choices at node s well I'm going to force you guys to help so it won't be quite as fast but it will be fun so what are choice at node s you not behind you me yes um A or B not quite and this is something I like about this problem you got most of them do you see that there might be another Choice everyone yes see this is a big problem that has happened on a few different quiz problems where there's a tree that you could where there's a sort of a grid that looks like a tree or graph that looks like a tree where people um aren't as willing to go up as they are to go down you can see it on some of the other past P problems too make sure that you check the connectivity and also note that unless otherwise specified and I don't think we've really done this much the little um connecting edges in our graphs are bir directional you'll see a big arrow and probably instructions written at least eight font sizes is higher than all the rest of them and bold if um if we're going to do something different for this quiz it happens that they do it sometimes while I was just say mega reation we never do this and then on the quiz they do it but it will be in giant letters which also leads me to another SilverStar idea that I forgot to tell you guys last week so I hope people didn't ditch out on me like oh Mark's boring we won't come next week and then missed this one because it just came to my mind that is read the instructions is a very important thing for the quizzes and uh Patrick will in a later lecture tell you guys ask why five times and he'll explain why that's a gold star idea my parallel to this is read the instructions five times maybe not five maybe three or four but at least three read the instructions read them again then read them a third time only paying attention to whatever is bold and eight sizes larger than all the other ones because there's going to be something there that's that size and it's going to be the one that thing that everyone misses so make sure you're not everyone and you read the instructions a lot of times but anyway so yeah we've got it right s goes to a b and c okay we're looking at a B and C as possibilities everyone let help we make the Le graphic tie bre where do we go a that's right all right actually you know what I'll call on you guys for I'll call you guys for other ones but depth for service is pretty simple we can have everyone do it together a everyone a only leads to that's right why doesn't lead to S as well no biting your own tail everyone's right good job everyone all right s leads to a s leads to these three you go to a go to D oh dead and backtrack okay when we backtrack we had backtrack up to a there's no other children we backtrack up to S where we go now B it's the next one alphabetically all right B can't go to S so it only goes to yes one more at H we can go to f or i that's right you guys get it this dep for search is easy all right so but we choose F that's right when we F we can go to to e and J that's right we'll choose E when we're at e we can go to we uh we we can go to C it's not on this particular path people are correct when they say C when we go to C we can go to nowhere we're dead backtrack we backtrack uh we we can't do anything e we go to F now I forgot to tell you guys but this is an important note someone's going to get this wrong it's going to be one of you look around you all through the room at least one of you is going to do this so now I'm going to tell you not to do this and then hopefully that will still be true but for fewer people when I went to D and then I backtracked and I went to ask how many times did I backtrack once I backtracked once this would have been more obvious if we were doing the really slow boring agenda way with or Q way um because when we got to sad and we expanded it and there was nothing left we throw it off the top of the queue and go to the next thing on the Queue and it turns out the next thing on the que is SB that step was only taken once it since we're using the gold tree which is faster it looked like we did two but we didn't and if you use the que you'll see that because it'll go s and then we expend that sbsc okay we spend sa sad sbsc we spend s it's dead sbsc one back track we're back at spe so so far we've done two not four see I mean it's pretty intuitive to say that you did two there it turns out you didn't because of the algorith the algorithm that's backing what lets us do this gold tree search so make uh try to make sure you're not the one who says two well and we and I on the other hand we'll try to make sure that we don't take off too many points if you do question how much it chains any backtracking is just considered once is always going to be considered one step it's possible to backstrap two times in a row like if s if B didn't go to anything instead of going to H then we might backtrack twice before we got to SC generally anytime you draw a swizzle if you're like me and you draw a swizzle I suggest the Swizzles they're very nice little things but if anytime you draw a swizzle on your graph you've backtracked once you could even write BT next to the Swizzle and go back and count those or even just count the Swizzles at the end you've got it you got the answer because they often ask how many times have you backtracked all right so good questions everyone so anyway we backtrack from C nothing e we got back we we at F so we at sbhf we go to J it's the only choice at J we can only go to and at I we can only go to and we win it's not an optimal search so as soon as we see anything with the G on the Q boom winner all right and we're done we did it that wasn't too bad for those of you who are vaguely interested in seeing how I would do it um the really super fast way it goes something like this all right ABC a comes first only D backtrack all right B comes first h f comes first e c nothing backtrack uh we came that way j i g so that's the really fast way to do depth resarch don't do that kids we don't like uh well maybe you can if you get it right we're not going to take off we're not going to take off points usually generally when we say draw the gold tree below it's to assign partial credit however we are pretty strict about that if anything is wrong except for maybe like okay you write everything exactly right and forget G at the end if anything that's not completely understandable is wrong you will probably lose all of the points and it will be a lot of points if you don't draw the gold tree so may I will emphasize drawing the gold tree is a good idea all right so now let's do a breath first search before we do the breath res search on this on this tree I will tell you guys that there is also a fast way to do the breath first search Which is less risky and it really depends on how nice they are about what they ask for in this case the breath first search question asks what path does Mark find using breath first search rather than saying what nodes does he expand in order or anything like that that is important if that question is asked you there is a trick that will let you solve it very very quickly in fact faster than dep first search you can solve it by inspection at about 30 seconds does anyone know what the answer is what path did you find that's correct so the answer is on this graph the answer isbh that's the answer you would have your five points did people see that it doesn't always work so we're going to actually solve it but does everyone see that sometimes you can get away with not doing it because breath for search is guaranteed to give you the path as we heard correctly with the least number of jumps and if there more than one that tie with the least number of jumps you can just lexor graphically figure it out in this case with actual dictionary order but um sbig is the only one Let's do an actual breath first search though so we can feel better about ourselves okay so you've got S and S goes to as we saw before ABC maybe that doesn't have to go quite so high all right as we saw before s goes to ABC and you already told me that a goes to D and you told me that b goes to h but what does C Go to e that's right as you can see we're expanding it level by level left to right all right so sad where does sad go to sad goes to Nowhere it's dead sbh now wait you might say wait a minute Patrick said that we're using this weird dictionary order where E is at the end it comes before H that's our tiebreak order but it turns out that breath for search and depth for search don't sort in any way the um it's very important they don't sort the paths that are currently on the Queue so you're going to just go left to right left to right left to right and only at each node are you going to break ties in Lex's graphic order all right so sbh H goes to as we already know fni I E we think we already know but we don't quite because this is e coming from the other direction e this time goes to F that's right well actually you guys do already know it all right great now we come over here HF goes to as we already know e and j i goes to as we don't already know hi goes to G and J that's right and as it turns out by an implementation detail we're done question does it not expand EV at all now this is an implementation detail it's perfectly sane and reasonable to make a dep to breath first search that likes to finish its entire level that it's working on however in our implementation and we would have seen this if we had been pedantic and drawn out the entire queue it's another reason why drawing out the entire queue is as I said more reliable um in our implementation since it's not an optimal search as moment anywhere on the que you add something with a g at the end you finish and because of the fact that the way breath ver search does it's Mojo is that it adds everything to the end of the que that's how it does it level by level right it adds it to the end of the Q instead of the front well then you you'll add it to the end of the Q and then you will have it on the Q with a G so you won't have to do s CF uh another question um that's a good question so uh the question was so for the breath for search there was no backtracking d d died why didn't we backtrack or something the answer to that one is bre for breath first search backtracking doesn't really it isn't really a thing like it is for depth first search why well because breath first search we're sending our infinite monkeys down every path um in depth research we're really focused in N we're like we want to get there we want to get there ooh this way this way this way this way and we might have gone the wrong way and then we hit a dead end we're like oh crap and we go backwards but for for breath resarch we're we really are like an evil Overlord and you know we're like Mark Vader saying like Stormtroopers go every direction and then from there go every other direction and so even though yes when we got to D some of the Stormtroopers hit a dead end and probably like it was reflective and they shot it and hit themselves or something like that meanwhile the Stormtroopers be sent to B andc are still fine so we don't need to backtrack troops down yeah there are other troops going down the tree in every direction whereas in the def for search we only sent we're like there are definitely no Droids on this Escape pod send everyone this straight Direction and we only sent them to a and d and then so we had to back track because we hit a dead end does that make sense another question so the question is in this uh breath res search did LAX graphic order ever come into play the answer is yes in a very subtle and sneaky way which is um I wrote E before J F before I and G before J if I was not using lexographic order it might have been reasonable to write for instance when I was expending I to write J before G because J was higher up on the tree or something like that but the only way it came into play is that I wrote them left to right in alphabetic order every time and I wrote ABC another question I we have visited F again and we would have visited F again that's correct the question is f is listed twice so if we hadn't reached the goal node let's say that down there after I is z and after Z is the goal node then would we have visited F again the answer is yes as I said this is the approach that throws your troops every possible way so there's Storm Troopers going from E to F and there's Storm Troopers going from H to F and they're going everywhere now there is a way to cut down on this you could do breath first search with an extended list if you did do Brett first search with an extended list that would be sort of equivalent to after as soon as you expand one node you know as soon as storm you send Storm Troopers out of I to look at g& J one of them stays at I and if any other Storm Troopers come to I and they're like oh we want to see what's past ey he's like no no no we've already sent troops past ey we've got this go back home you're it's it's it's okay there are no Rebels here but it might be Han Solo dressed up as a stormtrooper as we'll see in the next problem um where our extended list screws us up um but for this problem um you see what I mean with an extended list we could avoid this because the extended list basically says once I've expanded and search past here don't do it again but if you don't have one yeah you'll do F twice in fact didn't we do something twice here oh it turns out we didn't but we we easily could have we almost did E twice we almost did uh we almost did F twice it turns out we didn't but we could have another question we assume that for the impementation of the that when you expand G and addan J so stop that's a very good question that provokes a minor change the question is when you expand sbhi is sbig added before sbhi J because of lexographic ordering or they both add at the same time the answer is simultaneous when you do the expansion you instantly receive a say a list maybe or whatever data structure you like containing all of the children and they all go get appended to the Queue at once in order so um you will receive all of them like I suppose you could create some kind of search problem where you have like an adversary node like a wus or you're hunting a wus and if you you don't want to add the exact wus to your search tree or you lose you only want to add the one next to the wus I don't know I'm making this up and unfortunately you would have to add all the you have to add all the children at once you uh our current algorithm does not add uh one at a time all right so we've done a breath for a search great now we're going to do some optimal search that is going to require me to draw a slightly different graph I will draw it on what is left of the bottom here and then we'll solve it on on what is left of the bottom here so all right Mark has his new stronghold and he wants to invade parallel universes now he's going to he's programmed his evil supercomputer to find the shortest path of jumps from his starting Universe to the goal Universe G he's also it takes a certain amount of energy to move from Universe to Universe based on the differing factors between those universes like maybe in one Universe a butterfly didn't flap its wings in China whereas in the other Universe there's a sentient reptiles rule the Earth um and so he has Mark supercomputer has tried to create a heris value that determines how different the universes are to guess sort of how much energy it's going to take to get from his start Universe s to his goal Universe G given that he's at a he's he currently his armies are at a particular Universe in other words okay it's not a ukian search but damn it we're going to have a heris distance to the goal and we're going to have a graph with distances so let's see what it looks like all right and down here is G so this otherwise I'm assuming heart shape hides an evil Invasion Force so um let's see the distance here is 100 the distance here is three four the distance here is four distance here is 50 14 4 16 16 oh sorry these are connected 30 and 10 theistic values are zero at the start node 50 at B 60 at a 55 at C 50 at d 56 at e 50 at F zero at G because it's the goal mode 39 at H I'll draw the little H smaller and zero at I well after all I goes right to G it can be zero it'll be great Okay so now this time Mark is trying to conserve the energy of his parallel universe jumper that understandably takes a lot of energy so he needs to find he needs to program in the shortest number of universe jumps that will get him to the goal he he's not interest and he doesn't mean the least number of jumps he means the least amount of energy on these edges he's not interested in conquering in getting to this new world and not having enough energy left to blast the crap out of it so we need to find the shortest path so first Mark programs a simple br in Bound search he adds in an extended list to his branch and bound just to make it a little bit faster as usual he breaks ties of equal length in lexographic order so let's list the nodes that Mark's computer adds to the extended list in order distances are shown next to the edges ignore the number in parentheses for now they are heris and we're not using them so that brings me to another point that I'd like to drive home before we go for the home stretch and solve these problems what the heck is the difference between branch and bound and a star okay I like to liken it to the following I probably should have I'll make this a SilverStar idea okay the SilverStar idea is pizza it doesn't really look like pizza but that's a SilverStar idea Branch inbound is a cheese pizza it's simple if you order it for a large group event of college students they will eat it and think things will be okay now a star search is some kind of meat lovers of supreme pizza maybe a meat lovers Pizza it's got all these extra toppings a lot of people are really going to like it it might be better but then you've got a vegetarian and everything's screwed up so basically branch and a star is just branch and bound with some extra toppings added on in this case one of the Toppings is an extended list uh extended list which uh we'll see keeps track of where we where we've passed through and already expended out and it never goes back the other topping that we were going to add is a heuristic heuristic tells us about how far we think we have left until we're at the end so we don't go through really short paths that go completely in the wrong direction all right between the two of those we get our supreme pizza but sometimes as we'll see they they sort of mess each other up so you know one of the topics just doesn't go well with the other one maybe a lot someone does like Hawaiian they think that the the ham doesn't go well with the pineapple anyway so let's do a branch inbound that just has an extended list maybe we've got some green peppers on this pizza this is going to be safe um all right so we're going to list the noesy as the extended list and the way we're going to do that is well you guys said you like gold tree more than Q so let's do it with a gold tree so we've got s and as we already know s goes well s is the only path our current length at s is zero that's the lowest of all of our lengths on the tree because it's the only length so we go to a b and c okay so what is everyone um it may be hard to see so the length of sa is 100 the length of SB is H oh you're right it's a different tree I was doing ab and C from the other tree thank you friends for correcting my foolishness the length of SB is three it is a different tree I was trying to save work that wound up creating more because someone's going to be confused by this so the length of a e and f are 1034 and 14 which which one do we choose lexor graphically it's a we choose that one right f is going to be 14 that's a one sorry we oh it's four I wrote this problem I should know it you're right f f is four my apologies is once more that's what I get all right I'm going to send over here from now on when I write over there okay um so which one of these are we going to choose even with the four we're going to choose B that's right Le the graphic be damned it's only for ties we want the shortest path our special thing with brench and bound is we take the currently shortest path whatever it is great so we spend B fortunately and I'm pretty sure I've got this correct this time oh wait I've got an even better idea I'll just take this little hand sheet with me and then I don't have to look at that at all okay so once we expand b b goes to D our path length from B to D is four so what will we write next to Little D here seven that's right we add them all together I'm going to ask you guys again the next time we do this with theistic which is going to be the next part of the problem and someone's going to give me the wrong answer next time so stay tuned for that all right so we've got SPD we've got all of these where do we go next F that's right because currently four is the shortest because you guys corrected me correctly so SF four is the shortest F only goes to h and what do we write next to the h 20 that's right 16 + 4 20 all right where's our current shortest it's the D SBD all right so SBD D only goes to I and we've got a 57 oh I want to get wait a minute 57 I think wait a minute I want to get this problem right so we better actually write the extended list better at we because that's the only thing they're asking us for so first first we extended s then we extended B then we extended F then we extended D all right so far so good and I have the answer key so I know we're doing it right okay what are we doing next e that's right so we extend e e goes to h and when e goes to eight we've got a length of 30 all right who's our winner now which H sfh that's right sfh is length 20 oh yeah of course I should write an e in here I always forget to do that sfh is length 20 so we'll extend H and I'm going to write it here preemptively all right when we extend H over here H only goes to I with length 50 great what's the next shortest the next shortest is the other H however will we expand it you guess that because I asked that question in that way you knew the answer was no why don't we expand it it's already on the extended list that's right so since it's already on the expended extended list this one dies a horrible death I like writing an X through it instead of writing a swizzle at the bottom you can do whatever you want all right it's gone it's not a choice what's the next best one sfhi that's right Ro goes to G and the length is 60 and we've extended I all right so question is are we done the people who say no I like you you're smart you realize that just because the G is on there that we can't end how are the people who said yes you're either oblivious or really really smart and I'm going to choose to assume you're all really really smart because the really really smart people said okay yes we're not quite done just because we added a g we still have to check to make sure there are no length of shorter path but look the only one with the shorter path is I which is already on the extended list so actually we are done double Trend we've got it so these are the paths we extended in order and our final path is everyone that's right sfh G I claim that is the correct path however Mark is frustrated by branch and bound speed I don't know I wasn't that frustrated seemed pretty good but Mark is frustrated by brench and brown speed so he reprograms his computer to use a star Mark counts the number of Subspace anomalies between each Universe in the goal and uses this count as theistic for a star these numbers are in parentheses hopefully you can read them yes oh we've got a question right here ah that a very good question and the answer is very simple answer you guys tra me no but I should have been able to figure it out it does go to CN D the correct tree which you wouldn't we wouldn't have lost points for having the incorrect tree here we did get the correct answer yes the the reason why is that same reason that very first time I asked someone something he didn't remember the C it's easy to forget to go up the tree it does actually have a c and d however they are horrendous paths they are 100 and 100 on their on their path length and so it doesn't matter but you were correct official answer we had up there is wrong add good question well the question is would the D get added to the children after all it's already in the extended list the answer is we search for and remove and kill all of the attempts to extend something that's already on the expended list at the time we try to expand it the time we try to expand it is only when it's on the front of the que because it's the currently shortest path so that means they get added it's just that when it comes time to expand it it will get crossed off no matter what turns out it escaped execution because of the fact that we never expanded it so H should go to e as well is the question the answer is yes H should go to e as well a lot slipped past me this time H should go to e as well with a length of 36 and it dies there this one will actually be checked so it actually does make a difference if we ask how many times was a node um executed due to not going on the extend due to already being on the extended list very good very good notice it should be on there we'll get it right next time all right everyone so I'm working together with you I made the mistake to easy one to make it can it can mess you up it didn't this time we're going to get it up question if G's the goal get G in youres and know the number shorter than anything else do you have to actually extend it g so the question is do you exist do you actually extend G do you should should we even put G in the extended list the answer is the answer to that question is it is a matter of taste and in the questions where we in my opinion rather foolishly ask how many nodes were extended rather than asking you to write them out we generally accept the answer where you didn't extend or where you did extend G it's an implementation detail you can either have a fail safe that as soon as it sees g at the beginning of the list says we're out we're not going to extend we're done we win or fail safe that when you're about to extend something and you do go into the extension process and it sees that it ends in g that it wins so it is a matter of taste if you kind of like to watch your your little guy doing the search wi and have an S and a g you can put it on if you don't you canot put it on we won't take off points for whether or not it has a g at the end because clearly if you did all the other crazy stuff correct well you could have written in a g if you wanted to I think unless like there's someone who missolves the problem right at the end is like oh who cares about G oh no it's stuck it's a dead end we lose but that would be probably pretty rare all right so let's solve the um the AAR so I'm not going to make the same mistake twice we go from s to a b e and S by the way had a value of zero all right what is the value at a well I think it's 160 the question is how do we calculate this well it's the path that we traveled so far plus theistic value at the at the final node by way this is why someone's going to give me the wrong answer at BD but let's see so we have 160 here okay so SB we've got a uh what is theistic value here we've got three for the path and 50 for the theistic so it's 53 all right SE what have we got here we've got 14 for the path 56 for the heris so it's 70 all right SF we've got four for the path 50 for the herti 54 okay who's our winner it's B again barely but it is the winner extended list up here SB all right b as we saw goes only to D what is the what is the value that I should write here okay I am happy I heard all the things that I expected to hear I heard the correct answer which is uh 57 I also heard someone say 107 so why is it 57 and not 107 someone does it this way every time do not add up all the heres of law in the way I'll try to explain to why you never want to do that theistic value at any given node says given that I'm here how much work do I think I have left to get to the end all right it's sort of like let's guess the last few nodes in the path that we haven't done out yet so you can see why it would be bad to add that every add that for every node in your list because then you're at you're double counting all the last nodes so add the path so far to the very finalistic that's 3 plus 4 plus the 50 that's with D is 57 so our current winner then is 54 with f just same as last time F goes to h and what's our total value at H 20 plus that's a 39 59 so who wins now D with 57 but uh we extended F yes good all right so D with 57 all right so d was not one of the ones that I tricked myself with d only goes to I what's our value at I I think our value is 57 because I has a hero stick of zero yes I has a hero stick of zero our value at I is 57 okay and I extended D who's the winner now I okay so I is the winner with i as a winner we extend I I goes to c d haha good call whoever back there figured out my secret error before CD and g c h and G oh you're right we already went to D aha c h and G you're correct everyone see that CH H and G absolutely right I goes to CH H and G so the path to see h& G is is a is a hard path um we've got to see we got what did we have 57 + 50 is 127 oh and by way c g and H we've got to do it in L graphic order so 127 to C to G we have 67 and to H we have 87 okay so who wins now H H with 59 that's right H with 59 and as we already know because it was the winner last time H with 59 goes to I which has I believe um 50 well it still gets added remember we're only going to kill it when it gets extended so who's the shortest so you a step ahead whoever asked me the question who's the shortest H also goes to e h also goes to E absolutely right all right H also goes to E I was getting ahead of myself here H also goes to e with a length of extra 16 so we've got a 20 + 16 is 36 + 56 is 92 all right that's good so who's the shortest I is the shortest do we extend it no it's on the extended list all right who's the shortest now it's hard to read but the shortest is this 67 on the G so we're done we win our path is SBD i g yay for a star gets the right answer right no ah unfortunately not so what happened here why did we not get the right answer be as specific as possible what are people saying about heris sixs all right people are saying theistic must be consistent that is both correct and specific spefic so I applaud you too easy to say theistic was UN admissible it actually was completely admissible everywhere so that leads us into our very last point for the day what the hell are these juristic consistency and admissibility things and why do I care well the reason why you care is manyfold one of which is that it's almost guaranteed to be on the quiz but what are they admissibility is a check at every point to make sure your ceris at that point which is supposed to be an estimate of how much work you have left to do is always an under estimate or an accurate estimate it can never be an overestimate why not well as Patrick showed you with his mostly correct example on in lecture if it's an overestimate it's never going to expand that node because it's going to think you know if you write 1 million as a heuristic it's going to think it needs to do 1 million after it's done going that way it's not going to want to go that way all right so it's always got to be an underestimate or an equal estimate but let's say that you as at the quiz and you forget Mark told me this you didn't bring any notes you're just having a brain free oh know is it supposed to be an overestimate or an under estimate I can't remember which one how can I figure it out how can I figure it out I propose you the following calm soothing Mantra Sutra that will help protect you think to yourself of the following question does we know that a star sometimes messes up with the heuristic does branch and bound always get it right yes what heuristic values does branch and bound add everywhere zero right it has no heris get essentially add zero is zero an overestimate or underestimate an underestimate therefore since branch and bound always works the one you're looking for is underestimate I know from when I was taking the class I always had a moment where I had to spend like two minutes convincing myself okay I'm going for underestimate not overestimate this will help it will take fewer than two minutes to do that so what is consistency consistency is a Little Bit Stronger of a claim when you claim that a graph is consistent what you're saying is between any two nodes or to do it more simply between any two adjacent nodes the distance between the heuristics is less than the distance between the nodes in other words it's sort of like admissibility is this sort of like consistency between every node and G whereas consistency is consistency between every node in every other node all right consistency is a stronger claim any graph that's consistent is always admissible any graph that is inadmissible is always inconsistent that's the Contra positive L equal to is still okay equal to is always okay that's great it's a perfect estimate but never greater now if a graph is inconsistent will you lose will you lose why is it called admissible then if you can if if if it's sometimes not admissible the answer is why do why do we lose the answer is the extended list and you see that here if a graph is admissible you will always get the right answer and uh you'll always get the right answer unless you use an extended list because you're checking for from every node to the goal node and you're sure that your estimates are right but if estimates within nodes aren't correct you might go through them out of order and that violates your assumption that you made when you decide to use the extended list that you would always go through the sort of the subgraphs in order this graph is very expertly crafted to do that to you because I might as well be sort of a bottleneck goal node and I has an inconsistency there's a few other inconsistencies in this graph but they don't do anything to you in fact even eiss abilities sometimes don't mess you up so you can't just say blindly it's in admissible so it will never work it might work it turns out the only inconsistency that matters here is not the inconsistency between say s and and f that doesn't turn out to matter it's the inconsistency between um some of these nodes including I and H specifically so have a good weekend come in on Monday and Tuesday the tutorial ask about the Q method or or other methods ask about anything that's ningling in your brain but hopefully you guys have got this you're going to do fine