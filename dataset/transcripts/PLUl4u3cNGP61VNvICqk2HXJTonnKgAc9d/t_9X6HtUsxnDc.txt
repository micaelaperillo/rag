good morning good afternoon let's go ahead and get started welcome to lecture 16 this is the last lecture worth of material that we're covering before our quiz all right let's talk about counting this is lecture 16 on Counting and where we left off last time was I had just mentioned the generalized product rule and we used the generalized product rule to count the number of permutations of a deck of comically oversized playing cards uh we had 52 cards and we decided if we want to choose an order among all these cards well we have 52 options for the first card Queen of Diamonds this time after that we have 51 options left for the second card four of clubs this time now we have 50 cards left 5050 options and notice what whatever first two cards I chose um initially whatever cards I chose is going to change the set of available options left if I had instead of choosing the queen of diamonds first if I had chosen the eight of clubs first then it would be this 50 cards that are remaining on step three rather than the previous set um but still on step three we always have 50 choices left so now we're choosing the two of hearts on step four we always have 49 choices left then 48 47 Etc um and so we were able to sum this up into a general principle called the generalized product rule which basically says if you're making a sequence of choices and at every um at the E choice you always have a fixed number n i of possible choices at that I step then the number of ways to make all your choices in sequence is just N1 * N2 * N3 all the way to NK uh and that's what this says in text so if a is a set of length K sequences where there are exactly N1 possible choices for the first one so 52 choices for the first card and then N2 possible choices at the Second Step no matter what you chose for the first step then n three um for the third step no matter what your first two choices were and so on all the way down then the size of your set is just the product of the number of choices you have in step one times the number of choices you have in step two etc etc does that idea make sense let's do one more example here um and this example is about money money is a fun topic right um so anyone who has a dollar bill on them doesn't have to be a one just any dollar bill go ahead and P pull it out for a second and then give it to me no you can keep it um but take a look at the serial number so every dollar bill has a serial number which is a length eight sequence of digits how many possible serial numbers are there there might be some letters in there ignore the letters there are eight digits how many possible serial digits are serial numbers are there how many ways are there to choose a sequence of eight digits yes eight factorial eight factorial serials any other suggestions yes 10 to the eth 10 to the eth any other suggestions yes okay 10 * 9 * 8 all the way down to three cuz we're only choosing eight digits instead of choosing all 10 digits okay I'm going to put another suggestion in there 8 to the 10 so which of these is right so importantly I never said that the digits had to be distinct and in fact very often they're not distinct so if we choose so here 2 3 four five six 7even here are the eight digits we're going to choose a number for each like if I choose a seven for our first digit well I had 10 options right how many options do I have for the next digit 10 right I'm allowed to choose seven again if I want to so I have 10 options here maybe I do choose seven again how many options here still 10 maybe I choose a four this time and so on I can fill this in every time I have 10 options for my next digit so the number of choices is 10 * 10 * 10 8 10 8 does that make sense cool this in fact is just the regular product rule we didn't need the generalized product rule here because the set of choices I have is just all 10 digits the set of choices I have is the same all 10 digits um the set of choices isn't changing as I make more choices just ju just regular product rule I put 8 to the 10 up there just to be a bit of a troll um because 8 to the 10 and 10 to the 8 are easy to get confused um and so if you think about it this way how many options do I have for this choice for that choice for that choice it'll be easy to tell which one of these is right and which one of them is wrong uh so 10 to the8 serial numbers but we had um some of these formulas were sounding like we wanted the digits to be distinct they're not always but maybe sometimes they are so everyone who pulled out a dollar bill uh can you check your serial number and if all of your digits are distinct can you raise your hand no one can you raise your hand if you checked a dollar bill and it failed okay so I'm seeing about like 20 25 people that carry cash uh so out of those $25 bills none of them had all distinct digits um which is a shame because if someone did have all distinct digits I brought Candy so maybe check the other dollars in your wallet um but this gives us a natural counting question how many serials have all distinct digits and let's see if we can count this using the product rule or maybe the generalized product rule um once again 1 2 3 4 5 six 7even eight I like to think about my choices in order one at a time so I just draw a little bar to remind myself I'm going to choose something here and remind myself how many options I had so let's see if we can construct serial numbers that have all distinct digits length eight how many options do I have for my first digit 10 absolutely I have 10 options here maybe this time I chose a three how many options do I have for the second digit nine is it always nine what if this digit had been eight still nine right no matter what I did here there's always nine options left so maybe I choose a seven how many options here eight I've used two I'm not allowed to reuse them so there are eight options left then seven then six then five then four then three and therefore by the generalized product rule by the generalized product rule um the number of length eight serial numbers with all distinct digits is 10 * 9 * 8 all the way down to three just the product of the number of choices I have at each step which by the way someone had had guessed previously so well done with that um and now you could ask out of all the serials out of all 10 to the8 serial numbers now we know how many of them have all distinct digits what fraction is that well we just divide um this number divided by 10 e um tells us there are actually only about 1.8% of dollar bills that have all distinct digits so about less than 2% so since we had like 25 or $30 bills that we checked collectively it's it's no surprise that we didn't get any of them uh that fit this this Criterion um if more people carried cash maybe we'd be seeing some some candy payouts today shame um questions about the generalized product rule wonderful let's move on to the next rule which is the division rule wonderful um so so far we've seen the bje rule so if F from a set a to a set B is a bje then the size of a equals the size of b um a bje by the way is also called a one:1 correspondence one two one correspondence um where the picture in your head should be that every one thing on the left corresponds to one thing on the right they're paired up one to one um thinking of this function in our directed arrow drawing fashion everything from a has exactly one Arrow out and everything in B has exactly one arrow in that's what it means to be a bje so it's a one to one correspondence one Arrow out one arrow in let's we can generalize this a little bit so um if instead every a in a has exactly one Arrow out and every B and B has exactly K arrows in then we can conclude that the size of a divid k equals the size of B so here's my picture everything on the left has one out everything on the right has two arrows in exactly two arrows in every time then there are double as many elements on the left as there are on the right if it were three arrows in if everything on the right has exactly three arrows in then there are three times as many things on the left as there are on the right so this is a generalization of a bje or a one:1 correspondence uh to what's called a k to1 correspondence because what this ends up doing is saying that we've divided the left side into groups of size K that correspond to each one thing on the right so this one thing on the right matches one two three things on the left and everything on the right is paired with three distinct things on the left and so this is a useful tool for counting that generalizes the projection rule we don't have to match up match things up one to one as long as we know that we're matching the same number of things every time and then we just divide by that thing all right let's put this to use okay so example Knights of the Round Table so the set here is we're going to have n Knights maybe it should have been K Knights n Knights all sitting around a round table um around a round table at n equally spaced seats how many different arrangements are possible if rotations of a seating assignment are considered equivalent so n Knights sitting around a table if you have one seating assignment and you have a second seating assignment that's just a rotation of the first then we want to consider those two assignments the same seating assignment we don't care which exact seats they're in as long as the cyclic order around the circle is the same so for example if n is four and we have um like one here then three here then four here and two here that's one possible seating assignment well here's a different one one here three here four here two here but this assignment is the same as that assignment because we've just rotated the table and we're just saying we don't care about rotating the table so in fact we want to consider these to be equivalent seating assignments right just like we want to consider this to be equivalent to one then three then four then two this way and equivalent to one then three then four then two this way so all four of these rotated seating assignments are equivalent because it's the same order they're just starting in a different place does that make sense cool so that's our question how many different seating arrangements for these end nights are possible given that we don't care about rotations and to solve it let's see if we can use a k to1 map because that's what we're trying to learn at this point in this lecture um so here is the map I'm going to recommend um let's let's let a be the set of permutations of one through n permutation just means a reordering so it's all of the orders of the set 1 through n and B is the set of cyclic seating arrangements so B is the thing we're trying to count how many different seating arrangements are possible well a we know how to count what's the size of a what is it n factorial that's exactly right um that was our first example of generalized product rule on Tuesday there're 52 factorial orders for a deck of cards they're n factorial orders for a set of n nights all right so if we want to use the division rule we have a set a where we know the size and we need to be able to define a function from a to the set B that we care about and make sure that it's a k to1 map for some K and here's the map we're going to do so f is going to take in a permutation so an element of a so A1 A2 up to a n so it takes in a permutation an element of a and it needs to spit out an element of B so it needs to spit out a cyclic ordering of these numbers and it's going to spit out this cyclic ordering that just sits them in that order around the table Yeah the the most straightforward thing I can think of to do here now that we have this function let's check if it's a k to1 map um all right so what does it mean for f to be a k to1 map is f a K2 one map well it means that everything in B needs to come from exactly K elements of a so we want every cyclic order comes from exactly K permutations and when we say comes from we mean via this function f via function f so as an ex example maybe n is five this time and we have the order 4 5 2 3 1 some cyclic order here how many different permutations of 1 through five maap to this cyclic ordering who can give me one of them so we have this this function f that takes a permutation of 1 through n and just lays it out around the circle so who can give me a permutation that becomes this once you lay it out around the circle I'll see if we can get some new hands yes please 1 14523 1 four five 2 3 if we lay that around a circle we're going to get 1 4 5 2 3 looks good to me excellent who can give me another yes 452 31 452 2 3 1 if we lay that around a circle we're going to get 4 5 2 3 1 looks good to me same cyclic ordering all we're doing is choosing a starting point if we know what cyclic ordering we're aiming for well we just have to choose who we're going to start with and then list the rest of them in order around the circle and that's how we can reconstruct all of the permutations that map to the cyclic order if we start with two then it's going to look like 2 3 1 4 5 If instead we start with three it's going to look like 3 1 4 5 2 and the only one we haven't done yet is starting with five 5 2 3 1 4 5 2 314 and I claim that's all of them so in this case for this particular cyclic ordering there were five permutations that map to it right in general I claim uh for each cyclic ordering there exist exactly n permutations that map to it um for the same reason we just saw for this example the only additional information we need to reconstruct all of these permutations is which starting point we're choosing because just need to pick a starting point all right so every for every cyclic ordering there exists exactly n permutations that map to it which is exactly the condition we need for f to be an N to one map n21 map everything on the Right comes from exactly N Things on the left and what do we conclude now that we know f is an N to one map why are why are K to1 maps in general helpful yes yeah we can understand the size of b k to1 maps are helpful because they let us relate the size of a to the size of B and in this example we know the size of a we know it's an N to one map and therefore we know the size of B so the size of B is just the size of a divid n cuz we decided it's an N to1 map and therefore the size of B is n factorial / n also known as n minus one factorial does that make sense cool I see some nods I see some blank stairs again you know that's that's fine ask questions when you have them okay let's look at one more example of the division rule um I want to look at increasing serial numbers again but this time just length three let's make it easier on ourselves uh so the number of Serial uh serial numbers length three and now I want to know how many of them have all three digits that are in um sorry one moment sorry I got ahead of myself different example still length three serial numbers I just want to count these that's all I want to do how many length three serial numbers are there um with distinct digits and we already have one way that we know to count this uh we had the generalized product rule method that we used for length eight we can do the the same for length three I want to propose a different method that uses the division rule instead and here's what I'm going to do let's let P be the set of permutations of 1 through 10 uh sorry of 0 through 9 and let's let s be the set of length three uh serials with distinct digits all right and I just checked my notes again I I got myself confused yet again forgive me let me change the details of the uh of the of the example just a little bit um I want the number of serials of length three with not only distinct digits but actually digits in increasing order so I'm okay with two and four and nine I'm okay with 01 3 012 is fine uh I'm not okay with 4 2 3 cuz four and two are in the wrong order I'm not okay with two to 25 cuz I want strictly increasing so how many length three serials have strictly increasing digits is the question clear okay thank you um and let's do the same thing we were doing before uh let P be the set of permutations of 1 through nine of 0 through N9 and let s be the set of ser of length three serials with increasing digits strictly increasing digits and let's see if we can relate p with s in order to count the size of s and here's what I'm going to do let's define a function let's define a function G from P to S and it's going to look like this uh G of a permutation a z A1 A2 up to A9 that's a generic element of P that's going to go to the serial that has a z A1 A2 sorted so take those three digits and sort them all right that's a way to turn a permutation into a serial number with increasing digits by the way a different way to think about this problem um you can think of s um s is equivalently the set of uh size three size three subsets of zero through nine if we know they have to come in increasing order then all we care about is which three we chose right so if I tell you my serial has increasing order and has the digits of five and four and N then I know it has to be 459 so just the set of three digits that we chose is enough to know which serial it is so if we want to think about this as instead the set of size three subsets then this function G would look like this would just go to the set a z A1 A2 so this is a way to map permutations of of the digits 0 through 9 to subsets of size three all right and now let's see if this G is a helpful function let's see if it's K to one for some K okay so the question becomes for every size 3 subset of the digits how many permutations ma to it for example how many [Music] permutations map to Three 6 7 one permutation maps to to the set that was one suggestion anyone have different suggestions is it more than one in the back three factorial okay um so we have one we have three factorial any other suggestions yes 7 factorial times 3 factorial here I'm going to put a question mark next to each of these because they're there are guesses let's see if we can figure out which one is right okay so let's see how many permutations map us to this set well we need to pick some permutation 1 2 3 4 5 6 7 8 9 10 some permutation of the 10 digits what do we know about these three digits our function says you take the first three entries and you form them into a set and that's the output so if our output is going to be 367 then these first three entries have to be 3 six and 7even in some order yeah 3 six 7 in some order I don't care which order because I'm just going to take the three of them and plop them into a set and a set doesn't care what order they are okay so I know that 3 six and 7 have to be in have to be in some order at the beginning of my permutation what about the end of the permutation what do I know about this what constraints do I have on it knowing that g of this permutation equals this set y right you can't have three six or seven you have to have all the other digits in some order but anything goes yeah so it's the other seven digits in some order this is exactly the set of permutations um where G of that permutation gives the set 367 so we have to put 3 six and seven in some order at the beginning put the other seven digits in some order at the end and how many ways are there to do that well this is product rule it's 3 factorial here on the left 7 factorial here on the right so 3 factorial time 7 factorial is indeed the number of permutations that map to this set was that specific to this set if I chose a different set of three digits would I get a different number of pre-images like if I instead chose zero and five and eight well it would be it would be the same constraint right I would have to have 0 five and eight in some order here and then the other seven digits in some order here it's still going to be 3 factorial * 7 factorial so in fact G is K to 1 where k equals 3 factorial time 7 factorial yeah because the the same argument we did for this particular example in fact works for every example great and since K is since since this map is K to 1 and we know K we can compute the size of our various sets on one hand we had permutations of 0 through 9 so that was 10 factorial we put it through a a k to1 map where K is this so 3 factorial * 7 factorial in the denominator and this equals the size of the set s sound good so we map from permutation to the set of the first three elements and we decided that every time we do that there U we lose by a factor of 3 factorial * 7 factorial um and so this is the number of size three subsets of 10 objects this by the way is an extremely useful formula um let me generalize this so the number of subsets of size K from a set of size n is well we can do the same kind of argument here map permutations and factorial of them where we take the first K elements and turn them into a set um and that reduces the number of options we have by K factorial on the left and N minus K factorial on the right right the same way it did here so this is n factorial / K factorial time n minus K factorial this is a really useful formula you're definitely going to want it on your cheat sheet but in fact hopefully by the time the quiz comes around next week you'll be so used to this formula and so sick of you I mean you'll love it so much um that you aren't you aren't going to need it on your cheat sheet because you're going to know it um and in fact we have a special notation for it we write it as n on the top K on the bottom surrounded in parentheses notice it's not a fraction we're not dividing n by K so don't write n divided by K in parentheses it's just n on top K on the bottom parentheses on the sides and this is pronounced n choose K so n choose K is written like this we have a formula for it like this um and it's pronounced n choose K because well we're choosing K things out of a a possible set of end things and like I said really useful formula if you're ordering pizza for dinner there are 15 sides or sorry 15 toppings that you can choose from to put on your pizza and you're supposed to choose three of them for some special promotion how many ways are there to do that if we've got 15 toppings we want to choose three how many ways are there to choose what your pizza is going to look like we don't care about the order of the toppings we just care about the set of three toppings that you pick it's in the name 15 choose three 15 choose three also known as 15 factorial divided 3 factorial 12 factorial yeah wonderful um if I need to select four volunteers out of this class of let's say 200 students um how many ways are there to pick a a set of four volunteers 200 choose four if I flip a coin 100 times flip a coin 100 times how many resulting sequence quences have 50 heads and 50 tails in some order there are 2 * 2 * 2 * 2 100 times number of options in total 2 to the 100 options how many of those results result in exactly 50 heads and exactly 50 Tales possibly you know intermixed well if we remember from Tuesday we had this bijection between binary sequences and subsets where we can turn a binary sequence into a subset by just taking all the ones and leaving out all the zeros take the indices of all the ones and you can do that here as well if we're looking at length 100 binary sequences with 50 ones and 50 zeros where one is head and zero is tail so number of length 100 binary sequences with 50 ones and 50 zeros from the bje we talked about on Tuesday this is injection with um the number of size subsets of one through 100 all we're all we're doing is choosing 50 out of the 100 flips to be ones to be heads and the rest are going to be tals so we're choosing 50 out of the 100 it's in the name 100 choose 50 that's the number of ways to flip a coin a 100 times and get exactly 50 heads and 50 Tails did that make sense wonderful interestingly um it's a little wet sorry 100 choose 50 divided by um what is it 2 to the 100 so the ratio the fraction of all results that have exactly 50 heads and 50 tals out of the total number of results you can have um turns out this is about 8% which to me is a little counterintuitive like 50/50 has got to be the most common result it's right in the middle assuming we have a fair coin um and yet it's not actually all that likely turns out we're pretty likely to be very near 50% um but it's kind of hard to hit it exactly if we doing a thousand flips instead of 100 I think it's closer to like 1% and it gets rarer and rarer as you go but but now we have the tools to count things like that questions about this n choose k um for reasons that we'll see next week this n choose K is called a binomial coefficient so binomial coefficient is the general name for these n choose K terms um again we'll see why on on Tuesday but if you see this term know that that's what we're referring to all right nice now the last technique I want to talk about the last counting technique um is extremely useful and extremely uh versatile but that also means that there are lots of ways to apply it and also lots of ways to apply it incorrectly so let's talk about how to do it and more importantly let's talk about what we need to make sure of before we know with confidence that we can apply [Applause] it and in fact conveniently it's built exactly on the generalized product rule this next technique that we're using in fact I'm going to keep that up so we can look at it okay and this technique um the book calls it oops counting with sequences um or counting with recipes excuse me the general idea is if you have some set you're trying to count well it would be really convenient if you could sort of build up your set build all the elements of your set via a sequence of convenient choices where you always have the same number of choices every time um so then you can use the generalized product rule so counting with sequences or recipes is just a way to construct your set with an easily digestible sequence of simple choices and as long as you ver ify that that does indeed construct your set exactly then you have your count with the generalized product rule um this will make a lot more sense when we start applying it so let's start doing that and the example we're going to use is counting poker hands um so we're going to use a standard deck of cards um a standard deck of cards has um 13 of what are called ranks and four suits um so um I'm told that some of you in the back can't see my comically oversized playing cards um so let's do better uh so we have four suits we have Spades and hearts in my left hand we have clubs and diamonds in my right hand those are the four suits and then there are 13 ranks no way this is going to work that goes Ace to I I I'm not going to try to Fan them out sorry uh three four five 6 7 8 8 n 10 then Jack then Queen then King those are the 13 different ranks um sometimes in poker the ace is the lowest of the numbers sometimes it's the highest of the numbers we're not really going to care about that so much um all we need to know is that there are four suits and 13 ranks and the deck consists of every combination of one of each so 13 * 4 is 52 cards so 13 ranks four suits these are called Hearts clubs Spades and diamonds um and there are 52 cards corresponding to every way to choose one rank and one suit that is the standard uh deck of cards we're going to be assuming that for these next examples come to me notes um and in poker a poker hand is a set of five cards so a poker hand is a subset of five cards out of the 52 possible cards and some subsets have more specialized properties they're less common and so they're more powerful and you you get to beat your enemies with powerful hands um that's poker right so let's see some different kinds of poker hands and the first one I want to look at is four of a kind kind so poker hand is called a four of a kind if you have all four cards of some Rank and then some fifth card so four of a kind because you have all four options of the same Rank and we want to count how many four of a kind hands are there in a standard 52 deck 52 card deck all right and we're going to do this this by counting with a recipe here and basically I kind of already wrote The Recipe but let's do it carefully um step one I'm going to choose a rank R and take all four cards of that Rank and then I'm going to pick one other card and putting the these two steps together we have now constructed a poker hand a set of five cards um and the claim is that this recipe is going to help us count the set of four of a kind hands great we can be a little more precise with this um what we've really done done excuse me um so first we've set up a set I'm going to call it a is going to be the set of R and C where R is a rank C is a card with rank not equal to R so this is sort of following our recipe we choose a rank for the four of a kind and then we choose a fifth card which can't be one of the four we've already picked um and B is the set of four of a kind hands we have the set a of pairs of sequences this is where counting with sequences comes in but B is really the set we're trying to count and we've set up a map from A to B we set up some function f from A to B which takes a rank and some other card and turns it into the hand rank of Hearts rank of diamonds rank of Spades rank of clubs and then this other card C does that make sense how this description of a recipe turns into this set this set and this map between them wonderful no objections so I'll continue um and now the claim f is a bje this is where counting with recipes this is what the technique is we want to construct some set of sequences where we're making a sequence of choices in order and we want to prove that the resulting set is injection with the set we're actually trying to count and as long as we can verify that bje then we know the size of B because we know the size of a with generalized product rule so we need to verify f is a bje and then we need to count the size of a in order to figure out the size of B so what does it mean for f to be a bje well we need F to be a function total surjective and injective okay so what does it mean for f to be a function it means for every input there's at most one output and that's usually built into the process um we have some deterministic way of turning this pair into this hand and there's not ambiguity this pair can't turn into seven different hands usually we get the function side for free and it's not really worth commenting on much what does total mean total means that um every pair turns into at least one hand and since we know it's a function every pair turns into exactly one hand specifically turns into a hand in the set we care about so we have our first first meaningful question um is f of r c a four of a kind for every way we have to fill out our recipe so is everything we construct are all of the hands that we construct really four of a kind hands or are we constructing some extraneous stuff if we're building extraneous stuff then we're not counting the right set cuz we're not building the right set so first meaningful question for every way we have to fill the recipe is the hand that we've constructed a hand that we're trying to count and in this case well we can see that yes yes it is because we have all four cards of the same rank um and we have a fifth card that is not any of these cards because it has rank that's different from R so this really is a size five sub set with four cards of the same rank so in this case yes great we need F to be subjective what does it mean to be subjective it means every four of a kind hand everything in B comes from something in a all right um can every four of aind hand be built so can we really construct everything that we're trying to count uh in this example uh let's look at an example if I have the four of a kind hand that has a three of Hearts the seven of Hearts the three of diamonds the three of clubs and the three of SP es how do I build that from my recipe how do I get that as an output of my function f what is r and what is C yep okay all right R is three and C is the seven of Hearts oops that's exactly right the rank R is supposed to tell us the rank that we have four of we have four threes so the rank is three the card C is supposed to be the fifth extraneous card in the hand that isn't part of the four of aind uh and that's the seven of hearts in this example was there any ambiguity um or sorry more importantly will we always be able to do this this for every four of a kind hand will we always be able to pick out a rank and pick out the fifth card yeah yeah so we are subjective we can build every hand that we care to build the last thing we need to check is our function injective all right and what it means for f to be injective is can every for of a Kind hand be built in exactly one way exactly one way is what it means to be surjective and injective combined so for every four of a kind hand is there only one way to build it with our recipe and in this case yeah for for kind of the same reason we know which rank we have four of we know which card is the other card that is that doesn't match that Rank and there's only one way to do that in fact there's exactly one way to do that so we have built everything in our set exactly once with our recipe so in this case yes which means it is injective and now we've decided therefore f is a bje are we done wait what were we even trying to do oh yeah we were trying to count the number of for kinds okay we did one of the two important steps we showed that a is injection with B but now we need the actual number the actual size of B we need we need the count and if we want to count the size of B now we know it's enough to count the size of a so we can use this time the generalized product rule so size of a well remember we're choosing an r and we're choosing a c so how many options do we have for our rank r 13 there are 13 ranks Ace through King we can choose any one of them freely how many options do we have for this last card C that doesn't have this rank MH 48 perfect there are 52 cards in the deck we've already chosen four of them of this rank there are 48 options left so by the generalized product rule the size of a is 133 * 48 so that's the other thing our recipe needs to satisfy it needs to form a bje with the set we care about but it also needs to be easy to count with the generalized product rule and that's the strategy break down your set you can think of it as building up your set via a sequence of simple choices make sure it's a bje and then count it with generalized product rule let's do that again let's look at another example this time I want the number of hands with all four suits how many hands have all four suits these are useless in poker this this doesn't actually get you anything um unless it has some other coincidences as well but it's fun to count how many hands have all four suits and let's see if we can break this down into a recipe all right here's my recipe choose a heart card uh choose oh sorry my notes have choose a club card first then choose a heart card uh then choose a space card choose a diamond card and then choose a fifth card here's my recipe choose a a heart a card that has clubs a card that has hearts a card that has Spades a card that has diamonds and then whatever other card I want to fill the last spot and let's see if this is a valid recipe for this problem and we can boil that down we don't always have to think okay injective serg all that all that fun stuff we can boil it down into sort of these bullet points which we can even compress a little further um so first of all is every hand constructed using our recipe um actually in our set so does every hand we construct really have all four suits and finally um does sorry can every hand in our set be constructed in a exactly one way these are the two questions we need to ask can we build everything we care about and uh can we build everything we care about in exactly one way and if those two things are true then our map is a bje and our recipe is valid um but these are maybe easier to think about and remember than going through that bijection rigal just remember that it's a bijection underneath that's that's what we're doing that's what the Shepherds do they count with bijections um so let's answer these questions um is every hand constructed with this recipe actually a hand that has all four sets all four suits yeah yeah absolutely these first four cards are always going to have all four suits and the fifth card doesn't really help or hurt us so the answer to this first question is yes yes yes it does can every hand in our set can every hand with all four suits be constructed via our recipe in in exactly one way and let's look at an example for that examples are really helpful so here's my hand I'm going to look at the six of diamonds the Queen of Hearts the Ace of Spades the two of clubs and the Jack of Spades let's say we're trying to build this particular hand using our recipe well what does it tell us to do first choose a club card all right I'm going to choose two of clubs then choose a heart card great I'm GNA choose um the Queen of Hearts then choose a spade card uh great Ace of Spades then choose a diamond card uh six of diamonds and then my last card whatever that is it's Jack of Spades so these are the choices I make in the five steps of my recipe I indeed have built this hand can I do that in exactly one way is there only one way to fill out this recipe in order to get this hand can someone find another yep yeah the ace and the Jack the two Spade cards those could have swapped places in step three when I was told to pick a spade card I could have picked the Jack instead and then the ace would be my fifth my fifth extraneous card at the end so there are in fact two different ways of filling out my recipe in order to get this particular hand so it's not a bje we have failed our second condition this recipe does not work with this method sometimes you can salvage it in this particular example you can salvage it it turns out um this map that we've constructed is two to one because there are always exactly two ways to fill out the recipe whichever card you have in the spot it can potentially swap places with its partner that has its same suit but there are always only two ways to do that so instead of constructing a baction we've constructed a two to one map which means we can still count the number of ways of filling out the recipe and then just divide it by two so let's do that um number of ways to fill out this recipe actually let's just do it right here how many ways are there to choose a card that has clubs just call it out how many Club cards are there in a deck 13 yeah I think I heard that let's pretend I did um how many heart cards are in a deck 13 how many Spades 13 how many diamonds 13 how many choices do I have for my last card 48 again I'm allowed to choose any card that isn't one of the four I've already picked which means the number of ways to fill out this recipe is 13 * 13 * 13 * 13 * 48 so our answer is 13 to 4 * 48 divided by two because we decided it was a 2: one map so this is the number of hands that have all four suits did that make sense this is a perfectly valid way to do this um this counting with sequences technique um generalizes very nicely to this K to1 mapping instead of uh one: one mapping a bje BS are maybe more elegant or easier to think about if you can make it but if it's if it's two to one instead that's great just divide by two um just so we can see some different strategies uh here is a way that we could have done that uh with a bje instead of needing a two to one map um so a different recipe is the following so first choose a suit s um that will have two cards so in in every hand that has all four suits there's always one suit that has two cards and the other three suits have one card so first we're going to choose which suit has two cards all right call the other three suits uh T1 T2 T3 in alphabetical order so once I've chosen which suit I'm going to single out for the pair I've just given names to the other three suits and it's in alphabetical order so there's no ambiguity there so now my four suits are s and T1 T2 T3 all right next thing I'm going to do choose two cards um with suit s choose one card with suit T1 then choose one with suit T2 then choose one with suit T3 and that's my recipe all right and it turns out that this really does give a bje this is a onetoone map between ways of filling out this recipe and hands that have all four suits because that ambiguity of which of these two cards are we choosing first well we're not choosing them first we're choosing them together uh so we've gotten rid of that ambiguity by doing it in this way and let's see how many ways there are to fill out this recipe first we have to choose a suit s and there are four suits to choose from then we have to choose two cards with suit s and there are 13 choose two ways to do that now choose a card with suit T1 13 ways with suit T2 13 ways with suit T3 ways and so the answer is four * 13 choose two * 13 * 13 * 13 which does look a little different from the answer we got up there but if you check they're actually the same answer does that make sense sound good wonderful one last example I want to look at how many hands how many hands have at least one pair so pair means same rank so how many hands have at least two cards of the same rank so at least two queens at least two sevens something like that maybe you have three or four Queens maybe you have two queens and two sevens or three sevens all of that is fine as long as at least two of your cards have have the same rank all right and here is my proposed recipe okay choose a rank for the pair uh let's let's call it choose rank R for the pair choose two cards with rank r choose three other cards here's a recipe to build up hands that have at least one pair we know they have a pair because here's the pair in step two everything we build has at least one pair and that's the first of our two important questions um does everything we build have our property the answer in this case is yes does every thing we want to build come from our recipe in exactly one way is the other question we need to ask does every hand with at least one pair come from recipe in exactly one way right this is the other question we need we need to ask usually this is the harder of the two questions because usually when trying to build our set we're building it in order to have the property we care about so that first of the two important questions is usually fine is this true um and let's let's look at an example here um so what if we want the hand Ace of Hearts Ace of Spades two of clubs two of diamonds three of Hearts how can I get this hand with my recipe can someone give me away yep mhm okay let's choose our rank as a for our first step second step is two cards with rank Ace Ace of Hearts and Ace of Spades for our second step um and for our third step the other three cards in this case that's two of clubs two of diamonds three of Hearts this is a way to fill out our recipe in order to get that hand who can give me another way yep all right rank equals two all right um then then the two cards of rank two we're going to pick are going to be two of clubs and two of diamonds and then the last step of our recipe is choose the other three cards which in this case are Ace of Hearts Ace of Spades and three of Hearts so we found two different ways of filling out our recipe to get this hand so we've already broken our second question um this this answer is no but we've already seen a possible backup if it's always two: one then we're fine then we just divide by two and get our answer but let's look at a different example uh what if our hand is instead Ace of Heart Hearts Ace of Diamonds Ace of clubs three of clubs five of Spades a recipe really breaks down into two phases first pick a pair and then pick the other three cards right pick the rank for a pair then the sorry pick a suit for the pair then the ranks for the pair really pick a pair and then pick the other three cards is what our recipe says well there are lots of ways to do that for this hand we could pick this pair for our first two steps of the recipe and then choose the other three cards or we could pick that pair and then choose the other three cards or we could pick that pair and then choose the other three cards so this one had two ways this hand has three ways here's another example Ace of Diamonds oops Ace of clubs three of clubs and then three of Spades same example as before but now these are both threes instead of a three and five How many pairs are there now 1 2 3 four different pairs so there are four ways to build this with our recipe let's keep going what if we have a four of a kind we have all four aces on and then we have the Queen of Diamonds uh so that was clubs hearts spades diamonds now there are 1 two three four five six different pairs so there are six different ways to construct this hand with our recipe did all of these examples make sense cool and what we've learned here is that this recipe is utter garbage this recipe does not help it doesn't make a bje because there are multiple ways to build this hand it doesn't make a k to1 mapping because there a different number of ways depending on which hand we're trying to build so we can't just count this and then divide by two or divide by three um question yeah uh so with with this hand um steps one and two really say pick a pair and then step three says pick the other three cards well how many pairs can we pick in this hand there are four choose two ways to pick two of the aces 4 CH two is six um or we can just look at it it's one two 3 um four five six those are all the pairs yeah good question so this recipe does not help I don't care how many ways there are to fill out this recipe I don't care how easy it is to count with generalized product rule the thing it's counting is not at all related to the problem we care about so this is the thing you need to watch out for and that's why these two questions are the things you should ask yourself about every recipe you see can you build everything you care about and is everything you care about built in exactly one way and it it takes some practice and some skill and some patience to figure out the right recipe in order to satisfy both of these constraints and to work out any of the ambiguities that we see in an example like this all right that's everything I have thank you so much