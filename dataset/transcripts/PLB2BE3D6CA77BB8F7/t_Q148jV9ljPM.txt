the following content is provided under a Creative Commons license your support will help MIT open courseware continue to offer highquality educational resources for free to make a donation or view additional materials from hundreds of MIT courses visit MIT opencourseware at ocw.mit.edu he ended up last Thursday's lectures talking about gaussian distributions as he said one of the interesting things about a gaussian is it can be fully characterized by its mean and its standard deviation and this concept of being able to take a a curve and characterize it with a small number of parameters is something we'll continue to see as a very important way of of looking at modeling physical systems and in fact that is the part of the term that we've entered and it's a part of a term we'll spend a lot of time on it and the whole issue is how do we construct computational models that will help us understand the real world um when we can we love to model distributions as gaussians or normal because they're so nicely characterized we have nice rules of thumb that tell us how close things lie to the mean Etc however it's important to understand that if something is not actually normally distributed and we pretend it is we can get very misleading results out of our model so let's think about the fact that not all distributions are normal so consider rolling a single die um each of the six outcomes is equally probable so we would not expect to see a peak say at three or four and a trough at one a three or a four is same probability as one um similarly if one thinks about the Massachusetts state lottery or any Fair Lottery uh the probability of each number coming up is the same so it would be a flat line if you had a Million number numbers the probability of each number is one over a million and so if you plotted the probability of each number again you'd get a flat line such distributions are called uniform each result is equally probable we can fully characterize a uniform distribution with a single parameter its range if I tell you it ranges over one to a million that's all you need to know to what to know what the distribution looks like so they're even simpler than normal distributions uniform distributions occur quite often in games devised by humans but almost never in nature uh and typically they're not very useful for modeling complex systems right we have to work hard to invent something that's normal most things are not naturally that way uh sorry to invent things that are uniform normal as we saw last time occurs all the time in nature the other thing that occurs quite frequently are exponential distributions they're used in a lot of different ways for example people who are trying to plan things like Highway systems use exponential distributions to model interarrival times how much time there is between each car say entering the Mass Turnpike uh we'll see many other examples of them the key thing about them is they have the property of being memoryless they are in fact the only continuous distribution that are memoryless so consider let's look at an example with which some of you are more familiar than you want to be uh the concentration of a drug in the human body uh for those who are watching an open course where it's not because all the students are drug users it's because they're working in a problem set that involves modeling drugs in the human body um so assume that I don't know how many of you are drug users all right assume that at each time step each molecule has a probability P of being cleared by the body the system is memoryless in the sense that at each step the probability of a particular molecule being cleared is independent of what happened at the previous steps so the fact that a molecule didn't get cleared at time T has no impact on whether well or not it will be cleared to time t E1 the probability doesn't go up as it doesn't get cleared so it's independent of the previous steps so at time one time T = 1 what's the probability of the molecule still being in the human body if the probability of being clear at each step is p it's one minus p right so if the probability of being cleared was 0.5 at each time step the time that it's still exists after the first time step is 1 minus .5 ie5 so what's the probability of it still being in the human body at time T equals 2 well it's that it wasn't cleared at time one since it's memoryless whether or not it's clear at time two is also one overp and so it existing still after two steps is going to be 1 minus p^ s we saw that with independent probabilities and the nice thing about working with exponential distributions is we know that the probabilities are independent more generally it's still being in the body at time t is going to be 1 minus P to the T so we have a nice closed form solution that will give us the probability of each mod each molecule surviving until time T all right so now let's look at the question of suppose that at time T equals z there are M molecules or m0 mole molecules and now we can ask how many molecules are there likely to be at any time T well let's write a little program to look at that so that's this program clear we'll start with n the number of molecules the probability of clearing it each step and the number of steps and we'll keep track of the num remaining so at the beginning we have n molecules remaining and then for T and range steps we're just going to multiply m n the number we started with times the probability of each molecule still existing and then we'll plot it that makes sense so this is a tiny bit of code that basically implement Ms that formula over on the board let's run it and we'll run it starting with a th molecules the probability each being cleared of 01 and we'll look at 500 time steps all right this is kind of interesting we're getting a straight line that doesn't look like an exponential does it or does it why do we have a straight line here somebody because I've used a semi log axis so let's look at it now without that we now see something that really does look like exponential decay it drops very quickly in the beginning and then it ASM tootes towards zero but of course it never quite gets there in a continuous model if we had a discrete model we would eventually have to get to zero because that last molecule would either get cleared or not but in a continuous World which is in this case probably not a good model or not a perfect model I should say because it allows us to have a quarter of a molecule there which we kind of know is physiologically nonsense biochemically nonsense but you can see we get this exponential do Decay but as we saw previously if we plot an exponential on a log axis as the math would tell us we get a straight line and that in fact is a very simple and nice way to see whether you have an exponential distribution put it on a log axis see if it's straight all right um it's a good trick and uh one we use a lot okay um so there I took the physical model I described and derived through a little bit of math what the result should be and implemented some code to give us a plot of what that told us let's look at a different way of doing it I could have instead written a Monty Carlos simulation to do the same kind of thing so here instead of working out the probabilities I just tried to write some code that exactly mimicked the physical process that I was talking about so instead of knowing that I could just look at 1 minus P to the T at each step I cleared some molecules okay I just Ed random. random if I came out with something less than the clear probability I got rid of that molecule and I did that for each molecule deciding whether or not it should be cleared okay for molecule m in range looking at all the remaining molecules I either clear one or I don't and then I can plot that so let's look what happens if I compare the two results so I'm going to do the original analytical model of clear and then the simulation model of clearing and see what I get well much to my relief I get kind of the same curve not exactly you'll notice that the blue curve the analytical model is a beautiful smooth curve whereas the red curve has got a little bit of jaggies it's clearly very similar to the blue curve but not identical um doesn't surprise me there's some Randomness in there um and in fact I could have gotten unlucky and gotten something that didn't look like the blue curve but given the sample size that would have been quite surprising um which of these two curves I shouldn't say which of these two curves which of these two mod models do you like better so we've got two models we'll got one I'll call the analytic model and one I'll call the simulation model both show exponential decay that is to say the number of molecules declines exponentially quite quickly but they're not quite identical so which would we prefer which would you prefer there is no right answer for this uh just for fun I'll ask for a poll who prefers the analytical model who prefers the EXP the simulation all right um somebody who prefers the analytical tell me why it looks a lot nicer well all right so it looks a lot nicer um that's kind of human nature to prefer something that looks prettier uh on the other hand what we're really interested in is is the question of not Aesthetics but Fidelity to the actual physical situation um a straight line might look even nicer but it wouldn't be accurate um so when we think about evaluating a model what we really should be asking I think are are two questions one is fidelity and in that another way to think about that is credibility typically we're creating a model because we don't know the actual answer and we're trying to see what might actually happen if we say ran a physical experiment and so we have to ask our Quest the question of do we believe the results the model are giving us and so that sort of boils down to not a question of mathematics but a question of reasoning can we look at the model and convince ourselves that it is accurate and the other question is utility and I can think about that as in some sense what questions are answerable with the model so the first one is pretty much a question of personal preference and for this particular simulation which is pretty simple this particular model um it's hard to argue that one is more believable than the other um I might argue the second is more believable because it's a direct implementation of the physical system I didn't rely on my math being right but the math is pretty simple here what's I think more apparent is there in this case there's some additional utility offered by the simulation model and it's often true of that simul ation models that we can ask what if questions because we can easily change the model to be slightly different in ways that is usually harder for an analytic model for example suppose these drug molecules had this peculiar property that every 100 time steps they could clone themselves and so every molecule that was there became two molecules unlikely for the drug not so unlikely for say a bacterium or a virus as you've seen well a little hard to figure out how to do the probabilities in the case that that happens because we'll no longer get this beautiful simple exponential decay but quite easy to think about how we would change the simulation model which is what I have done here so I've said here if time is not equal to zero and time is evenly evenly divisible by 100 uh then I'm just going to uh double the number of molecules because every living molecule will clone itself and now we'll see what we get well we get this rather peculiar looking Sawtooth distribution we still have overall an exponential decay but we see every once in a while it jumps up and then it comes down it's not so easy to write a simple closed form formula that describes this but very easy to produce a simulation model that gives us some insight to what's happening here and that's I think one of the great attractions of simulation modeling is is we get to do this sort of thing many many physical systems exhibit exponential decay or exponential growth for example well people in Japan now we're very interested in half-life of various radioactive particles uh and when we talk about Half-Life we mean that there is exponential decay in radioactivity that's what Half-Life is so people are looking at what is the halflife of iodine say versus other radioactive particles we also see exponential growth a lot um I used to have a swimming pool which I had to maintain and I realized if I let the algae get out of control in the pool it went from having very little algae to having a lot of algae very quickly because the algae doubles every period And so all of a sudden it takes off so exponential growth is exponential decay are important things we see them all the time um people use the word very carelessly when they mean quick growth they say exponential but of course it has a very specific meaning okay we've now for the moment at least finished our short Venture into probability and distributions we'll come back to it a little bit when we talk about how to lie with Statistics but before we do that um before we leave probability for a while just for fun I want to pose to you one of these probability problems that hurts people's heads um it's a very popular one um how many people here have heard of the Monty Hall problem okay a lot of you so as we play the game those of you who know the answer I'll ask your forbearance not to to blurt it out so it's a wonderful problem um it's so exciting that people have written books about it um so here's how it works this is from a game show uh called uh I think let's make a deal with the host Monty Hall who did it forever so the way it works is you start with three doors behind one of the doors is a great prize for example an automobile behind each of the other doors is a booby prize typically a goat I don't know why people don't like goats but apparently they don't so the way it works is Monty invites someone from the audience chosen on the basis of their outlandish costume and they come down and they're told what wonderful priz is behind one of the doors and then they're asked to choose a door so the person might choose a door and say I'll choose door number one Monty then opens one of the other two doors he knows which doors have the goats and which door has the car he opens a door with a goat so now there are two doors left and he asks the contestant do you want to switch do you want to stick with door one or would you like to switch to door two and the Monty Hall problem is what should she do so and the audience will always shout out advice so I do have a simulation of that I'd like like to run I need three people to volunteer to be doors come on three doors it's not so hard come on down and I need one person to volunteer to be the contestant is anybody in a costume here I don't know Mitch is kind of in one but uh all right I needed a contestant all right you are door number two you are door number one you are door number three a contestant please there's a dollar in one of these you can actually win something of value all right we have a contestant coming down oh right we have two contestants coming down all right the aisle wins all right choose a door you choose door number two all right let us open door number one and let's see what's in door number one one show it to the class it is a goat now you have a choice you can stick with your original decision or you can switch to door number three suggestions all right she is going to stick with door number two Let Us open door number two she wins a dollar it is yours don't spend it all at once thank you everybody all right now was she lucky or was she smart is the question does it matter there was this was a subject of enormous debate in the mathematical community in 1991 Parade Magazine published a correct solution to the problem and approximately 10,000 readers including a thousand with phds and Mathematics uh wrote to parade telling them they had published the wrong solution and the debate roiled on so who thinks she was lucky and who thinks it actually matters whether you switch who thinks it matters those who don't know the problem who thinks it doesn't matter all right it doesn't matter is Win by a small margin and in fact that's what the readers of parade thought but they were wrong it matters a lot whether you switch let's do the analysis first analytically and then we'll do a simulation so the player makes a choice this is some interesting ways to think about probability and with the probability of one over three the player has chosen the correct door all right now that means that with a probability of two out of three the car lies behind one of the other two doors now here's the key step Monty opens a door that he knows does not contain the prize the key thing to notice here is the choice of doors is not independent of the choice of the player because Monty will never choose the door that the player has initially picked now since the probability of the prize being behind the two remaining doors is two out of three the probability of the prize being behind the door one of the doors that he did not open is 2X out of three in fact behind the other door so in fact you were extraordinarily lucky to win the dollar because switching doubles the odds of winning because remember your odds of winning were one out of three when you first chose the door that left two doors the probability of the car being behind one of those two doors was 2/3 and Monty opened the one that didn't contain the car because he knew it contained a goat so that must mean the probability of the car being behind the remaining door is two out of three so you double your odds of winning the logic is kind of clear it didn't stop people from aggressively debating it for the longest of time and I kind of didn't believe it myself so I did what I usually do is I wrote some code and let's look at two pieces of code here and again the theme Here is how we can use simulation models to understand slightly complex or more than slightly complex situations so here's the way the game works so I've got a simple simulation that counts the number of wins uh and the way it's done is uh for T and range number of Trials uh the contestant picks one two or three at random I've tried to mimic exactly the game um so the car is behind one of the doors the contestant gets the door and then there's this we call choose function to open one of the two and we're going to have two ways of choosing which door gets opened so the Monty hallway Monty chooses he takes the guest door and the prize door and he opens the non guest that contains the goat so if one is the guest door and one is not the guest door and it's not the prize door then he opens one same thing for two and if one or two is not the choice he opens three as opposed to the random choose function which just chooses at random between the doors that weren't guessed so it might open the car at which point the contestant is told sorry you lose you don't even have a choice anymore we're then going to run the simulation with Monty choosing and random choice and see what we get so you've got the code on the handout to do this I'm not going to go over the details the thing to notice about it is it's yet another example of how we can use PAB to do some interesting plots this time I'm going to print a pie chart just to show that we can do those and let's see what happens so people understand what's going on that I've got this function two functions Monty chws and random chws I'm using those functions as parameters a very convenient thing and running the simulation each way and let's see what happens all right so what we see here is when I run Monty chws sure enough it comes out to about 2third of the time you win if you change and only onethird of the time if you don't pretty close to what the math predicts in fact sort of astonishingly close um on the other hand if Monty had been just chose choos using at random then we see it really doesn't matter whether you switch or not so again from a probability point of view we see how subtle these things can be based upon whether decisions are independent of previous decisions are not independent and we also see in some sense that we can write a very small piece of code that actually provides a simul of a real in this case game and we can have I think a lot of confidence we can look at the code say is it really the way the game is described yes and then we get nice results that tell us what to do and in this case it tells us that if Monty is choosing based upon what he knows then by all means you should switch and uh I'm sorry that it didn't work out that way when we played the game but that's the way probabilities are that uh you didn't switch and you lucked out so now you're a rich lady all right so that's one things we can do one more thing I want to talk about before we leave the subject of Monte Carlo simulations so it's pretty clear that these kind of simulations are very useful for tackling problems s in which predictive non-determinism plays a role and at first blush you might think that okay that's the only time we should use a Monte Carlo simulation when there's some inherent Randomness in the problem and therefore it's hard to model analytically and therefore we'll use Randomness in the code interestingly enough particularly in recent years but for quite a while people have understood the notion of using randomized algorithms to solve problems in which Randomness plays no role and that's a little surprising but incredibly useful concept to sort of put in your bag of tricks the ability to use randomization to solve problems that are not random so let me talk about an example consider the concept of Pi um Pi has been around for a long time for thousands of years people have known that there's a constant uh called Pi since about the 18th century associated with circles such that the circumference of a circle is always going to be equal to Pi times the diameter the area of a circle is always going to be pi r squ Etc so for thousands of years people knew that there was such a constant they just didn't know what it was and there's a long and beautiful history of people attempting to estimate Pi uh about the earliest estimate I found is from the Egyptians in something called the Rind Papyrus uh from 1650 BC or thereabouts and it estimated pi to be four times let me get this right 8 over squared which is 3.16 more or less that was pretty good uh about a thousand years later um an estimate of Pi appears in the Bible um in a or at least is implied by the Bible in a description of one of Solomon's construction projects it says and he made a molten sea 10 cubits from the one brim to the other it was round all about and his height was 5 cubits and a line of 30 cubits did composite roundabout uh so you can take that and solve for p uh because you've given the circumference other details the diameter you can solve for pi and you see if you do that Pi comes out to be exactly three um not quite as accurate as the Egyptians had a thousand years earlier now perhaps the Bible is wrong I don't want to offend anybody but or perhaps the molten sea wasn't perfectly circular or maybe the circumference was measured from the wall outside and the diameter from the inside or maybe it was just that was a good enough number to use in construction because a cubit was something like the length of your forearm different people of different length forearms and there was no reason to try and be more precise who knows um the best estimate of Pi in ancient times was from Archimedes of uh Syracuse and he did something quite amazing for uh around 200 BC um he didn't give the value of pi he said I don't know what the value is but I can give you an upper bound and a lower bound and he did this by carefully constructing a polygon with a huge number of tiny little straight lines that would approximate a circle and then actually measuring things um so he built a polygon with 96 sides and concluded that Pi was somewhere between 223 divided by 71 and 227 very sophisticated at the time to be giving upper and lower bounds if we look at what the middle of that is it's actually amazingly good it's uh 31418 not bad all right what does this have to do with Monte Carlos simulations many years later uh in fact in the 1700s um two French mathematicians invented another way of computing Pi uh Buon and llas actually Buon first proposed it he got it wrong leas corrected it and they said we can find pi using a stochastic simulation they didn't use those words but that's what they basically describe and they talked about it in terms of needle dropping so think about having a square and inscribing in the square a circle and you'll excuse my lack of artistic ability so they put one of those on the floor and then they drop needles which would get carried around by the wind and land in some random place and they counted the number of needles that landed in the circle and the number of needles that land in the Square but not in the circle and then they did a little math let's assume for the sake of argument here that the radius of the circle is one they observe the following equation must hold that the needles in the Circle over the needles in the Square should be equal to the area of the circle divided by the area of the square seems logical if they're landing at random that they would get distributed proportional to the area and then they solved for pi knowing that the area of the circle is pi r squared they could then say that Pi in fact in this case since we know the radius is one and 1 squar is one that tells us that the area of the circle should be PI right Pi * 1 so they said Pi is equal to the area of the circle which is equal to the area of the square times the needles in the circle divided by the needles in the Square so they had that formula Unfortunately they couldn't drop enough needles to get a very good estimate so they described how to do it but this was an experiment they did the math they had a nice formula they did not have an experimental apparatus that would actually let them drop enough needles to get a very good estimate it would take a lot of patience and maybe they wouldn't land at random who knows what fortunately today we have a much easier way to do that so we can write some code that does the simulation we're going to have a way to throw the needles or drop the needles and then what we're going to do is we're going to simulation that we're going to run that's going to I don't know how many needles to drop I'm going to keep dropping needles until I get a small enough standard deviation that I can be confident that I have a bound on Pi with some confidence interval in fact I'm going to use 5% here and use that rule of thumb that Mitch talked about last time about standard deviations and say all right I'm going to keep running the experiment until the standard deviation of Trials is 5% or less you know small enough two standard deviations is small enough that I get my answer within some Precision I'm going to ask here for a Precision of 0.01 and so therefore my standard deviation should be that Precision divided by four because I'm looking for two standard deviations on either side of the mean which is why I'm dividing by four not by two so I divide by four and I'll see what I get so let's run it and this will take a little bit of time it will take no time if I don't uncomment the code to actually run the experiment estimate pi and we'll get some estimates so what we can see here is that my estimates change as I run experiments every time I run this or not every time I often get a different number of needles I need but you can see that my first estimate is not very good um my estimates do get better though not monotonically better but what does get monotonically better is the standard deviation gets smaller and smaller which is what you would expect so there's no guarantee that by running a bigger trial I get a more accurate result what there is a guarantee is that I can have more confidence in my result I could have gotten lucky and run a small number of needles and gotten it exactly right by chance but I would have been wrong to assume it was right because let's pretend we didn't know what the value of pi was AR priori but what I can say here is since my standard deviation is now 0.002 and if we look at it we'll see that these things are are normally distributed I can be pretty sure that the true value of pi is 3 147 Etc plus or minus Etc with a 95% confidence so this is using the stuff that you saw in the last lecture to now combine that statistical background with this simulation to compute a pretty darn good estimate of Pi and if I ran more needles you if I wanted to get more precise I can get as precise as I want to be you know as many digits of precision as I want so again what we see here is that we've been able to solve a problem that had nothing to do with Randomness the value of pi is not a random number and yet we used Randomness to solve it very common technique and we use some very simple statistics to know whether or not we should believe our solution and so those are the two lessons I want you to take home now if you look at your handout you'll see that at the bottom I've used the same technique to do integration if you think about what integration means when you ask what is the integral of some formula what you learned when you first looked at calculus was that that was the area under some curve right that's what the integral is and you learn all sorts of complicated mathematics to solve complicated integrals well you can pose an integration problem exactly analogous to this you draw your curve you drop some needles you count how many fall under the curve how many don't fall under the curve in some larger area and you can solve the integration and that's exactly what I've done here where f is the function being integrated I won't go through the details now in fact this kind of simulation is not a good way to solve single integrals it's much better to use something like simpsons's rule um whatever that is um but in fact it is frequently used in practice for more complicated things say double or triple integration where the mathematics gets fairly complicated people will often solve those problems using a Monte Carlo simulation it's a practical method for tackling it and again in your handout you'll see a very simple piece of code that does a double integral all right that's all for today