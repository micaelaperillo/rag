having slogged through the formal definition of bigo notation I want to quickly turn to a couple of examples now I want to warn you up front these are pretty basic examples they're not really going to provide us with any insight that we don't already have but they serve as a sanity check that the bigon notation is doing what its intended purpose is namely to suppress constant factors and lower order terms obviously these simple examples will will also give us some uh facility with the definition so the first example is going to be to prove formally the following claim the claim states that if T of n is some Pol for of degree K so namely a n the K plus all the way up to A1 n plus a not for any integer K positive integer K and any coefficients AI positive or negative then T of n is Big O of n the K so this claim is a mathematical statement it's something we'll be able to prove as far as you know what this claim is saying it's just saying Big O notation really does suppress constant factors in lower order terms if you have a polinomial then all you have have to worry about is what is the highest power in that polinomial and that dominates its growth as the end goes to Infinity so recall how one goes about showing that one function is Big O of another the whole key is to find this pair of constants C and N not where C quantifies the constant multiple of the function you're trying to prove Big O of and N not quantifies what you mean by for all sufficiently large n now for this proof to keep things very simple to follow but admittedly a little mysterious I'm just going to pull these constants C and N knot out of a hat so I'm not going to tell you how I derive them but it'll be easy to check that they work so let's work with the constants n equal to 1 so that's a very simple choice of N and then C we're going to pick to be the sum of the absolute values of the coefficients so the absolute value of a K plus the absolute value of a k minus one and so on remember I didn't assume that the PO original polinomial had non- negative coefficients so I claim these constants work in the sense that we'll be able to prove the that assert you know establish the definition of Big O notation what does that mean well we need to show that for all n at least one because remember we chose n not equal to 1 T of n this polinomial up here is bounded above by C * n the K where C is uh the way we chose it here underlined in Red so let's just check why this is true so for every positive integer n at least one what do we need to prove we need to prove T of n is upper bounded by something else so we're going to start on the left hand side with t of N and now we need a sequence of upper bounds terminating with C * n the k for our choice of C underlined in Red so T of n is given is equal to this polinomial underlined in green so what happens when we replace each of the coefficients with the absolute value of that coefficient well you take the absolute value of a number either it stays the same as it was before or it flips from negative to positive now n here we know is at least one so if any coefficient flips from negative to to positive then the overall number only goes up so if we if we apply the absolute value to each of the coefficients we get an only bigger number so T of n is bounded above by the new polinomial where the coefficients are the absolute values of those that we had before so why was that a useful step well now what we can do is we can play the same trick but with n so it's sort of annoying how right now we have these different powers of n it would be much nicer if we just had a common power of n so let's just replace all of these different n's by n the K the biggest power of n that shows up anywhere so if we replace each of these lower powers of n with the higher power n the K that number only goes up now the coefficients are all non- negative so the overall number only goes up so this is bounded above by the absolute value of akn the K up to absolute value of A1 n the K plus a n the K I'm using here that n is at least one so higher powers of n are only bigger and now you'll notice this by our choice of C underlined in red this is exactly equal to C * n k and that's what we had to prove we had to prove that t of n is most C * n the K given our choice of C for every n at least one and we just proved that so end of proof now there Remains the question of how did I know what the correct what a workable value of c and N not were and if you yourself want to prove that something is Big off something else usually what you do is you reverse engineer constants that work so you would go through a proof like this with a generic value of C andn not and then you'd say uh well if only I choose C in this way I can push the proof through and that tells you what C you should use if you look at the optional video on further examples of ASM totic notation you'll see some examples where we derive the constants via this reverse engineering method but now let's turn to a second example or really I should say a non-example so what we're going to prove now is that something is not Big O of something else so I claim that for every k at least one end to the K is not Big O of n the K minus one and again this is something you would certainly hope would be true if this was false there'd be something wrong with our definition of Big O notation and so really this is just to get further uh comfort with the definition how to prove something is not big go of something else and to verify that indeed you don't have any collapse of distinct powers of polinomial which would be a bad thing so how would we prove that something is not biger of something else the most frequently useful proof method is going to be by contradiction so remember proof by contradiction you assume what you're trying to uh establish is actually false and from that you do a sequence of logical steps culminating in something which is just patently false which contradicts basic axioms of mathematics or of arithmetic so suppose in fact n the K was Big O of n the K minus one so that's a assuming the opposite of what we're trying to prove what would that mean well we just refer to the definition of bigo notation if in fact n the K hypothetically were Big O of n the K minus one then by definition there would be two constants a winning strategy if you like CNN KN such that for all sufficiently large n we have a constant multiple C * n kus1 upper bounding n the K so from this we need to derive something which is patently false that will complete the proof and the way the easiest way to do that is to cancel into the K minus one from both sides of this inequality and remember since n is at least one and K is at least one it's legitimate to cancel this n the K minus one from both sides and when we do that we get the assertion that n is at most some constant C for all n at least n not and this now is a patently false statement it is not the the case that all positive integers are bounded above by a constant C in particular C + one or the integer right above that is not bigger than C so that provides the contradiction that shows that our original assumption that n the K is Big O of n the K minus one is false and that proves the claim n the K is not big of n the K minus one for every value of K so different powers of polinomial do not collapse they really are distinct with respect to bigo notation