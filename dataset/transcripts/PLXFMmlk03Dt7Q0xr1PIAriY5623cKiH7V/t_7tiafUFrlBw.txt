all right so the plan for this video is to prove the correctness of the divide and conquer closest to pair algorithm that we discussed in the previous video so just to refresh your memory how does the outer algorithm work well we're given end points in the plane We Begin by sorting them first by x coordinate and then by y-coordinate that takes n log n time then we enter the main recursive divide and conquer po of the algorithm so what do we do we divide the point set into the left half into the right half capital Q and capital r then we conquer we recursively compute the closest pair in the left half of the point set Q we recursively compute the closest pair in the right half of the point set R there's a lucky case where the closest pair in the entire Point set lies either all on the left or all on the right in that case the closest pair is handed to us on a silver platter by one of the two recursive calls but there Remains The Unlucky case where the closest pair is actually split with one point on the left and one point on the right so to get our nlog and running time bound analogous to merge sort in our inversion counting we need to have a linear time implementation of a sub rutine which computes the best the closest pair points which is split one on the left or one on the right well actually we don't need to do quite that we need to do something only a little bit weaker we need a linear time algorithm which whenever the closest pair in the whole point set is in fact split then computes that split pair in linear time so let me now remind you how that subroutine works so it has two basic steps so first there's a filtering step so it looks at uh first of all a vertical strip roughly down the middle of the point set and it looks at only at points which fall into that vertical strip that was a subset of the points that we called s suby because we keep track of them sorted by y-coordinate and then we do essentially a linear scan through Sy y so we go through the points one at a time and then for each point we look at only the almost adjacent points so for each index I we look only at J's that are between one and seven positions further to the right uh than I so among all such points uh we compare them we look at their distances we remember the best such pair of points and then that's what we return from the counts split pair sub routine so we've already aru in the previous video that the overall running time of the algorithm is n log n and what remains is to prove correctness and we also argued in the previous video that correctness boils down to the following correctness claim in the sense that if we can prove this claim then the entire algorithm is correct so this is what remains our residual work is to provide a proof of the correctness claim what does it say it says consider any split pair that is one point P from the left side Q capital Q and another Point little Q drawn from the right side of the point set capital R and F further suppose that it's an interesting split pair meaning that the distance between them is at most Delta here Delta is recall the parameter pass to the count split pair subroutine which is the smallest distance between a pair points which is all on the left or all on the right and this is the only case we're interested in there's two claims first of all for p and Q both members of the split pair survive the filtering step they uh make it into the sorted list S Sub Y and second of all they will be considered by that double for Loop in the sense of the positions of p and Q in this array s suby differ by at most seven so that's the story so far let's move on to the proof so let's start with part A which is the easy part relatively of the claim so remember what we start with our assumptions we have a point P Let's uh write it out in terms of the x coordinates X1 and y1 which is from the left half of the point set and we have a point Q which we'll call X2 Y2 which comes from the right half of the point set and furthermore we're assuming that these points are close to each other and we're going to use that hypothesis over and over again so the ukian distance between p and Q is no more than this parameter Delta so first something very simple which is that if you have two points which are close and ukan distance then both of their coordinates have to be close to each other right if you have two points and they differ by a lot in one coordinate then the idum distance is going to be pretty big as well so specifically by our hypothesis that P and Q have ukan distance less than Delta it must be that the difference between their coordinates an absolute value is no more than Delta and as well the difference between their y-coordinates is at most Delta okay and this is easy to see if you just return to the definition of ukian distance that we reviewed at the beginning of the discussion of closest point okay so if your distance is at most Delta then in each coordinate you differ by at most Delta as well now what does a say so proof of a so what does part A of the claim assert it asserts that P p and Q are both members of s y are both members of that vertical strip so another way of saying that is that the x coordinates of p and Q that is the numbers X1 and X2 both are within Delta of xbar remember xar was in some sense the median x coordinate so the x coordinate of the n/ twoth leftmost point so we're going to do a proof by picture so consider forget about y-coordinates that's sort of irrelevant right now and just focus on the x coordinates of all of these points so on the one hand we have xar R this is the x coordinate of the n/ twoth point from the left and then there are the x coordinates which Define the left and the right borders of that vertical strip namely xar minus Delta and xar plus Delta and then somewhere in here are X1 and y1 the x coordinates of the points we care about p and Q so a simple observation so because P comes from the left half of the point set and xar is the rightmost x coordinate of the left half of the point set the x coordinate of p is at most xar right so all points of Q have x coordinate atmost xar in particular P does similarly since xar is the rightmost edge of the left half of the point set everything in the right half of the point set has x coordinate at least xar so in particular little Q does as well so what does this mean so this means X1 wherever it is has to be to the left of xar X2 wherever it is has to be to the right of xar and what we're trying to prove is that they're wedged in between xarus Delta and xar plus Delta and the reason reason why that's true is because their x coordinates also differ by at most Delta okay so what you should imagine is you can imagine X1 and X2 are sort of people tied by a rope at the waist and this rope has length Delta so wherever X1 and X2 move they're most Delta apart furthermore X1 we just observed can't move any farther to the right than xbar so even if X1 moves as far to the right as it can all the way to xbar X2 since it's at most Delta away Tied by the waist can't extend beyond xar plus Delta by the reasoning X2 can't move any further to the left than xar X1 being tied to the wayist to X2 can never drift further to the left than xarus Delta so that's the proof that X1 and X2 both lie within this region that defines the vertical strip so that's part A you have any split pair whose distance between them is less than Delta they both have to wind up uh in this vertical strip and therefore wind up in the filtered set the prune set s suby so that's part A of the claim let's now move to Part B recall what part B asserts it says that the points p and Q the split pair that are distance only Delta apart not only do they wind up in this sort of filtered set Sy y but in fact they're almost adjacent in Sy y in the sense that the indices in the array differ by at most seven positions and this is the part of the claim that's a little bit shocking really what this says is that we're getting away with more or less a variant of our one-dimensional algorithm remember when we wanted to find the closest pair of points on the line all we had to do was sort them by their single coordinate and then look at consecutive Pairs and return the best of those consecutive pairs here what we're saying is really once we do a suitable filtering and focus on points in this vertical strip then we just go through the points according to their y-coordinate and okay we don't we don't just look at adjacent pairs we look at pairs within seven positions but still we B basically do a linear sweep through the points in Sy y according to their y-coordinate and that's sufficient to identify uh the closest split pair so why on Earth would this be true so our Workhorse in this argument will be a picture which I'm going to draw next so I'm going to draw eight boxes which have height and width Delta over two so here Delta is the same parameter that's passed to the closest split pair sub rutine and it's also the same Delta which we're assuming p and Q are closer to each other then right so that's remember that's one of our hypotheses in this claim the distance between p and Q is strictly less than Delta so we're going to draw 8 Delta over2 boxes and they're going to be centered at xbar so the same uh center of the vertical strip that defines Sy Y and the bottom is going to be the smaller of the y-coordinates of the points p and Q so it might be P it might be Q it doesn't really matter it's so just let the bottom is going to be the smaller of the two so the picture then looks as follows so the center of these collections of eight boxes is xar the bottom is the minimum of y1 Y2 we're going to have two rows and four columns and needless to say we're drawing this picture just for the sake of this correctness proof right this picture is just a thought experiment in our head we're just trying to understand why the algorithm works the algorithm of course does not draw these boxes the subroutine the closest split pair of subroutine is just that pseudo code we saw in the previous video this is just to reason about the the behavior of that sub routine now looking ahead I'll make this precise in two lemas that are about to come up what's going to be true is the following so either P or Q is on this bottom line right so we Define the bottom to be the lower y-coordinate of the two so maybe for example Q is the one that has the smaller y-coordinate which case is going to be somewhere say down here P remember is from the left half of the point set so p is maybe going to be here or something and we're going to argue that both p and Q have to be in these boxes moreover we're going to argue that these boxes are sparsely populated everyone contains either zero or one point of the array so y so what we're going to see is that there's at most eight points in this picture two of which are p and Q and therefore if you look at these points sorted by y-coordinate it has to be that they're within seven of each other the difference of indices uh is no more than seven so we're going to make those two statements precise uh one at a time by the following two lemas let's start with LMA one LMA one is the easy one and it states that all of the points of s suby would show up in between the Y coordin coordinates of the points we care about p and Q have to appear in this picture they have to line in one of these eight boxes so we're going to argue this in two steps first we're going to argue that all such points have to have y-coordinates within the relevant range of this picture between the minimum of y1 and Y2 and Delta more than that and secondly that they have to have x coordinates uh in the range of this picture namely between xar minus Delta and xar plus Delta so let's start with y-coordinates so again remember this key hypothesis we have okay we're dealing with a split pair PQ that are close to each other the distance between X and Y is strictly less than Delta so the very first thing we did at the beginning of this proof is we said well if their ukian distance is less than Delta then they have to differ by at most Delta in both of their coordinates in particular in their y-coordinate now remember whichever is the lower of p and Q whichever one has a smaller y-coordinate is precisely at the bottom of this diagram so for example if is the one with a smaller y-coordinate it might be on the lack line right here so that means in particular X has y-coordinate uh no more than the top part of this diagram no more than Delta bigger than q and of course all points with y-coordinates in between them are equally well wedged into this picture so that's why all points of Sy y with y coordinate between those of p and Q have to be in the range of this picture between the minimum of the two y-coordinates and Delta more than that now what about horizontally what about the x coordinates well this just follows from the definition of s suby so remember s sub y are the points that fall into this vertical strip how did we Define the vertical strip well it had Center xar and then we fattened it by Delta on both sides so just by definition if you're in Sy y you got to have x coordinates in the range of this picture X Delta plus minus uh sorry xar plusus Delta so that completes the proof of the Lema so this is not this is just a Lema so I'll use a lowercase QED uh remember this is just a step toward proving the overall correctness claim but this is a good step and again the way to think about this is it says we draw these boxes we know either P or Q is at the bottom the other one is going to be on the other side of the black line xbar but will be in some other box so perhaps maybe p is here and the LMA is saying that all the relevant points of s y have to be somewhere in this picture now remember in our double for Loop we only search seven positions away so the concern is that this is a sort of super highly populated uh collection of eight boxes that's the concern but that's not going to be the case and that's exactly what limit 2 is going to say not only do the points between p and Q and Y coordinates show up in this diagram but there have to be very few in particular every box has to be uh sparse with population either zero or one so let's move on to limit to so formally the claim is we have at most one point of the point set in each of these eight boxes and this is finally where we use in a real way the definition of delta this is where we finally get the payoff from our realization long ago that when defining the closest split pair sub routine we only really need to be correct in The Unlucky case in the case we're not handed the right answer by one of our recursive calls we're finally going to use that fact uh in a fundamental way so we're going to proceed by contradiction so we're going to think about what happens if there are two points in a single box and from that we'll be able to derive a contradiction so call the points that wind up in the same box A and B so to the contrary suppose A and B lie in the same box so maybe this is a here and this is B here at an typical corners of this particular box so from this supposition we have two consequences first of all I claim that A and B lie on the same side of the point set they're either both in the left side Q or they're both in the right side R so why is this true well it's because every box lies either entirely in the left half of the point set or in the right half of the point set recall how we Define xar xar is the x coordinate of the rightmost point amongst the left half of the point set capital Q so therefore points with x coordinate at most xbar have to lie inside the left half q points with x coordinates at least xbar have to lie inside the right half of the point set capital r so that would be like in this example A and B both lie in a box which is to the right of xar so they both have to come from the right half of the point set capital r this is one place we're using that there's no ties in x coordinate so if there's a point with X with x coordinate xar we can count it as part of the left half so every Box by virtue of being either to the left of xar to the right of xar can only contain points from a common half of the point set so that's the first consequence of assuming that you have two points in the same box the second consequence is because the boxes are small the points got to be close so if a and b cohabitate a box how far could they be from each other well the farthest they could be is like I've drawn in the picture with the points A and B where they're at opposite corners of a common box and then you bust out Pythagorean's Theorem and what do you get you get that the distance between them is Delta / 2 the side of the Box time 2 and what's relevant for us is this is strictly less than Delta okay but now here's where we use finally the definition of delta consequences one and two in tandem contradict how we Define delta remember what Delta is it's as close as two pair a pair of points can get if they both lie on the left side of the point set or if they both lie on the right side of the point set that is how we defined it as small as a pair of points on a common half can get to each other but what have we just done we've exhibited a pair A and B that lie on the same half of the point set and are strictly closer than Delta so that contradicts the definition of delta so that completes the proof of LMA 2 let me just make sure we're all clear on why having proved LMA 1 and LMA 2 we're done with the proof of Part B of the claim and therefore the entire claim because we already proved part one now a long time ago so let's interpret the two lemas in the context of our picture that we've had all throughout in terms of the eight boxes of side length Delta over 2 by Delta / 2 so again whichever is the lower of p and Q and again let's just uh for the sake of Contra and say it's Q is at the bottom of the picture the other point is on the other half of the line xar and is in one of the other boxes so for example maybe p is right here so LMA one says that every relevant point every point that survives the filtering and makes it into Sy y by virtue of being in the vertical strip has to be in one of these boxes okay if it has y-coordinate in between p and Q LMA 2 says that you can only have one point in each of these boxes from the point set so that's going to be at most eight total so combining them L as 1 and two imply that there are at most eight points in this picture and that includes p and Q because they also occupy two of the eight boxes so in the worst case if this is as densely populated as could possibly B given lemas 1 and two every other box might have a point and perhaps every one of those points has y coordinate between p and Q but this is as bad as it gets any point of the strip with y-coordinate between p and Q occupies the box so at most there are these six wedged in between them what does this mean this means if from Q you look seven positions ahead in the array you are guaranteed to find this point P so a split pair with distance less than Delta is guaranteed to be identified by our double four Loop looking seven positions ahead in the sorted array Sy Y is sufficient to identify to look at every conceivably interesting split pair so that completes the assertion B of the uh correctness claim and we're done that establishes that this supremely clever Devon and Conquer algorithm is indeed a correct o of n logn algorithm that computes the closest pair of a set of end points in the plane