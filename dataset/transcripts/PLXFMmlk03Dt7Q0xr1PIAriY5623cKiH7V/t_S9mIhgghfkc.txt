so in this short optional video really just for fun I want to point out an interesting Consequence the contraction algorithm has about a problem that's in pure graph Theory so to motivate the question I want to remind you of something that we discussed in passing which is that a graph may have more than one minimum cut so they may be distinct cuts which are tied for the fewest number of Crossing edges for a concrete example you could think about a tree so if you just look at a star graph that is hubs and folks it's evident that if you isolate any Leaf by itself then you get a minimum cut with exactly one Crossing Edge in fact if you think about it for a little while you'll see that in any tree you'll have n minus one different minimum cuts each with exactly one Crossing Edge the question concerns counting the number of minimum Cuts namely given that a graph might have more than one minimum cut what is the largest number of minimum cuts that a graph with n vertices can have we know the answer is at least n minus one we already discussed how trees have n minus one distinct minimum Cuts we know the answer is a most something like 2 to the N because a graph only has roughly 2 to the N Cuts in fact the answer is both very nice and wedged in between so the answer is exactly n choose 2 where n is the number of vertices uh this is also known as n * n -1 / 2 so it can be bigger than it is in trees but not a lot bigger in particular graphs have only undirected graphs have only polom many minimum cuts and that's been a useful fact in a number of different applications so I'm going to prove this back to you all I need is one short slide on the lower bound and then uh one slide for the upper bound which follows from properties of the random contraction algorithm so for the lower bound we don't have to look much beyond our trees example we're just going to look at Cycles so for any value of n consider the N Cycle so here for example is the N Cycle with n = 8 that would be an octagon and the key observation is that just like in a tree how we're moving each of the N minus one edges breaks the tree into two pieces and defines a cut with a cycle if you remove just one Edge you don't get a cut the Thing Remains connected but if you remove any pair of edges then that induces a cut of the graph corresponding to the two pieces that remain no matter which pair of edges you remove you get a distinct uh pair of groups distinct Cuts so ranging overall and choose two choices of pairs of edges you generate and choose two different cuts each of those cuts has exactly two Crossing edges and it's easier to see that's the fewest possible so that's the lower bound which was simple enough let's now move on to the upper bound which a purely Comon tutorial fact will follow from an algorithm so so consider any graph that has n vertices and let's think about the different minimum cuts of that graph what we're going to use is that the analysis of the contraction algorithm proceeded in a fairly curious way so remember how we Define the success probability of the contraction algorithm we fixed up front some Min cut a comma B and we defined the contraction algorithm the basic contraction algorithm before the repeated trials we Define the contraction algorithm as successful if and only if it output the minimum cut a comma B that we designated up front if it output some other Min cut we didn't count it we said nope that's a failure so we actually analyzed a stronger property than what we were trying to solve which is outputting a given mincut AB rather than just any old Min cut so how is that useful well let's apply it here for each of these T minimum cuts of this graph we could think about the probability that the contraction algorithm outputs that particular Min cut so we can in iate the analysis with a particular minimum cut AI bi and what we proved in the analysis is that the probability that the algorithm outputs the cut aibi not just any old men cut but in fact this exact cut AI comma bi is bounded below by we in the end we made a sloppy inequality we said it's at least 1 over n^2 but if you go back to the analysis you'll see that it was in fact 2 over n * n minus one also known as 1 over n choose 2 so instantiating the contraction algorithm success probability analysis without all of the repeated trials business we show that for each of these T cuts for each fixed cut aibi the probability that this algorithm outputs that particular cut is at least 1 over and choose 2 let's introduce a name for this event the event that the contraction algorithm outputs the Ian cut let's call this SI the key observation is that the SI are disjoint events remember an event is just a subset of stuff that could happen so one thing that could happen is that the algorithm outputs the E Min cut and by disjoint we just mean that there's no outcome that's in a given pair of events and that's because the contraction algorithm at the end of the day once it makes its coin fli it outputs a single cut these are distinct cuts it can only output at best one of them why is it important that these SI are disjoint events well with disjoint events the probabilities add the probability of the Union of a bunch of disent events is the sum of the probabilities of the constituent events if you want to think about this pictorially you can just draw a big box denoting everything that could happen Omega and then these SI are just these blocks Ms that don't overlap so S1 S2 S3 and so on now the sum of probabilities of disjoint events can sum to at most one right the probability of all of Omega is one and these SI have no overlap and are packed into Omega so the sum of their probabilities can only be smaller writing that formally we have that the sum of their probabilities which we can lower back found by the number of different events and remember there are t different Min cuts for some parameter t for each Min cut AI bi a lower bound on the probability that that gets spit out as output is 1/ n choose two so a lower bound on the sum of all these probabilities is the number of them T times the probability lower bound one over n choose two and this has got to be at most one rearranging what do we find T the number of different Min Cuts is bounded above by n shoose two exactly the lower bound provided by the N Cycle the N Cycle has n choose two distinct minimum cuts no other graph has more every graph has only a polinomial number indeed at most a quadratic number of minimum cuts