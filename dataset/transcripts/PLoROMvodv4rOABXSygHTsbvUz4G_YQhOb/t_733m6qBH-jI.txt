okay everyone the cigar on so as usual if you have not yet please enter su ID so that we know you're here in this room so computing me okay at the back this is okay oh yes is the volume okay at the back all right no one's responding yes okay all right thank you so what I want to do today is share a few two things you know we're approaching the in the courts our hope you guys looking forward to the Thanksgiving break next week action and I guess we're all home viewers but those us those do that viewing this from outside California know that we're all feeling really bad air here in California hope there's some of your Washington's at home you have better air wherever you are but what I hope to do today is give you some advice that will set you up for the future sort of even beyond the conclusion of cs2 30 and in particular what I want to do today is share view some advice on how to read research papers because you know deep learning is evolving fast enough that even though you've learned a lot of foundations of deep learning and learned about the tips and tricks and Kari know better than many practitioners how to actually get deep learning algorithms to work already when you're working on specific applications whether in computer vision or national processing or speech recognition or something else for you to be able to efficiently figure out the academic literature on key parts of the deep learning world will help you keep on developing and you know staying on top of ideas even as they evolve for the next several years or maybe decades so first thing I want to do is um give you advice on how when say when I'm trying to master a new body of literature how I go about that and hope that those techniques will be useful to help you be more efficient how you read research papers and then the second thing is in previous offerings of this course one request from a lot of students was just advice to navigating a career in machine learning and so in the second half of today I want to share some thoughts with you on that okay so it turns out that so I guess two topics meeting research papers right and and then second career bison machine learning so it turns out that you know reading research papers is one of those things that a lot of PhD students learn by osmosis right meaning that if you're a PhD student and you see you know a few professors will see other PhD students do certain things that you might try to pick it up by osmosis but I hope today to accelerate your efficiency and how you acquire knowledge yourself from the UM from the academic literature right and so um let's say that there's an area you want to become good at let's say you want to build that speech recognition or analysis terms is all for now let's see what to build that speech recognition system that we talked about with the robber turn-on in the desk lamp right this is what I read there's a sequence of steps I recommend you take which is first compiled lists of papers and and buy papers I mean both research papers often posted on archive or on TV and Internet but also plus medium pose yeah well maybe some occasional github poses oh those are rare but whatever texts or learning resources you have and then what I usually do is end up skipping around in this so if I'm trying to master a new body of knowledge so you will learn about speech recognition systems this is what it feels like to read a set of papers which is maybe you initially start off with five papers and if on the horizontal axis I plot you know 0% to 100% read / understood right the way it feels like reading these papers is often oh we you know 10% of each paper or try to quickly skim and understand each of these papers and if based on that you decide that paper Mateusz it died right other other other authors even cited and say boy they sure got it wrong when you read it it just doesn't make sense then go ahead and forget it and as you skip around to different papers you might decide that paper three is the really seminal one and then spend a lot of time to go ahead and read and understand the whole thing and based on that you might then find a sixth paper from the citations and read that and go back and flesh sure you understand your paper for and then find a paper seven and go and read that all the way to the conclusion but this is what it feels like as you you know assemble a list of papers and skip around and try to master a body of literature right around some topic that you want to learn and I think um some rough guidelines you know if you read fifty to twenty papers I think you have a basic understanding of an area right may be good enough to do some work apply some algorithms if you read 50 to 100 papers in an area and they speech recognition and and kind of understand a lot of it then that's pretty enough to give you a very good understanding of an area right you you might I don't know I'm always careful about when I say you know you're mastering a subject but you read fifty a hundred papers on speech recognition you have a very good understanding of speech recognition or if you're interested in say domain adaptation right by the time you've read fifty or hundred papers you have a very good understanding of a subject like that but the three five to twenty papers it's probably enough for you to implement it but maybe not not sure if it's enough for you to do research or be really at the cutting edge but these are maybe some guidelines for the volume of meeting you should aspire to if you want to pick up a new area I'll take one of subjects in CS 230 and go more deeply into it um know how do you read one paper and um I hope most of you brought your laptops so what I'm going to do is describe to you how I read one paper and then after that I'm just going to ask all of you to you know download the paper online and just take I don't know take take a few minutes to read a paper right here in class and see how far you can get understanding a research paper in just minutes right right here in cost okay um so when reading one paper so the bad way to read a paper is to go from the first word until the last word right this is a bad way to when you have a paper like this oh and by the way actually here and tell you what my real life is like so I actually pretty much everywhere I go whenever i backpack this is my actual folder I don't wanna show this is my actual folder of unread paper so pretty much everywhere I go I actually have a paper yeah a stack of papers is on my personal reading list this is actually my real life I didn't bring this to show you this is in my backpack all the time and I think that I don't know these days on my team at landing a on deep-lined Rai I personally lead in reading group where I lead a discussion about two papers a week but to select two papers it means I need to read like five or six papers a week to select to you know to present or discuss at the land area and deeper into a meeting room so this is my room life right and how I try to stay on top of the literature and and I'm doing a lot if I can find this fine if I can find the time to read you know a couple papers of me hopefully all of you can too but when I'm reading a paper this is this is how I would recommend you go about it which is the don't go from the first or and then read until the last word um instead take multiple passes through the paper right um and so you know step one is uh read the title the abstract and also the figures especially in deep learning there are a lot of research papers where so the entire paper is summarized in one or two figures in the figure captions so so sometimes just by reading the title abstract and you know the key neural network architecture figure that just describes what the whole papers are and maybe one or two of the experiments that you can sometimes get a very good sense of what the whole paper is about without you know hardly reading any of the text in the paper itself right that's the first pass second pause I would tend to read more carefully the intro the conclusions look carefully at all the figures again and then skim the rest and you know I don't know how many of you have published academic papers but when people publish academic papers part of you know the publication process is convincing the reviewers that your paper is worthy for acceptance and so what you find is that the abstract entering conclusion is often when the authors try to summarize that weren't really really carefully to make a case to make a really clear case to the review as for why you know they think their paper should be accepted for publication and so because of that you know maybe it's slightly not slightly unusual incentive the intro and conclusion and after I often give a very clear summary of what's the paper actually about and depending on the game just be you know bluntly honest with you guys the related work section is useful if you want sometimes useful you want to do understand related work and figure out what's what are the most important works in the papers but the first time you read this you might skim or even skip skim the related work section it turns out unless you're really familiar literature if this is a body of not work that you're not that familiar with the related work section is sometimes almost impossible to understand and again since I'm being very honest with you guys sometimes the related work section is when the author's try to cite everyone that could possibly be reviewing the paper and to make them feel good and then hopefully accept the paper office of related work sections or sometimes written in funny ways right and then set three I often read the paper but um just skip the math for beat the whole thing but skip pass it don't make sense you know I think that one thing this happened many times in the research is that I mean the papers we tend to be cutting edge research and so when we publish things we sometimes don't know what's really important and what's not important right so there there are many examples of well-known highly cited research papers whereas some of it was just great stuff and some of it you know turned out to be unimportant but at the time the paper was written the authors did not know every no one on the planet knew what was important that what was not important and maybe one example the Lynette five paper write seminal paper by Yamaka and part of it was phenomenal just established a lot of the foundations of confidence and so is it one of the most incredibly influential papers but you go back and read that paper and another sort of whole half of the paper was about other stuff right transducers and so on then it's much less used and so and so it's fine if you read a paper and some of it doesn't make sense because it's not that unusual or sometimes it just happens that great research means we're publishing things at the boundaries of our knowledge and sometimes the stuff you see you know will realize five years in the future that that wasn't the most important thing after all right all that what was the key part of the algorithm maybe wasn't what you office thought so sometimes it passed paper don't make sense it's okay to skim it initially and move on great unless you're trying to do a peek unless you're trying to do deep research and really need to master it then go ahead and spend more time but they're trying to get through a lot of papers then you know then then it's just prioritizing your time okay and so just a few last things and then I'll ask you to practice this yourself with a paper right um you know I think that when you've read and understood the paper um these are questions to try to keep in mind and when you read a paper in a few minutes maybe and try to answer these questions whether you also strive to accomplish and what I hope to do in a few minutes is asked you to download the paper off the internet read it and then try to answer these questions and discuss your answer to these questions with work with your peers write with others in the class what were the key elements what can you use yourself and um okay so I think if you can answer these questions hopefully that will reflect that you have a pretty good understanding of the paper okay and so what I would like you to do is pull your laptop and then so yo there's a chip so I think on the confident videos right on the developer I can't have videos on Coursera you learn the bed about well various neural network architecture is absurd resonates and it turns out that there's another follow-on piece of work that maybe builds on some of the ideas of resinous which is called dense net so what I'd like you to do is oh and so wonder that kids do is actually try this and when I'm reading a paper again in the earliest stages don't get stuck on the mouth just go ahead and skim the map and read the English text we can get through faster and maybe one of the principles is go from the very efficient high information content for us and then go to the harder material later remember it's why often I'll just skim the map and I don't if I don't understand the similar integration just move on and then the only data go back and and really try to figure out the map more careful okay so what I'd like you to do is take our which take on wonderful let's let's try it listen let's have you takes seven minutes where I'm thinking maybe one one minute per page is quite fast and search for this paper densely connected convolutional eunuch networks by up that's all okay once you guys take out your laptop's search of this paper download that usually refined JSON archive arxiv right and and this is also sometimes also call this dense necks I guess and go ahead and take once you take like seven minutes to read this paper and I'll let you know when the time is passed and then after that time I'd like you to you know discuss with your work with the others write what you think are the answers especially the first two because the other two you can leave off but once you go ahead and take a few minutes to do that now and then I'll let you know when sort of like seven minutes have passed and then you can discuss your answers of these with your friends all right guys so anyone with any thoughts or insights surprises or thoughts from this so now you spent eleven minutes on this paper right seven minutes reading four minutes discussing we're just really really short period of time but any any thoughts what do you think of the paper yo-yo just spent a lot of time saying all stuff to each other what do people think of the time you spend trying to read the paper actually they should tell you how I should raise your hand if you you know you kind of understood the main concepts in and actually depressing of the figures Wow people are really less than energetic today unusual so I think this is one of those papers where um the the paper is almost entirely summarized in figures 1 & 2 I think of you a lot they would not be if you look at figure 1 in the caption there in Figure 2 on page 3 and the caption there and understand those two figures those really convey you know 80% of the idea of the paper right and I think that a a couple of other tips so it turns out that as you read these papers what practice you do get faster so for example table 1 on page 4 right you know this mess of the table on top this is a pretty common format or a format like this is how a lot of authors use to describe their network architecture especially in computer vision so one of the things you find as well is that the first time you see something like table 1 it just looks really complicated but by the time you've read a few papers in the similar format you can look at able one and go oh yep got it you know this is this is this is the dense net 121 for suggest and 169 architecture and be able to more quickly pick up those things and so another thing you'll find is that reading these papers actually gets better of practice because you see different authors use different ways or similar ways of expressing themselves and it gets used to that you actually be faster and faster at implementing these understandings ideas and I think I know these days we're not reading a paper like this it maybe takes me about half an hour to took you like and I know I gave you guys seven minutes when I thought I would need maybe half an hour to figure out a paper like this and I think for a more and I find it it's not unusual for people relatively new to machine learning to me maybe an hour to kind of you know really understand the paper like this and then although I'm pretty experienced machine learning some down to maybe half an hour for people like this maybe even 20 minutes it was a really easy one but there are some outliers so I have some colleagues sometimes stumble across a really difficult paper you need to chase out a lot of references and learn a lot of others now so sometimes you come across a paper that takes you three or four hours or even longer to really understand it but but I think depending on how much time you want to spend probably reading papers you can actually learn you know learn a lot rate doing what you just did but maybe spending half an hour per paper in our paper rather than seven minutes right um so all right I feel like yeah that's great and notice that I've actually not sent anything about the content of this paper right so whatever you guys just learned that was all you I had nothing to do with it so yeah like you're off there both you go and learn this stuff by yourself you don't need me anymore so just the last few comments let's see so the other few can you ask questions I get is uh you know where do you go the deep learning field evolves so rapidly so where where do you go to so if you're trying to master a new body of knowledge definitely do web searches and they're often good blog holes on you know here the most important papers and speech recognition there are lots of great resources there and then the other thing you I don't know a lot of people try want to do is try to keep up with the state of the art of deep learning even as is evolving rapidly and so I'll just tell you where I go to keep up with you know discussions announcements surprisingly Twitter is becoming surprisingly important place for researchers to find it about new things there's an ml subreddit is actually pretty good a lot of noise but many important pieces of work do get mentioned there some of the top machine learning Kong conferences are nips ICML and I clear all right and so whenever these conferences come around take a look and glossary at least the title see if there's something that interests you and then I think I'm fortunate I guess have friends you know both colleagues here in Stanford as those colleagues are several the teams that work with that that just tell me whether there's a cool paper I guess but I think with here within Stanford or among with your workplace for those of you taking this at a CPD if you can form a community that shares interesting papers so all the grooves I have are on slack and we regularly slack each other or send send each other text messages on the slack messaging system where you find interesting papers and that that's been great for me actually yeah oh and and and Twitter let's see ken is I fell looking at you could follow him to this is me engine whining right I pray don't slack up papers as often as I do but if you look at I don't know you can also look at who we follow their love of could be searches that then will share all these things online oh and um there's a bunch of people they also use a website called archive sanity I don't ask much sometimes but lots of visuals is like that um cool so just two lost tips for how to read papers in good good at this so it's a more deeply understand a paper some of the papers will have math in it and actually if you read the oh no y'all learn about fashion all right in the second modules if you read The Bachelor on paper is actually one of harder papers you read there's a lot of math in the derivation or vaginal but they're papers like that and if you want to make sure you understand in math here's what I would recommend which is a read through it take detailed notes and then see if you can read arrive in from scratch so if you want to deeply understand the math of an algorithm like you know fashion or more the details of back problems the good practice and I think a lot of them sort of a theory their own from the science and mathematics PhD says will use a practice like this we're just go ahead and read the paper make sure you understand it and then to make sure you really really understand it put a put aside the result and try to read arrive the math yourself from scratch and you can start from a blank piece of paper and read arrive one of these algorithms from scratch then that's a good sign that you really understand it when I was a PhD student I did this a lot right that you know I wouldn't be the text book or read the paper or something and then put aside whether I read and see if I could read arrived it from scratch starting from a blank piece of paper as only if I could do that that I would you know feel like yep I think I understand this piece of math and it turns out if you want me to do this type of map yourself is your ability to derive this type of map we divide the size of math that gives you the ability to generalize to derive new novel pieces of map yourself so I think I actually learned all the math for several machine learning by doing this and this by read arriving other people's work that allowed me to learn how to divide my own novel algorithms and actually sometimes you go to the art galleries right let go to Smithsonian you see these aren't students you know sitting on the floor copying the great artworks to create paintings you know painted by the masses centuries ago and so I think just as today there are students sitting in or the DeYoung museum or whatever every war and I was at a Getty Museum in LA a few months ago you actually see these art students you know copying the work of the Masters and I think a lot of the ways that you want to become good at the math of machine learning yourself this is this is a good way to do it it's time-consuming but then you can become good at it anyway and the same thing for codes right I think the simple you know lightweight version one of learning would be to download and run the open-source code if you can find it and the deeper way to learn this material is the reimplemented from scratch it's easy to download open sourcing and rather it works but if you can reemployment one of these algorithms from scratch then that's a strong sign that you really understood this our problem okay all right and then longer-term advice um you know for you to keep on learning and keep on getting better and better the more important thing is for you to learn steadily not for you to have a focus intense activity you know like all of Thanksgiving you read 50 papers over Thanksgiving and then you're done for the rest of your life and it doesn't work like that right and I think you're actually much better off reading to a few papers a week for the next year then you know cramming everything right over over one long weekend or something actually an education where she know that spaced repetition works better than cramming so the same same thing same body of learning if you learn a bit every week in space without you actually have much better long-term attention then you try to cram it in a short term so this is a very solid result that we know from pedagogy and how the human brain works oh so if you're able to serve again the way I my life is my backpack I just always have a few papers with me I'm gonna find that I can I read almost everything on the tablet on my iPad but I find that research papers and all those things where the ability to flip between pages and skim I still find more efficient on paper so I read almost nothing on paper these days except for research papers but that's just me your mileage may vary maybe something else will work out for you okay all right um so let's see that's it for reading mr. rivers I hope that while you're in CSU 30 you know but if some of you find some cool papers of you go further for the dense net paper and find an interesting result there go ahead and post on Piazza or if any of you want to saw the reading group of other friends here at Stanford you know encourage you to look around class fine fine fine a group here on campus or with among your CSU 30 calls Basel all of your work colleagues for those of you taking this on SCPD so that you can all keep you know studying so nutrition and learning them and then helping each other alone okay so that's it for reading papers the second thing I want to do today is just give some longer-term advice on navigating a career in machine learning right any questions about this before I move on all right but I hope that was useful some of this I wish I had know when I was a first year PhD student but oh all right um let's see can we turn on the lights please oh all right so kind of in response to requests from earlier worse citizen earlier versions of class before we you know as we approach the end of the quarter want to give some advice to housing navigator career machine learning right so today machine learning there are so many opportunities to do so many exciting things so how do you you know what what do you want to do so I'm going to assume that most of you will want to do one of two things right at some point you know you want to get the job right maybe a job that does work in machine learning and including a faculty position for those who have been professor but I guess eventually most people end up with a job I think I guess there other alternatives but oh but then some of you want to go on to more advanced graduate studies and although even after you get your PhD at some point most people do get a job after the PhD and and and by job I mean either in the big company you know Ora's or a start-up right but regardless of the details of this I think I hope most of you want to do important work so um what I'd like to do today is break you know this into how do you find a job or join a ph.d program or whatever then lets you do important work and I want to break this discussion into two steps um one is just you know how do you get a position right how do you get that job offer or how do you get that offer of Admissions in the ph.d program or admission to the master's program well whatever you want to do and then to is a selecting a position right there between you know going to this university versus that university or between taking on the job and this company is that company what are the ones that will tend to set you up for success for long term personal success and career success and everything I hope that by the way I hope that all these are just tactics to let you do important work right I know this I hope that's what you want to do um so you know what the recruiters look for oh and I think just to keep the language simpler I'm going to pretend that I'm just gonna talk about finding a job and but a lot of the very simple things apply for PhD programs it's just instead of saying recruiters I would say admissions committees right things actually some of this is let me just focus on the job scenario so most recruiters look for technical skills so for example there are a lot of machine learning interviews they'll ask you questions like you know well would you use gradient descent or battery and descend the customer batches and what happens in the mean batch sizes too large to small right so there are companies many companies today asking questions like that in the interview process or can you explain everything else here and that GRU and when would you use GRU and so you really get questions like that in many job interviews today and so crus is looking for m/l skills as well as and so you often be quiz on ml skills as well as your coding ability and then beyond your and I think Silicon Valley has become quite good at giving people the assessments to test for real skill in machine learning engineering and the software engineering um and then the other thing that recruiters will look for that many recruiters will look for is a meaningful work and in particular you know there are some candidates that apply for jobs that have very young theoretical they're very academic skills meaning you can answer all the quiz questions about you know what is Bosch knowing okay they're arguing design for this but unless you've actually shown that you can apply this to a meaningful setting it's harder to convince a company or recruiter that you know not just a theory but that you know how to actually make this stuff work and so having done meaningful work using machine learning is a very strong as a very desirable candidate I think to a lot of companies kind of work experience I think really whether you've done whether you've done something meaningful reassures that you know that you can actually do work right it's not just economic quiz questions being another implementer in the algorithms that work and and and maybe um yeah and then many recruiters actually look for your policy to keep on learning new skills and stay on top of machine learning and se evolves as well and so a very common pattern for the successful you know AI engineers a machine learning engineers would be the following where if you on the horizontal axis I plot different areas so you might learned about machine learning learn about deep learning learn about probabilistic graphical models learn about NLP learn about computer vision and so on for other areas of AI or machine learning and at the vertical area if the vertical axis is death a lot of strongest candidates or jobs are t-shaped individuals meaning that you have a broad understanding of many different topics in AI machine and very deep understanding in you know maybe at least one area maybe more than one area and so I think by taking sis to 30 and doing the things that are doing here hopefully you're harming a deeper understanding of one of these areas of deep learning in particular but the other thing that even you know deepens your knowledge in one area will be the projects you work on the open source contributions you make right whether or not you've done research and maybe whether or not you've done an internship and I think these two elements you know broad area of skills and then also going deeper to do a meaningful project and deep learning or work of a Stanford professor right and do a meaningful research projects or make some contributions the open source publishing on github and then let's use it these are the things that let you deepen your knowledge and convince recruiters that you both have the broad technical skills and when called on you're able to apply these in a meaningful way to an important problem right and in fact them the way we design CS 230 is actually a microcosm of this where you know you learned about neural nets learned about tapas at bash norm confidence sequence models write them to say your Arlen's so actually if a breath within the field of deep learning and then what happens is know then and the reason want you to work on the project is so that you can pick one of these areas and maybe go deep and build a meaningful project in one of these areas which will much more and it's not just about making a resume look good right it's about giving you the practical experience to make sure you actually know how to make these things work and give you the learnings to make sure that you actually know how to make a CNN work on our network and then constants the many students also listed practice on the resumes obviously so I think the let's see the failure modes the things bad ways to navigate your career um there are some students that just do this right there are some time for students that just take class off the class off the cars off the cross and go equally in depth in a huge range of areas and this is not terrible you can actually still get a job you still get sometimes you can even get into some PhD programs like this without the Deaf but this is not the best way to navigate your career right so there are some Stanford's issues that take tons of classes even get a good GPA doing that but do nothing else and this is not terrible but this is this is not this is not great it's not as good as the alternative um there's one other thing I've seen Stanford students do which is just try to do that right but she's just try to jump in on day one and go really really deep in one area and again this has its own challenges I guess you know one one one one failure mode 1 mode there's actually not great is sometimes where you get some undergrad freshman at Stanford that have not yet learned a lot about coding or software engineering or machine learning and try to jump into a research project right away this turns out not be very efficient because it turns out Stanford courses are you know online courses the Stanford classes they're very efficient way for you to learn about the program chip areas and after that going deeper and getting experience in one vertical area then defense is knowledge make sure you know how to actually make those ideas work so I do see sometimes unfortunately you know send some time for freshmen join us already know how the code and have implemented you know some learning Avram's but some students that do not yet have much experience try to jump in the research project right away and that turns out not to be very productive for the student or for the research group because until you've taken classes and master basics is difficult to understand what's really going on in the advanced projects right so I would I would say this is actually worse than that right this is this is actually okay this is actually pretty bad this is III would not do this for your career and then the other not so grateful that you see some sandwiches to do is get a lot of breath and then do a tiny project here and do a tiny project in there I do a tiny project there do a tiny project there and you end up with ten tiny projects but know one or two really significant projects and again this is not terrible but you know beyond a certain point by the way recruiters are not impressed by volume right so having done ten lane projects is actually not impressive not nearly as impressive as doing one great project or two great projects and again there's more to life than impressing recruiters but recruits is very rational and the reason recruiters are less impressed by someone whose profile looks like this is because they're actually probably factually less skilled and less able and doing good work and machine learning compared to someone that that has done a substantive project and knows what it takes to see see the whole thing through that make sense so when I say you know recruit is more or less empresas because they're actually quite rational in terms of trying to understand how good you are at that doing important work or building meaningful AR systems and so in terms of building up of the horizontal piece and vertical piece this is what I recommend to build the horizontal piece lot of this is about building foundational skills and it turns out coursework is a very efficient way to do this you know in these courses right you know various instructors like us but many other Stanford professors for the lot of work and to organizing the content to make it efficient for you to learn this material and then also reading research papers which we just talked about having a community will help you and then that is often building a more deep and relevant project and and and if the product projects had to be relevant so you know if you want to build a career machine learning ability or in the eye hopefully the project is something that's relevant to CSO machine learning or AR deep learning I do see I don't know for some reason I feel like a surprisingly large number of stem sins I know I understand that dance true and they spent a long time on that which is fine if you enjoy dancing go have fun don't don't you know you don't need to work all the time so going join the dance crew or go on the overseas exchange program and go hang out in London and have fun but those things do not ask directly contribute to this right yeah I know I think I think in an earlier version in this presentation you know students walked away saying huh you know Andrew says we should not have fun and work all the time and that's not to go um all right there is one all right um you know there is the Saturday morning problem which all of you will face right which is every week including this week on Saturday morning you have a choice you can read the paper or work on research or work on open source or I don't know what people do or you can watch TV or something um and you will face this choice but maybe every Saturday you know for the rest of your life or for Law Saturdays in the rest of your life and um you know you can build out that foundational skills go deep or go have fun and you should have fun all right it's for the record but one of the problems that a lot of people face is that even if you spend all Saturday and all Sunday reading a research paper you know the following Monday or maybe spent all Saturday and Sunday working hard it turns out that the following Monday you're not that much better at deep learning is that yeah you work really hard so you read five papers you know great but if you work of a research group the professor or you you know or your manager if you're in the company they have no idea how hard you work so there's no one to come by and say oh good job working so how long we can so no one knows these sacrifices you may all weekend to study your code open Sol's opposes this no one knows so there's almost no short-term reward to doing these things but the seat but and and where whereas they might be short term rewards to doing other things right but the secret to this is that is not about meeting papers really really hard for one Saturday morning or for all Saturday once and then being done the secret to this is to do this consistently you know for years or at least four months and it turns out that if you read um two papers a week and you do that for a year then you have read 50 papers after a year and you will be much better at delivering after that right I mean when you really you're aware the hundred papers in the year will be two papers a week and and so is so for you to be successful it's much less about the intense burst of effort you put in over one weekend it's much more about whether you can find a little bit of time every week to read a few papers or contribute to open source or take some online courses but and if you do that you know every week for six months or do that every week for a year you will actually learn a lot about these fields and be much better off and be much more capable at deep learning or machine learning or whatever so yeah nobody yeah actually my wife and I actually do not own the TV for what I saw right but again if you if you oh my go ahead this is a make sure you don't don't don't don't drive yourself crazy and and the healthy work-life integration as well all right so um so I hope that doing these things whoa it's not about finding a job is about doing these things to make you more capable as a machine learning person so that you have the power to God and implement stuff that matters and to do stuff the - you do do do work the matters well the second thing we like chat about is selecting a job and there's actually interesting um I gave this public presentation last year sorry earlier this year and shortly after that presentation there was a student in the class there was already in a company who emailed me saying boy Andrew I wish you had told me this before I said to my current job so let's see let's see let's see hopefully this is be useful to you um so it turns out that you know I so when you're at some point you're on you be deciding you know what peeps apparently wanna apply for what companies do want higher job ads and I can tell you what so if you want to keep learning new things I think one of the biggest predictors of your success will be whether or not you're working with great people and projects right and in particular you know there are these fascinating results from whether I think I want to say from the social sciences showing that if your closest friends if your five closest friends retain closer friends are all smokers there's a much higher chance you become a smoker as well right and if you're five or ten close friends are you know overweight there's much higher chance you do the same or and conversely there's a you know so I think that if your five closest friends work really hard really long research papers care about the work right learning and making themselves better then there's actually very good chance that you will be that they'll influence you that way as well so we're all human we all influenced by the people around us right and so um I think that and I've been fortunate I've told the Stanford for a long time now is I've been fortunate to have seen a lot of students from go from Stanford to various careers and because I've seen how many hundreds or maybe low thousands understand the students that I knew right when there are so stem forces go on to a separate job I saw many of them have amazing careers I saw you know if you have like like okay careers but I think over time I've learned to patent match what is predictive of your future success after you leave Stanford only share view some of those paths share view some of those patterns as you navigate your career and and and it's just a so many options in machine learning today it's kind of tragic if you don't you know navigate to hopefully maximized one of the people that gets to do fun and important work that helps helps others so when selecting a position I would advise you to focus on the team you interact with and by team I mean you know somewhere between ten to thirty persons right maybe up to fifty because it turns out that you if you there will be some group of people maybe ten to thirty people maybe fifty people that you interact with quite closely and these will be appears in the people that that will influence you the most right because if you join a company with 10,000 people you will not interact with all 10,000 people there will be a corps of 10 or 30 or 50 people that you interact with the most and is those people how much they know how much in teach you how hard-working they are whether they are learning themselves that were influenced you the most rather than all these other hypothetical 10,000 people in a giant company and of these people one of the ones that will influence you the most is your manager alright so make sure you meet your manager and get to know them and make sure there's someone you want to work with and in particular I wouldn't recommend focusing on these things and not on the brand of the company because it turns out that the brand of the company you work with is actually not that correlated you know maybe there's a very recall relation but it's actually not that correlated with what your personal experience will be like right and so and and by the way and getting just new full disclosure I'm one that you know I have a research group here at Stanford right my research career Stanford is one of the better-known researchers in the world but just don't join us because you think we're well-known right is this just not a good reason to join us for the brand instead you only work with someone meet the people and evaluate the individuals or look at the people and see if you you think these are people you can learn from a worker better good people so um so in today's world there are a lot of companies recruiting Stanford students so let me give you some advice and did this piece of my good because many is well I'll just give the advice so sometimes there are giant companies with let's say um you know fifty thousand people right and I'm not thinking of any one specific company if you're trying to guess what content think of there's no one special company I'm thinking of but this pattern matches to many large companies but maybe there's a giant company with you know fifty thousand people right and let's say that they have a 300 person right I team it turns out that if you look at the work of a few hundred presently I team and if they send you a job offer to join the 300 person the I team that might be pretty good right this may be the group you know who's working here about the potion's papers you read on news and so if you get a job offer to work with this group that might be pretty good or even better would be sometimes even within the thirty person the i-team is actually difficult to tell what's good and was not there's often a lot of areas even with this one's even better would be if you get a job offer to join the 30 person team so you actually know who's your manager who your peers who you're working with and if you think these are thirty great people learn for that could be a great job offer the failure mode that unfortunately I've seen several Stanford students go down or it's actually this is true sorry there was one several years ago as a Stanford student on you that I thought was a great guy right you know I I knew his work he was coding machine learning algorithms I thought he was very sharp and did very good work working with some of my PhD students he got a job offer from one of these giant companies with that has a great AI group and his alpha wasn't to go to the AI group his offer was to join us and they will assign you to a team so this book was student that was the sample student I know about they care about he wound up being assigned to really um boring Java back-end payments team and so often you accept a job offer he wound up being assigned to a you know back in and apologizing you work on Java back in payment processing systems I think that great but the student was assigned to that team and he was really bored and so um I think that this was a student whose career I Percy saw his career rising while he was at Stanford and after he went to this you know frankly not very interesting team I saw his career plateau and after about a year and a half he resigned from this company after wasting a year and a half of his life and missing no really on a year and a half of this very exciting growth of AI machine learning right so it was very unfortunate and and it was actually after I told this story um lost time I told this class earlier this year that actually someone from acquisition from the same big company he found me and said boy anchor I wish she told me the story earlier because exactly what happened to me at the same big company oh no I want to share view a different so so I would just be careful about rotation programs as well you know when the company is trying to recruit you if a company refuses to tell you what project you work on who is your manager exactly what's your joining i / c do not find those job offers data track because if they can't you know if it refused to tell you what team you're gonna work with well chances are right telling you the answer will not make the job attractive to you that's why they're not telling you so I just be very careful and sometimes rotation programs sound good on paper but it's really you know well we'll figure out where to send you later so I feel like I've seen some students go into rotation programs that sound good on paper that sound like a good idea but just as you wouldn't after you graduate Stanford what you want to do for internships and then apply for a job that would be a weird thing to do so sometimes rotation firms out yeah come and do for internships and then we'll let you apply for a job and see where when I send you and they cook your java back and payment processing system right so so so just just be cautious about the marketing of rotation programs oh and again if you do if but if there's but but if they what they say is do rotation and then you join this team then you can look at this student and say yep that's a great team I want to do a rotation but then I would go and work with this human and these are the 30 people I work with so that could be great but through a rotation then it could send you anywhere in this giant company that I would just be very careful at all um now on the flip side there are some companies I'm not gonna mention any companies but there are some companies with you know are not as glamorous not as not as right cool brands um and maybe this is a only 10,000 person company or a 1,000 or 50,000 per second or whatever this is 10,000 per copy I have seen many companies that are not super well-known in the AI world and not in the news all the time but they may have a very elite team of a hundred people doing great work on machine learning right and there are definitely companies whose brands are not you know the first companies you think of when you think of great companies that sometimes have a really really great ten person or fifty percent of 100 person team that were all Sun during the algorithms and even if the overall brand of the overall company you know isn't as like there's a little bit sucky if you manage to track down this team and if you have a job offer to join this elite team in a much bigger company you could actually learn a lot from these people and do important work you know one of the things about Silicon Valley is that um the brand on your resume matters less and less and less than ever before I mean I guess I think the exceptions of Stanford Brown you totally won the Stanford Brown the resume but with that exception by really your silk'n values become really good sorry the world right has become really good at evaluating people for your genuine technical schools in your genuine capability and less for your brand and so I would recommend that instead of trying to get like the best stamps of approval on your resume to go ahead and take the positions that let you have the best learning experiences and also allows you to do the most important work and that is really shaped by the you know 30 or 50 people you work with and not by the overall brand of the company you work with right so the variance I cross so there's a huge variance across teams within one company and that variance is actually pretty bigger or might be bigger than the variance across different companies sense so solid and and if a company refuses to tell you what team you were joined I would seriously consider just you know doing something well if you have a better option I would I would do something else um and then finally yeah and and so really again I guess I don't want to name these companies but you know think of some of the large retailers or something large healthcare systems or the lot of companies that are not well-known in the AI world but that I've met there a I teams I think they're great and so if you're able to find those jobs and meet their people you can actually get very exciting jobs in there right but of course for the giant companies that the avai teams you can join that yielding AIT money that's also that's also great I'm a bit biased since I used to leave somebody's eating your team so so I think those things are great but but but also some teams in not all right um lastly you know just general advice this is how I really live my life I tend to choose two things to work on they'll allow you to learn the most you know we try to do important work so you know especially if you're relatively early in career what have you learned in your career will pay off for a long time and so and so joining the teams and working with a great set of 10 or 30 or 50 teammates will let you learn a lot and then also you know hopefully I mean yeah and and and just don't don't don't join a like a cigarette company and help you know give more people cancer or stuff like there is this don't don't do this don't don't do stuff like that but if you can do meaningful work that helps other people and do important work and also learn a lot on the way hopefully you can find positions like that that lets you set yourself up for long-term success but also do work that you think matters in that and then helps other people alright um any questions it was important you know yeah um I think one of the most meaningful things you do in life is how people either advance the human condition or help other people but the thing is I'm nervous I don't a name one or two things because the world needs a lot of people who work on a lot of different things so the world's not gonna function if everyone works on computational biology I think umpire is great but it's actually good that what people work on compile my PhD students like you know mainly work on the outside to healthcare my team at landing er does a lot of work on the outside manufacturing agriculture to some healthcare and some other industries I actually especially California fires burning you know I actually think that there's important work to be done in AI climate change but I think that there's a lot of them important work a lot of industries right so I actually think that you know I should think that the next wave of AI sees me I should say machine learning is we've we've already young transform a lot of the tech well right so you know yeah I mean we've already helped a lot of the circumvallate tech world become good at AI and that's big right how build a couple of the teams that wound up doing this right Google brain how Google become cognitive learning the battery I hope I do become you know couldn't one of the greatest companies in the world set in China and I'm very happy that between me and so my friends in the industry we've made a lot of good AI companies I think part of the next phase for the evolution of machine learning is fair to go into not just to check companies like you know like the Google and Baidu which I hope this was you know Facebook Microsoft which had nothing to do as well as well that was a BMP Pinterest ruber right all these like great companies that hope they'll all embrace a yard but I think some of the most exciting work to be done stores also look outside to check industry and to look at all the sometimes calling traditional industries that do not have shiny tech things because I think the value creation there as surprised you could implement there maybe even bigger than if you you know yeah I mention one interesting thing one thing I notice is more than large tech companies all work on the same problems right so everyone works a machine translation everyone Russian speech recognition face detection at quick through rate and probably feels like this is great because it means there's a lot of progress in machine translation and that's great we do want progress in machine translation but sometimes we look at other industries so you know when you look at manufacturing or how some of the medical devices things working ads or sometimes on these phones hang out with farmers on feel like in my own work my team's work sometimes we're stumbling across brand-new research problems that big tech companies do not see and have not yet done to frame so I find one most in search of exciting challenges is actually to be constantly on the cutting edge looking at these types of problems there's a different cutting edge than the cutting edge a big tech companies so I think some of you are joining a big tech companies and that's great we need more AI the big companies and the tech companies but I think a lot of the exciting work to do in AI is also outside while we traditionally considered tech all right us 10 this whole 50s so hope I hope this was helpful and let's let's break for today or have a have a great Thanksgiving everyone and we'll see in a couple weeks