welcome to exploring computing today's video is creating web pages forms for inputs so so far we've been looking at how to present information on a web page but websites do more than just allow the presentation information they actually allow interaction between a viewer and the website itself and so in order to do this we need to use forms and so in this video we're going to show you the basics on how to create forms so here are a number of different forms here the top form is amazon search and then we have the new york times searching for articles we have the weather channel looking up for weather and then we have uh google maps asking for food delivery and this one's a little bit more complicated than the other ones because you can see we can select some pull-down menus here to limit our options by their cuisine or the hours are open or some other options as well farms can get much more complicated so on the left we have the advanced search form for books at the stanford library and you can see we've got all sorts of things we can check and then on the right we have a creation of a new account at hbo so this is the sort of thing we're talking about we're talking about how to allow the user to enter information on a web page and submit it to the web server now in this class we're going to be focusing on how to actually create the web page in order to submit the information rather than how the server itself is going to respond to that information uh cs106e students we are going to take a bit of a look at exactly what happens to that information once it gets submitted to the server uh cs105 students as always i'm going to go ahead and put those lectures up at some point later this quarter after you guys have a little bit of programming experience under your belt if you want to take a look at those okay so here's our sample form here um we're allowing people to provide information on a trip that the ski club is going on and you can see there's all sorts of different elements that allow the users to enter in information and in html terminology these are referred to as form elements so this whole item that allows the user to submit information that is referred to as a form and then the actual elements where the user enters in information types in text clicks on buttons those are referred to form elements that's a html only term in general these sorts of items are referred to in computer science as controls you may also hear the term widgets so an html form element is essentially a control uh which is appearing on a web page and so we're going to be putting all of our controls or our form elements inside of a form tag um for now i'm just going to put an id on this just so we can identify it we can maybe do some styling information or you know if we want to work with this somehow i need a way of getting to this and so i can go ahead and use the id for it id's not actually necessary there's a bunch of other attributes which may appear here so for example if the user is going to enter an information into the form and submit it to the web server the web server needs to know where the program responding to it will go and so there's a variety of other attributes which would appear in the form uh depending on how you're planning to use it for now we're just going to concentrate on and there goes maddie for now we're just going to concentrate on having the form tag itself and the elements that appear inside of it we can talk about the different attribute values that might appear in the form at another point in time okay so let's start off with the elements up at the top these are text fields and these are going to be created by using the input tag and we're going to see that the input tag is actually a multi-purpose tag which creates a bunch of different elements that we're seeing on this web pages as well as a bunch of other elements that aren't appearing on this form at all and the way the input element works is we determine exactly what the input element is being used for by looking at its type and so that in this case the type equals text and so that means that the form will allow the user to enter in text into a single line uh text field you'll notice that there's a closing slash here and this indicates that there is a single tag instead of a pair with a start and end tag and i want to go ahead and give it a name i've got multiple text fields here and when this information gets sent to the web server the web server needs to know how to identify which pieces of information go with what and so the name determines how this is going to be identified by the server when the information is sent in addition to the name when the user enters in information to the form and clicks on the submit button there's going to be a value which is whatever the user has entered into the form and what will happen is the server will receive the name and the value as a pair so if i enter in the word none here uh what will get submitted to the server is that the credit field as determined by the name on that text field the the server will receive the information that the credit field has the value none now so far our text field has started out empty uh you can start off the text field with a pre-existing value so you know probably if there's a field for credit card the correct answer is not none and so we might want to start off with a value so we could start off with the value one two three four one two three four one two three four one two three four um and so the user would be able to either submit it the initial value one two three four one two three four one two three four one two three four or they would be able to edit it in addition uh there's another attribute value pair that you can put into the input tag called the placeholder the placeholder gives a hint as to what's expected so in this case our hint is enter credit card number you may be wondering what the difference between providing a value versus providing a placeholder is and essentially the value is what will be submitted to the web server if the user doesn't enter anything in the field and if they do click on that field the value will be the initial value that they can edit in contrast placeholder you'll notice that it's got that light gray color and if user were actually to click on the placeholder text it would immediately disappear it is not actual in an actual initial value it's just sort of there as a hint all right another thing that's important to note is that if i have the input tag here i give it a name remember the name identifies when this gets submitted to the server the name identifies which particular text field is getting submitted but there's no actual label that appears to the user so if i want a label to appear here so let's say i wanted to say credit card that's in addition to the input tag so you need to include the input tag and then whatever formatting you want to do and whatever labels you want that is separate again from the the input element the input element is just going to create that blank empty box you may also run it to the password input type and this looks and works very similar to the text type uh the difference being that if somebody starts typing to a password you will either get these circles or you will get asterisks or or some other indicator that you have been typing into the password field but you won't actually see the text now i should caution you this password field is uh less secure than you might think it protects from somebody looking over your shoulder and watching what you're typing but it does not actually protect the transmission of information as the text gets sent to the internet so if you really want to have your password protected which of course you do you need to use the https secure variant of the http protocol don't just set the input type to the password and expect that that that is sufficient that is definitely not sufficient okay so as i mentioned earlier there's a bunch of different types of input elements and so our next type of input element is the check box and our example from our ski club web page is we're going to have a bunch of dinners that we're going to provide for people coming on the ski club trip and people can indicate whether or not they want to have that particular dinner with this geek club so there's a bunch of check boxes and they can go ahead and click as many or as few of the meals as they're planning to spend with this geek club now again as before with the input of type equals text there is no label provided so if you want you know there's a name friday dinner but friday dinner in the input name equals friday dinner that's actually information sent to the server that is invisible to the user if you actually want an actual label on the web page telling them what this little square that they're supposed to click off on is you actually need to manually label it okay now if you want the checkbox to start off as checked you can do this by adding the attribute checked to the input tag you may also see people starting off the value as either just putting that attribute check there or putting an attribute value pair checked equals checked what is going on there well i mentioned a couple times that i generally use a variant of html called xhtml which has slightly stricter syntax rules and so there's a bunch of different syntax roles uh tags and attributes need to be in all lower case uh if you're using the standard rules you can you know have ch input with a capital i um you can have input with a capital i and a capital t uh you can mix the case on the attribute names you can get quite a mess and it will still be legal one of the rules index.html is that if you have an attribute you must have a value so if we are following strict xhtml rules and you were to just say type equals checkbox and then you would just say checked with the attribute name with no value that would actually be illegal on xhtml so if we've got an attribute and we don't actually have a specific value we want to set it to the convention is you set it to the name of the attribute so thus you may see checked equals checked in this case i'm going to just violate the xhtml rules and just revert to standard html roles and just put the word check there i think students find that a little bit less confusing okay so those are check boxes another type of element you'll run into quite frequently is something called a radio button here are the radio buttons that i have on this webpage i allow people to determine whether they're planning to drive up to the ski lodge on their own if they want to take a bus with the rest of the ski team or if they've got a lot of extra cash if they want to fly up there and so the user needs to select one of these different options and in addition uh they can determine whether they want their own room or they want a double room now one thing that's important to note is the difference between a check box and a radio button so on the left here i've got my check boxes and on the right i've got my radio buttons and the difference here is i can check as many or as few of the check boxes as i want whereas the radio buttons these are mutually exclusive choices it does not make sense for me to say yeah i want to go on this ski trip but i want both a single and a double room you need to choose either one or the other in contrast as far as the meals go you know it would totally make sense for me to say i want saturday's dinner and sunday's dinner or you know i don't want any of the dinners or i want all the dinners and so these check boxes are are all independent of each other whereas the radio buttons are mutually exclusive and you do want to make sure that you use the correct type of element for the correct purpose i definitely have seen a bunch of amateur web pages where somebody's like hey i think those round buttons look really cool so let me go ahead and use those even though this is not a mutually exclusive choice and that actually is one it's confusing to users but two it also causes big problems because the radio buttons aren't designed to uncheck normally so so don't do that use the square check boxes for choices where the user can choose as many or as few as they want and then use the round radio buttons when you have a mutually exclusive set of choices these are called radio buttons because they're similar to the buttons on a car radio so let's say i've got this car radio here and station 1 is set to rock station 2 set to wrap and station 3 is set to country and let's say i'm listening to some rap and i decide i don't like this song and i hit the country button what should happen should i continue to listen to rap and listen to country simultaneously so they both play over the radio at the same time no if that that would be weird what happens is by clicking one of the other buttons whether i click the rock button or the country button that deselects the wrap station and selects my new station and so that's the way these radio buttons work when you select one of the choices whatever the previous choice is is deselected automatically and you have a new choice now another issue that comes up is that you may have multiple sets of mutual exclusive choices so i've got the choice of travel arrangements and i have the choices of rooms and so these are both different sets of choices they're independent of each other you know i don't want the situation where the user says oh i'm going to i need to select two of these so i'm going to choose bus and airplane and leave the room choices unchecked that doesn't make sense so somehow i need to tell the web browser that the none bus and airplane are all associated with each other and that single and double are associated with each other and so i do this by using the name here so if you look at the up at the top i've got the three input elements of type equals radio for the travel arrangements and down at the bottom i have the two choices for uh the room and notice that the three up on top all have name equals travel and the two down at the bottom saying name equals room and so that's actually how the web browser is determining which of these i can choose simultaneously and which ones are mutually exclusive you'll also note that i've got values on these and as i mentioned earlier when we were talking about the text fields what's going to happen here is the user is going to select a bunch of different options here and then they're going to submit the information to the web server and so the name which we were just talking about a minute ago not only tells the web browser that hey these these sets of radio buttons all work together as a set of music exclusive choices that's also the name which gets sent to the web server telling it hey this is the particular choice that i'm sending to you and then the value is the value that goes with that name so in this case um with the current selections what the web server would get is it would get the information that travel was set to air and that room was set to double i should also mention i think this was kind of an odd choice but if you create the buttons as shown here um using what i've shown you so far actually none of the buttons are going to start off checked so you know i said it was mutually exclusive and it's certainly true that you can't choose single and double simultaneously but it turns out you can choose none of the above and the way we've got the web page set up right now the initial value is none of them and so most likely you want one of these to start off as checked and so the way we're going to do that is we are going to use this attribute checked and this is the same one that we saw with the check boxes and so if you go ahead and create a radio button and you add in that extra attribute checked then it will start off initially with that darkened center indicating that that is the initial choice i also want to point out that as with the check boxes and as with the text fields there's no labels associated with these input elements and so you know i've got that room choices and single eighty dollars and double equals forty dollars that's extra i had to add that in addition to the input element you'll also notice i'm creating a line break there in order to put the room choices on a different line than my two radio buttons there okay another element that shows up on our web pages is what is generically referred to as buttons this particular web page has two buttons it's got a submit button and a reset button and the submit button when the user clicks on the submit button all the information in the form is gathered together and all those names and values are sent to the web server what happens when you click on the reset button is all the information the user has entered gets tossed out and everything gets returned to its initial value so what that would mean is if you had a text field with an initial value and the user had replaced that initial value the initial value would be reset if you had a check box or radio button which you would start it off with this checked and the user had changed those settings it would have been returned to the initial value so that's what reset does you'll notice that i've got type equal submit and type equals reset here but i've also got value equal submit value equals reset what's that what's going on here well it turns out that the web browser manufacturers don't really agree on what these buttons say and they could say lots of different things and what the value is in the case of the submit or reset button is this is actually the text that appears on the button itself and so you can see here in firefox and edge the if if i don't have a value on these instead of saying submit it actually says submit query whereas chrome says submit and safari ios says submit so you know if you want to make absolutely sure that the text on these buttons appears the way you want go ahead and add in a value in addition to having the submit and reset types you can also create a generic button this isn't going to make sense when working with a web server but it turns out that sometimes you're working without a web server just 106e students we'll talk about this another lecture if you're doing something called client-side processing you can actually carry out some scripting in the web browser without sending the information to the web server and you would do that by creating a button and uh input type equals button and then again you would give it a value to say what what should actually appear on the web page so these all appear the same to the user but they do have different purposes submit submits the information in the form to the server reset resets the information and the generic type equals button that's going to be used for client-side scripting okay another element that is on our ski club web page is a select and so i'm allowing the user to select if they want a rental package they might want no rental package they might want a ski package they might want to snowboard package you can tell how long it has been since i've skied because these prices are clearly way to heck off this idea where i click on something and then the menu appears this has a bunch of different names you can hear this may be referred to as a drop down list or drop down menu or a pull down menu but in html it's this is just referred as a select and here's how i actually create it so you can see that there's a select tag there's a start and end tag and then there's a bunch of different options where the options are their own individual elements we want to go ahead and give the select a name because this information is getting submitted to a web server and we need to identify what what piece of information is being sent to the server and then the values that will be sent to the server are actually the text that appears between the options start tag and the options end tag and so here what the server is going to receive is that the rental package is none but this can cause some problems because this works fine for none but if i switch to ski package 25 it turns out that that is actually going to get converted to this ski plus package plus parentheses percent 24.25 what the heck is that what's going on here is that we can't transmit a dollar sign normally uh through the http protocol so it needs to get converted and it turns out that percent 24 is the hexadecimal code which corresponds to ascii dollar signs so it gets converted since it's kind of a little bit messy to work with on the server and so we can do here is we can add values to each of the options so now i've got value none value ski and value board and what would get set is like rental package none same as before but instead of key plus package plus percent 24 25 uh what would actually get sent is just rental package ski because i set value equal to ski so you can see that that that would be a lot easier to deal with okay now the way i've got it set up right now the initial value that is appearing is going to be none because that's the first thing in my list of options if you want to change that you can let's say i want the rental package to start off with the ski package the way i'm going to do this is there's a selected attribute and if i have an option and i add a selected attribute to it that will be the initial element displayed on the web page you can also set a size on the select and that will turn this from a pull down menu into something referred to as a list box and so you can see here i set the size to three and all three elements are appearing instead of having a single element appearing and the user having to click on that in order to see what their options are with the list box which again you create by setting a size if you set a size that is smaller than the number of options you'll actually get a little scroll bar there and the user can scroll up and down to see the options there's another attribute that i'm not going to show you called multiple which actually allows the user to select more than one item simultaneously that needs to be done with the list box i think it's kind of confusing because there's no strong agreement between the web browsers for how you actually select multiple items like you click on one item and then you want to select the second one do you do you hold down the shift key do you hold down the control key it's it's really kind of a mess i don't really recommend multiple but you may run into that on web pages so if you do see an interface where you do see multiple items and the user is allowed to collect on more than one of them that's a select tag with multiple okay we're almost done with our elements here with our form elements here here's one more this is a text area the difference between a text area and a text field is that the text area allows multiple lines of text whereas the text field allows only a single line of text the text area is a little bit odd in that it's got a start tag and it must have an end tag if you were to just have the start tag and then try and end it with a closing slash that would actually be an error so that kind of raises the question like what goes between the text area start tag and the text area and tag and so the idea here is if you want to add text that will appear as the initial value you're not going to use the value attribute value pair i'm not quite sure why not because that that that would seem logical based on what we've already seen but that actually turns out not to work and be illegal if you want to put some initial text into the text area you actually have to put it between the text area start tag and the text area end tag also there's a variety of different ways to set the initial size of the text area i'm going to recommend that if you want to set an initial size to text area that you do in cascading style sheets there's also an html way of doing it i'm using a bunch of attribute value pairs in the text area tag itself all right so that's it for the elements that we're going to go over i do want to mention that there are a bunch of other elements that you can run into so you're seeing them being displayed here there's a number uh which displays a number and you can see there's up down arrows that you kind of sometimes prove as a spinner which you can increase and decrease the number with there's a range uh input type which creates the slider there's a date there's a time and there's a color which if you click on it opens up some sort of a color dialog like the color dialog i'm showing here right okay that's it for now i'll talk to you all soon you