welcome to exploring computing today's video is digital music part three compress that music as i suggested in the last video even though cd audio allows us to store music digitally that's not actually what most of you are listening to now if the standards were developed right now it's possible we just stick with cd audio but because the internet music standards were actually developed 20 years ago back when your parents were in college it turns out that there are some issues with cd audio the problem with cd audio is that cd audio takes up a lot of space how much space does it take well let's take a look here suppose we have a five minute song and we're trying to send this through the internet let's say for example your parents are in a band there's this new music called punk rock they create this great punk rock five-minute song and they want to send it home to their little brother or little sister so what they're going to do is they're going to go ahead and record that five-minute song convert it to digital using the techniques we just talked about a little bit earlier and then the question is how large is that file well let's go ahead and do the math here five minutes times 60 seconds per minute times 44 100 samples per second times two channels one for the left and the right speaker so remember we always have to double that if we've got two two channels um times 16 bits per sample and so it turns out if we calculated this all out it takes about 50 and a half megabytes now that doesn't sound horrible by today's standards but again going back to 20 years ago when your parents were in college they're going to send that through the internet to their little brother or little sister at home and the question is how long is your little brother or little sister going to take to download that brand new five minute punk rock song well it turns out it's going to take about five hours and the other little piece of information that you may be missing is that the telephone back then was used for both the internet and for voice and you had to choose which one you were using it for so for five hours well the little brother or little sister is downloading that five minute song nobody else can use the telephone so clearly this is a problem and so the solution is mp3 files and we're actually going to be talking about mp3 files in this video but i do want to mention that there are several other formats that are very closely related so you know if you're listening to music on an apple device that you bought from itunes that's probably going to use aac and if you're possibly listening on a windows device you might be using wma both the aac and the wma standard follow very closely on mp3 so almost everything i'm talking about here with mp3 is going to be very similar in terms of the other audio formats that you might be using there is a newer format that's quite different that doesn't bother doing as much compression and we'll talk about that in the very last video of this series okay so we've got a problem which is that our music is taking up too much space we need to reduce the amount of space it takes so that we can transfer these files around on the internet in a reasonable amount of time so what are we going to do well what we're going to do is we're going to perform a number of different steps to reduce the amount of space this audio file takes the first thing we're going to do is we're going to perform a fast fourier transform i don't want to go into the mathematical details on this to be honest uh i didn't like doing fast fourier transforms in college and that's one of the reasons why i stopped being electrical engineer i'm now a computer scientist but the basic idea behind a fast fourier transform is any sound wave or any wave for that matter can be broken down into constituent parts where each of the parts is a single frequency so you know we might have uh a song playing and we might be able to break that song down into oh here's a 60 hertz wave here's a 80 hertz wave here's 120 hertz wave you know they all have different amplitudes but when they all combine together that's what we're actually listening to so we're going to go ahead and perform this fast fourier transform and determine what the individual constituent frequencies are now what we're going to do is we're going to use something called psychoacoustics to eliminate some of these frequencies so psychoacoustics is the science of how humans actually listen to sounds so it turns out there's a bunch of sounds we just don't hear most notably we probably all know that there are certain frequencies that are just too high pitched for us to hear so for example a dog whistle works because when you blow a dog whistle there's a very high pitched high frequency sound that comes out of it and the dogs can all hear it but the humans can't because it's too high for humans to hear there's also other tricks that we can use to eliminate certain sounds from our information so for example if there's a loud sound and then there's a much softer sound that's in a nearby frequency humans just will completely ignore the softer sound so what we're going to do is we're going to use our psychoacoustics and we're going to start tossing out part of this music now one thing to note here is we are losing information so previously when we talked about compressing images we talked about compressing using the jpeg technique we talked about compressing using the png technique remember the png technique was lossless no information was lost we were able to reduce the amount of space those files took but we were able to completely reproduce the bitmap image that we started with in contrast the jpegs lose information and the mp3s are going to work similarly so one way of thinking about it is suppose i take beethoven's fifth the original cd audio sound and i perform the psychoacoustic analysis on it if i perform this well hopefully the music will sound exactly the same to me but think about my poor dog here my dog's listening to the original cd quality sound there's these beautiful high frequency tones and i don't hear any of that so i go ahead and toss them out i replayed the music in its new mp3 format and my dog is like what did you do what happened to all those beautiful high frequency notes they're all gone all right so we are losing information here we're not done yet though there's another step we need to take and that's called performing a huffman encoding now i don't want to go into the details on this but the basic idea here is that a hyphen coding looks for sequences which appear frequently and sequences that don't appear very frequently what it's going to do is it's going to store the sequences which appear frequently in less space than the sequences that appear infrequently i like to show this by analogy so many of you may be familiar with at least the concept of morse code and so probably the most famous mars code message is sos for save our ship so you can imagine the titanic's there the titanic's hit an iceberg and it's sinking and they're transmitting this message using morse code while rose and jack are freezing out in the water and so the message is sos save our ship and the famous symbol for sos in morse code is dot dot dot which stands for s dash dash dash which stands for o and dot dot dot which stands for s so they'd be transcending dot dot dot dash dash dot dot and then they would just repeat that so how is this relevant to our discussion well it turns out in morse code we can obviously transmit all the different letters but the amount of space it takes to transmit a letter varies depending upon the frequency of the letter so the letter e that's a super common letter and so we're going to transmit e just with a single dot and a that's pretty common too so we're going to transmit an a by a dot dash in contrast to q that doesn't show up very often so we're going to transmit that in a dash dash dot dash and so a q will take four times as much space or take four times as long to transmit as an e and so the huffman encoding is going to do something very similar with our music here okay so we performed our psychoacoustic analysis we've done our half-minute coding we have a new version of our song it's stored in this mp3 format let's take a quick look at how much space the mp3 is going to take as opposed to the as opposed to the original cd audio the first thing we need to remember is that mp3 is a lossy format just like jpeg and just like jpeg the amount of loss can be set so i can decide i really want this to sound as close to pristine as possible or i can decide i'm going to be listening to this in the gym so i really don't care how good the quality is it's going to be a very noisy listening environment anyway so some common settings are 128 kilobytes per second and 192 kilobits per second there are some others that you can use as well let's assume that we are using our 128 kilobits per second we've got our five minute song 60 seconds per minute kilobits per second that gives us 38 400 kilobits total for a five minute song and then i need to divide that by eight bits per byte and that's going to give us four and a half megabytes now remember our original cd audio song was 50.47 megabytes we're able to listen to the exact same music in four and a half megabytes by converting it to an mp3 so you can see we've saved a huge amount of space at a potential loss in quality where again we have at least some control over the quality loss in the next video i want to explicitly look at the relationship between analog and digital this is something we've been kind of dancing around with all throughout last lecture and this lecture and it's a really key topic so i want to spend some time explicitly looking at it