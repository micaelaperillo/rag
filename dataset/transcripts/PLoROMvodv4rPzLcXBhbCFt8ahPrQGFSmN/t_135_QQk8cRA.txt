welcome to exploring computing today's video is web page layout grid based layout as i suggested in the last video i think the technique you should be using to layout your web pages is the grid based layout you can go ahead and use flexbox for individual sections of your website but the overall layout of your website should be done with the grid-based layout so in this video we're going to show you how to actually do that now there's several things that you need to know in order to get grid-based layout to work the first one is how to define the grid and it turns out there's a bunch of different ways to define the grid and so we're going to show you some of those techniques but if you really want to get into it there's a lot more techniques available than the ones i'm going to be showing you in this video and the second thing you need to know is how to place elements onto the grid if you're doing something simple that's super straightforward and if you're doing something fancy it does get a little bit more complicated so we'll take a look at a little bit of your options there as well so this is what our first example is going to look like we have a basic two by two set of squares and so this is what our html looks like we just have four divs and remember the one of the nice things about grid based layout is we aren't really doing anything special in our html in order to get our layout to work the way we want we just have a bunch of elements in the html and we can just place those elements in the html anywhere we want on our website by using this grid-based layout okay so as i mentioned we do need to define the grid and we should define a parent that is containing the grid now if you want to use the entire web page is the grid which is what we're doing here then go ahead and use the body as the parent for the grid so i'm saying the entire body should be displayed as a grid if you want something fancier like you have grids nest inside of grids well then you're going to have to decide what the appropriate parent is but if you want the entire web page again to be set up as a single grid just go ahead and use it on the body and that's what i'm going to do for these examples here okay so body display type is grid and then i'm just going to go ahead and define the number of columns and the number of rows using grid template columns and grid template rows so i have two columns 100 pixels each i have two rows 100 pixels each and then um the way i'm getting it to actually display that border so it's really obvious what's going on is i've got the setting here for the border border one pixel saw blue with a two pixel margin okay and then i just placed the elements on the grid so there are a number of different style properties to do this i'm going to keep things simple i'm going to go ahead and use grid column start and grid row start this is going to allow us to place elements on the grid just using two different properties grid column start grid column and grid row start and grid row and we'll talk about the end elements a little bit later on for now if you just go ahead and put a start element it will just go ahead and put it in that particular grid element you don't have to worry about the end the end's only going to be necessary if we're doing something fancy okay so i'm putting uh the element with ida in one one element b and two one c and one two and d and two two and just remember because this is grid-based layout this is not going to be limited by what the html looks like if we want to put these in reverse order if we want to put them you know wherever we want to put them we can go ahead and put them up there you can also stack the items on top of each other but uh don't do that you'll actually be able to see the text jumbled on top of each other that's probably not what you want to do and uh if you want one of the elements to not show up for some reason like maybe um you've got it set up so that it looks great on a desktop computer but it's being displayed on a tablet and you know you just don't have space for everything and you don't want to have to do some scrolling remember you can use the display none on one of these elements and it will just completely disappear okay so as i mentioned there are different options for laying out the grid and so here you're seeing that we've got different measurement types one of the interesting measurement types is the percentages and so you can see um i'm laying out the grid 30 in the first column 50 percent in the second column and 20 in the third column and in the rows i'm actually using set measurements with inches centimeters and millimeters so the main point of this is you've got a bunch of different measurement types that you can use and in fact you can kind of do some mixing here as well one interesting measurement type that's provided is the fr measurement type fr stands for fractional and it basically provides a fraction of the remaining amount of space after the fixed measurements are used so here i've got three columns the first column 75 pixels and the last column is 150 pixels so that takes up 225 pixels and depending upon how wide the web browser window is we could have a lot of remaining space or we could have just a little bit of remaining space that fr that second column i've got marked as 1fr that takes all the remaining space so you know if if i've got a really wide window then one fr is a lot of space and i've got a narrow window then maybe one fr is it so much space but it's the amount of space left after the 75 pixel fixed amount and the 150 pixel fixed amount have been used fr will be whatever is left over now i can actually divide this up among several columns so um here what we've got is we've got the first column 75 pixels and then the the second column is 1fr and the third column's 2fr and so what this means is that again we take the fixed amount that's the 75 pixels we subtract that out from the total width of the window and the remaining space will be divided amongst all the fr segments now since we said one the second columns one fr and the third columns 2fr what this means is the third column will be twice as big as the second column so you can see here second column is one-third of the remaining space and the third column is two-thirds of the remaining space and the way this works is you just count the number of frs and divide it out so you know if i had uh one of the columns with five frs and one of them cost was two frs the third column was one fr i would add the five to two to the one and i would say oh each fr is one eighth of the remaining amount of space so you know just divides it up by the frs based on whatever amount of frs you put in each of the individual columns okay in order to do this next example we need to have a row span of column span so you can see bravo goes across two columns and alpha goes across two rows and charlie goes across three columns now as i mentioned there's a variety of different ways to do this and some of them are described in the handout but the one i'm just going to talk about here is uh we're just going to go ahead and put a start and an end okay so here's the body uh you know looks exactly the same as before i've just got four different divs and then here is my style rule for the body saying i've got a grid and there are three columns and three rows and they're all 100 pixels each and then here's the settings for a which is uh alpha has the ida bravo has the idb and this gets a little bit messy so if i only want to take up a single column i'm just going to provide a start if i want to take up a single row i'm just going to provide the start i'm only going to provide the end if i want to go across either multiple columns or multiple rows so in this case a or alpha goes across two rows and so i need both a start and an end now here's the part that gets a little bit messy uh the end is actually not the last and i don't know why they did this but the end is not the last row or column in the element it's actually the row or column beyond the last element so here i want alpha to go across rows one and two and so i list the row end as row three so again i'm covering rows one and two and my n row is going to be listed as three it's one beyond the end of the element for bravo which has the idb i'm going across several columns so the first column the start column is column two i'm also going to go across column 3 and then my n column is going to be listed as 4 which doesn't even exist here but again list the column or row beyond the end of where the element goes so i'm going from two to four where the two is included and the four is actually excluded so two to four where i'm actually covering two three again i think it's pretty confusing i don't know why they decided to do this way but that's the way they decided to do it okay and then here's a c and d and you can see that charlie covers columns one two and three so it starts with column one and it ends in column four because again it's one past the end of whatever's cover we're covering one two and three and so the end is four um and then with d uh it's only covering a single common single row so i don't need to provide either a column end or a row end okay one of the issues that comes up um previously i've preset the height and the width and i made sure that the text fit very nicely what happens if i've got a long amount of text and either i don't know how long that text is or i've set the height to a specific value and it doesn't fit so that's those are the situations we're going to look at let's first of all say you know i think the most common situation is we don't know how long the text is going to be but however long it is we want it to fit all right so we've got a couple choices here uh if this is true of all of our elements we can just not specify a height so you're generally going to specify width but you don't have to specify height if you don't specify height which will happen is each of the rows is going to be as tall as it needs to be to fit all the text available so you can see here alpha was really long so alpha has a title it's too long to fit blah blah blah blah and so what happened was the square just that whole row just expands out to take however much space is needed for the longest or tallest item and then the second row here with charlie and delta they didn't take very much space at all so they're super short so just you know don't provide any settings for the rows and you'll probably get the behavior you want alternatively you can explicitly mark the rows as auto so basically what we're saying here is the default behavior is the auto behavior and the auto behavior short for automatic is to just provide as much space as needed okay why would we want to use this auto when that's the default behavior well we might want to use auto we actually have a mix where some of the rows we want to have auto and some of them we don't so in this case i want the first row to be auto but the second row i want to just sit set to 100 pixels so this works totally fine uh now let's go back to that previous case where i said hey what if there's a fixed height and it doesn't actually fit in it okay so here on the left you can see that uh alpha did not fit in its square and it just kept on running over and you can actually see charlie along with the text there and then the second case it just got cut off and so what's going to happen here is the default behavior is if it doesn't fit in the row it's just going to keep on going and if something else goes below it well that's just gonna go ahead and get placed uh if you're explicitly placing instead of using the auto we talked about earlier uh they'll just show up on top of each other on the other hand if you want to if you explicitly want to just cut it off you can by setting overflow to hidden so here's the first example where we don't have overflow set to hidden and just keeps on running over and you can see i have no settings on a that's alpha uh that's the id for the alpha square other than just setting the column start and the row start and then in the second example i set overflow hidden and you can see it just gets chopped off so depending on which well i can't imagine you there are probably very few cases where you actually want the text to overrun and overlap with something else so generally you're either going to want to set it to auto or you're going to want to set it to a hidden okay last thing i wanted to go over a more realistic example so we've got our complex example from the previous video um and of course there are several ways to do this we could do some nesting but we're not going to do that we're just going to go ahead and create a grid here we're going to create a three column two row grid and uh and then here's my html i'm gonna put everything inside of a div with id main uh and then that can be used for things like centering as we've previously seen putting in a putting a border around the entire page contents uh there's a variety of reasons why we might want to do this but then i'm just going to put the the new stories just as divs right there uh inside of the diff equals main and so again the benefit here as opposed to any of the other techniques that we talked about in the last video is i can move these around there's nothing in my html here that is locking me into a particular layout so you know if i want to start off by having the record fulbright numbers that's the main story how this one show up on the left if at some other point i want to say that the key thing to talk about is that professor gretchen daly is funded on biodiversity i can just move that over to the left i can move any of these elements to any of these squares i want i can determine at some later time which of these stories should span multiple rows or multiple columns none of that is locked into my html my html does not specify any of that information it just says here are a bunch of stories all right and here i'm defining my grid uh i am going to put this on the main div that we saw a minute ago rather than putting on the body so you can see i'm setting up three columns here and i'm not bothering to set up any rows i'm just going to use the auto setting for the rows and then i just go ahead and put the elements down in some cases like the record fulbright number uh that's going to go across multiple rows so i have to start with row one i wanted to cover row two and i have to remember that annoying the n row is the one pastel row that uh i'm actually using so i'm using row one and two so the n row is row three um similarly for the invention for diagnosis that's starting in com2 it's gonna cover columns two and three and so the end column is column four um there's not a whole lot else going on here except for you will notice that i am putting some margin in here to get some spacing there's a bunch of ways to do the spacing i didn't really want to teach you guys additional style properties so there are some grid specific ways of doing this but based on what you already know you can just go ahead and play with the margins all right so this gives you a good start on how to use grid-based layout to create uh some interesting layouts next lecture for cs105 students we're going to dig in deeper as i mentioned previously we're actually going to recreate parts of the new york times and parts of the washington post using a grid-based layout i'll talk to you guys soon you