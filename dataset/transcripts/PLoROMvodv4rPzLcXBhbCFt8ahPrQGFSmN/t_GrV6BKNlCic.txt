welcome to exploring computing today's video is hexadecimal so we've seen inside the computer everything's done with binary but it turns out binary is a bit unwieldy so in addition to the binary number system and of course our own decimal number system computers often use a hexadecimal number system in fact i would say that you're more likely to see hexadecimal when working with computers than binary just because binary is just really difficult to work with so in this video we're going to take a look at how the hexadecimal number system works hexadecimal is base 16. we've previously seen that binary is base 2 and therefore we only have 2 digits 0 and 1 and of course decimal is base 10 and so we have the 10 digits 0 through 9 and so hex the decimal is going to have 16 digits but of course we don't have 16 digits so what we're going to do is we're going to borrow the letters a b c d e and f and when you add that to 0 to 9 you end up with 16 digits why do we use hexadecimal well consider this sequence of binary digits here this particular sequence of bits is actually an ad instruction for the mips cpu and treating it as binary is somewhat of a problem there's a number of issues with looking at this as binary one it's really long and as a consequence it's pretty unwieldy i personally find it a little intimidating looking at these long sequences of zeros and ones but more important it's error prone working with all these zeros and ones it's really easy to accidentally mix one of the zeros and the ones or to just completely skip one of them and realize when you're done that gee i was supposed to have 32 bits and i only ended up with 29 i wonder which one i skipped so we want something that's a little bit more compact now we can use the decimal number system so if one were to work out the equivalent it turns out this is equivalent of 21 880 in base 10 and that is quite a bit more compact but moving from binary to decimal is kind of a pain we've seen how to do it before i'm here we're doing it with just four bits but you can imagine doing with the 32 bits on the previous page is going to be a big mess and i haven't shown you how to move in the opposite direction from decimal to binary because it turns out it's a real pain so i personally try and avoid it whenever possible here's the problem decimal is base 10 and 10 really doesn't have anything to do with two there's a number of different number systems that work quite a bit better with binary than the decimal number system does one of them is octal and the other one is hexadecimal and these work much better because octal's base 8 and 2 to the third power is 8 and hexadecimal is base 16 and 2 to the fourth power is 16 and so there's a natural relationship between base 8 and 2 and base 16 of 2 that just isn't there for base 10 and 2. and it turns out that because 16 is 2 to the fourth power every 4 bits corresponds to hexadecimal digit so there's a natural breaking point where you can look at every four bits and say okay that's a hexadecimal digit that's hexadecimal digit that's hexadecimal you can't do that at all with decimal and since we're not really usually working with four bits at a time we're actually working at eight with eight bits at a time it turns out that every byte corresponds to a pair of hexadecimal digits so a lot of times when you're working with hexadecimal you'll see lots of pairs of hexadecimal digits we'll see examples of this in a minute okay so here's a 24-bit color from one of our previous lectures this particular color is cardinal red this is the official color that stanford uses for cardinal red and you can see we've got our binary numbers up top we've got our decimal equivalence underneath it although converting from the binary to the decimal numbers is again a bit of a pain and so what i'm going to show you is how to convert from the binary to the hexadecimal and this is going to turn out to be easier all right so we can immediately break down each of these numbers into sets of four each of these sets of four here is going to correspond to a hexadecimal digit and then to start off with you can just use a table and so here's a table of all the possible combinations of four bits and their hexadecimal equivalents but as you continue to get better at it you'll be able to do conversions between the two pretty easily you can do conversions of four bits to decimal without too much trouble although i do tend to stall out if i'm in the middle of lecture and i need to do a conversion you'll see me puzzle over the problem for about a second or two and just stall on lecture but if i need to do more than four bit conversion to decimal i'm just gonna have to whip out a piece of paper i'm not gonna do an eight bit conversion uh in my head while everybody's staring at me in lecture that's just i'm sure there are other people that are much better at it but i just can't do it all right so we're going to take our little table here or we can just go with our the right hand digit is our ones the next one is our twos next ones are fours and the last ones are eight so if we follow the ones two four eight you can see that this number here one zero zero zero this is actually an eight or i can look it up on my table here on the right okay so 1 0 0 0 base 2 is 8 base 16. and now let's do a full byte so this is a byte from our color 1 0 0 0 1 1 0 0 and immediately this is where it comes in handy compared to decimal if i were going to do the decimal conversions i have to go oh that's the ones that's the twos that's the fours that's the eights that's the sixteens that's the 32s that's a 64. so that's 128. and if the number gets much bigger you know 256 512 1024 you're trying to remember which place goes with what gets really messy but with hexadecimal i don't do that i just split this thing in half i say i just want sets of four bits so i say i've got two sets of four bits one set on the left one set on the right the set on the left we already did but you can do it really easy in your head one two four eight remember each of the places is ones the twos the fours and the eights and so we can see i mean we have eight on the left on the right we've got one two four eight and that's 12 in decimal and again that seems pretty easy you're like why don't we just use decimal the problem is that only the the decimal conversion only works quickly if we have small numbers of bits the hexadecimal conversion always works quickly because we never have more than four bits because we can always break the binary number into sets of four bits all right so we can look this up in our table or we can do in our head and we can see that this corresponds to a c and so we can see that this particular bit sequence we've converted the first four bits to eight and the second four bits to c and so combined together we can see that this whole sequence is 8c let's do another one and so this is another one of the components of our cardinal red color and i take the bits and i immediately break them into sets of four and i can see i have two sets of four the seven on the left is super super easy because that's clearly a one and a set on the right we have our ones our twos and our fours and so i can see that's a five and so i can see that this converts to one five and in fact here's the full color sequence here the amount of red is 8c the amount of green is 1 5 and the amount of blue is 1 5. and this is actually how it's commonly going to be represented and so what we see here is the official color guide from stanford and you can see they've got a bunch of different possible representations of this including remember we've got the rgb that's our additive color red green blue and then we have our subtractive color for printing that's our cmyk cyan magenta yellow and key or black and you can see down at the bottom they have the hex and they have the hex listing which is what what we originally converted this to they have that hex listing there because that's what the world wide web uses and then this is the color selector in photoshop photoshop has a web color setting and you can see that the web color setting again uses these hexadecimal digits so the point is if you're going to be doing art particularly art for the web you should be familiar with hexadecimal numbers these hexadecimal numbers are going to show up in lots of other places as well when we're looking at addresses on the network we'll see that hexadecimal digits show up on network physical addresses these are the addresses associated with your device that you have to tell stanford when you go ahead and register your computer with stanford so it will let you on the network hexadecimal numbers are commonly used when identifying individual bits in computer memory and another place you may see hexadecimal numbers is when you see error messages when the computer crashes you will often see hexadecimal not super helpful but you know you'll recognize you're like oh that's great my computer crashed on me oh and hey look i have special number i learned that in my computer science class you could tell you're looking at hexadecimal when you're looking at something that kind of looks like a number but in addition to the digits 0 through 9 you have a b c d e and f mixed in so you can see on the bottom right there i have what looks kind of like a bunch of numbers but i also have those fs and a's in there and so once you get trained for this you immediately look at that say oh that must be hexadecimal in addition though it turns out that there's a convention that sometimes used not always but when we're working with computers often if a number is preceded by a single zero that indicates that we're actually looking at a octal number and octal octal is used because octal is base eight and eight is a power of 2 and so i think it was used quite a bit for a while but we've mostly moved text a decimal but if you see something with a 0 followed by a bunch of digits that's octal number and if you see something started with a 0x as we see in our computer memory here that's representing a hexadecimal number so if you look at this little sequence here if we just see a 12 by itself that's probably base 10. if we see 0 1 2 that's a 1 2 and base eight and we see a zero x one two that's a one two in base 16. all right that's it for our little introduction hexadecimal but you will be seeing hexadecimals throughout the quarter you