welcome to exploring computing today's video is linking web pages part two formatting links so in the last video we took a look at linking different web pages and what our options are when using links in this video we're going to take a look at how you can format your links and along the way we'll learn about pseudo classes which can be used for quite a number of other formatting purposes in addition to links so you've all probably seen a link that looks like this this is the standard appearance of a link it's underlined and it's blue so let's uh first take care of that underline so if you want to play around with the underline that's actually controlled by the text decoration style property and you can get rid of it by setting text decoration to none so here i've got a rule that says hey all anchors and remember you know these are being created by ahrefs so that's an anchor tag all anchors turn the text decoration off you should be cautious about this though because people see that underline and they think it's a link um also as a side note a related note be cautious about underlining things that aren't links because people are used to things being underlined as being linked so they're going to try and click on like why is this thing not working this website's busted all right so if you decide you don't like that underline for your links now you've got an issue where you've got a bunch of things that you know are links on your web page but like how does the user know that they're linked so here i've got a bunch of colored uh words and are these links are they not links which of these are links it's really hard to say and so um 160 students we'll talk about this later in the quarter uh we've got a lecture on human computer interaction and there's what's sometimes referred to as an affordance which is a way of saying your user interface should make it clear to the user that there's some sort of interaction that can occur and ideally it should give you a sense of what interaction can occur uh and so a common example of this is um you know we've all been we've we've had those glass doors and you know if there's a push bar on there it's very clear that you're supposed to push it and if there's a handle you know that's easy to grab that's generally a sign that you should pull it so those are called affordances they're something that the human brain looks at it says oh i see how i'm supposed to interact with this and by removing the underlines here you've basically removed the affordance that's telling people that oh that's a link i should go ahead and click on it so be cautious all right um you can also you know if you want to guess them up you can go the other direction be like hey i don't want just an underline i want to overline an underline so it turns out you can do this by just setting text decoration and putting both overline and underline uh with a space between the two and that'll create this effect you're seeing here okay another thing that happens with links is the links are different colors right so you know we've seen the standard links um they're pretty boring so you know if you don't want to use the standard likes i think that totally makes sense but we have seen these all before so i'm going to start off with these for now we've got these standard links and uh you know if you've played around with the web for a while you probably realize that that first article that's a link to another web page and the second one is a link to another web page but i've already visited that other web page um it turns out that there's a there's a third color associated with links um i i don't know how many people actually realize this uh i i don't think i did until i started playing around with these you know the back end learning how to actually make the web pages but there's a third color where you you actually click on the link while you are currently pressed down on that link with like the mouse and a i assume the same thing happens with finger i haven't really noticed it with a finger but if you are actively pressing down before you release the mouse and presumably before you lift your finger it actually changes to a third color so there's a standard color there's a visited color and then there's a color while actively clicking on the link um so there's a problem with this and the problem is how how are we going to do this how are we going to create these colors so one thing you can imagine is uh you know i can have one class for links that i haven't visited in a second class for links that i have visited so dot link hey the color's blue dot visit it the color's purple but the problem with this is okay here's the html for that i've got the two links and one of my mark is class equals link and one of my mark is class equals visited but the fact that somebody has visited a page actually varies from one person to another so unless i serve up different versions of my html file to different people depending on whether they've visited links this does not work i can't have class equals visited for some people if they have visited that page before and class not having visited for other people i can only serve a single version of the html file and so there's no way to distinguish whether an individual person has visited that or not so this is seems to be kind of a problem i mean it would be really nice if i if i could do this and so it actually turns out the solution basically does look like this but it's a little bit different because the computer automatically adds this sort of what it refers to as a pseudo class so it acts as if there's a class on these anchor elements either link or visit it depending on whether the person has visited that web page or not but it's sort of added internally by the web browser and so i serve up just when i'm when my web server serving up copies the html file to people it does not have marked whether it's visited or a regular link because it doesn't know and then when the person gets that file their web browser sort of figures out it's like oh i see that's a link uh that link you've actually visited so that's gonna fit in this pseudo class visited i'm gonna pretend it is as if there was a class equals visited on it even though it's not actually in the original html source this one you haven't visited so i'm just going to assume that i'm going to act as if this is class equals link instead of the class equals visited it even though again none of those are actually present it's as if there was a class on it but the class is not actually on the elements it's something that the web browser is dynamically working out on its own and we're going to distinguish between real classes and pseudo classes because the pseudo classes are going to have colons in front of them instead of dots in our style sheets so here i've got three pseudo classes call on link call and visit it and call inactive so colon link that's going to be the pseudo class when i have a link on my web page and the user has not visited that link before call and visit it that's going to be the pseudo class associated with an a tag if there's a link on there and the users actually visited it and then colon active that's going to be the pseudo class associated with an a tag when somebody's actually actively clicking on it now when you actually write these out for your style sheet you actually want to put the a in front of us so a colon link a colon visited a con active so we're combining the fact that hey i want this to apply to anchor tags and i don't want to just just apply to any anchor tag i want this to apply to anchor tags where we've got that active pseudo class colon visited or where we've got that active pseudo class colon active um why do we need to put the acorn there it turns out there's a bunch of pseudo classes and some of these actually work on different elements so just using the example we've got here acorn active that's the color when somebody clicks on a link there's also a button colon active where somebody clicks on a button and you want the button to change color if we were to just say colon active it would not be clear to the web browser whether this applies to link colors or to button colors or to both and i think it would actually just use it for both but that may not be what you want so definitely put the a columns in front and so here's the example again i've changed the colors because who wants to use the standard blue and purple um so we can see so i've got my links and you could say i i'm saying if i've got a link normal link that should appear red visited link that should appear green and active link that should appear in blue there are a bunch of other pseudo classes there's actually quite a few here's some of the fancier handier ones it says there's a first child on the last child so let's say you have a list of items and you want to do something different with the first time in the list like maybe you want that first item in the list to have a bit of extra margin uh in front of it or you know maybe the last child you want to uh put it put a line underneath the last item and so these are going to you're going to be able to use these on your elements uh so you're going to be able to use these in your style sheets to select particular elements and there's the nth child um so ant child three that says hey here's a style rule but i only want it to apply to the third element of this list of elements or um let's say you're trying to do zebra striping on a table that's where you've got some sort of table and every other line is a different color so you've got like a bunch of dark gray lines and a bunch of light gray lines it looks a little bit nicer it's a little bit easier for people to tell what's going on with the table you can do that using the nth child odd and add to child even and so that would be a rule where you say hey every odd element in this table i want to use this particular style and every even element on this table i'm going to use this other style so those are pseudo classes so that's it for our discussion on links we've learned quite a bit more about links from the html side and we also learned a bit about styling them and this idea of pseudo classes can come in handy in a bunch of other places as well all right i'll talk to you soon you