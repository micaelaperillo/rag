welcome to exploring computing today's video is creating web pages advanced image techniques so in this video we're going to take a look at some fancier things that you can do with images i want to start off by talking about image maps the basic idea behind an image map is uh suppose i want to link different parts of an image to different web pages and it's kind of apropos that maddie's gone out of right now because she's our first example so here's maddie facing off with the roomba and let's say we want to link this image to a webpage well that's easy enough we already know how to do that we just go ahead and have the image tag we should go ahead and surround it with an a href equals and then wherever we want the user to go when they click on the image they're going to go to that location but you know suppose we're not quite sure do we want to go to the web page many.html if somebody clicks on madi versus the roomba's photo or do we want to go to the roomba.html webpage it'd be nice if we could actually go to different web pages depending on where the user clicked on the image so the user clicks on maddie's part of the image we go to maddie.html and if we click on the roomba part of the image we go to roomba.html and it turns out that this technique is actually useful in a lot of places so for example here's a aerial photograph of stanford i got from the stanford archives and you can see uh you know we might want to have different parts of campus highlighted and if people clicked on the different parts of campus we would go to different locations based on the specific part of the photograph they clicked on or let's say you were part of the organization and you know you had a photograph where there were a bunch of the members of your organization all in the photograph and i use this particular image because i wanted an image with a lot of people in it that i knew wasn't going to have a copyright issue so this is a us government photograph all right so uh we've got different people uh in this image um we have a bunch of people everybody knows we have uh in the back we have our counterterrorism expert um we have uh i should look this up beforehand i believe that uh james clapper and the effort right uh believe he was uh director of national intelligence anyway so there's a bunch of different people on this photograph and if we click on the different people in this photograph we want to go to the different web pages based on where we click on the photograph and so that's the whole idea behind image maps and they're actually pretty straightforward they are somewhat specialized you know these situations don't come up all the time but they definitely do come up so this is a handy tool to have in your toolbox so we're going to have a simple example to start off with and so we have a image of a computer here and there's different parts to this computer so suppose we're selling these computers and we want people to be able to go to different locations uh different web pages to learn about the different components of the computer if they click on the speakers we're going to take them to a web page where we talk about the speakers if we click on the monitor we're going to take them to a different web page specifically about the monitor and so on um and i i'm talking about moving the web page from one location to another you can actually also do some other things you could trigger some javascript based on where the user was moving their mouse as well so this isn't strictly limited to just creating links all right so what we need to do here is we need to take several steps we need to define a map and so this is the map for our computer image and there's a couple things to note so we have a map start tag and map end tag and we've given a name to the map the map start tag has a name attribute value pair and so that's going to be important ultimately we're going to need to know what that name is in order to link this map to the specific image and then we have a whole bunch of different areas here and each of these areas has a shape in this particular case they're all just shape equals rectangle and then we have a set of coordinates and then we have a href equals and so that is where we're going to take the user the next web page we're going to take the user if they click inside this particular area and then you're supposed to also have an alt okay so let's take a closer look at this first area here shape rectangle coordinates 50 20 215 157 what are those so this is to take the user to information about the computer display or the computer monitor display and monitor more or less synonymous and so the 50 20 is actually the coordinates of the top left-hand corner of the uh monitor 215 157 is actually the bottom right hand corner of the rectangle where if we the user clicks within that rectangle we want them to go to components monitor.html and as to where you're going to get these coordinates most image processing programs are going to be able to get you these coordinates you may need to look up uh online to find out exactly where these coordinates show up as you know i'm on windows so windows comes with a free program called paint paint definitely has these coordinates available to you certainly if you want to use something fancy like adobe photoshop that's going to have these coordinates for you so you're just going to have to load up your image into one of these image processing pieces of software and then actually just move the mouse around get the coordinates of the individual rectangles you want to work with okay so we've got all the different parts of our map defined all the different rectangles which we want to have take the user to different locations we're going to go ahead and get that set up all right the next step is to actually associate the image map with the actual image and so here i've got the img tag that i'm using to actually put this image on the web page and then i've got the map that we just looked at a minute ago and so the key points here are the img tag now has this use map attribute value pair and the use map attribute value pair should have its value a number sign followed by the name of the map um we mentioned the name of the map a minute ago well here's how you connect the two together so i think this technique is pretty straightforward uh you need to know it exists so now you know it exists and then you know when you have those sort of situations where this is going to be useful it's not too bad to work with now i've been showing you just rectangles but this actually works for non-rectangular areas as well so here i've got a part of the cantor center for visual arts which is stanford's art museum and you can see we've got that octagon in the top left which is actually where the thinker is and so it's possible to define polygonal areas as well as rectangular areas and then we've got that little semi-circle down in the bottom right you can go ahead define that as a circular area okay so here's another technique which can actually be extremely useful if you have a web page with a lot of really small images and so this is called css sprites or css image sprites and the basic idea here is if you have a lot of images on your web page it's going to take a long time to download remember each of those images needs to be downloaded individually the web browser can download several different files simultaneously from a web server but at some point it's going to max out and so you can't download 15 images simultaneously from a web server that's not going to happen it's going to start downloading them sequentially and that's really going to slow down your web page appearance so there's several different techniques that you can use to get around this the first one is css sprites and then i'll show you another technique in a couple minutes okay so i've got two different web pages here the webpage on the left is the sprites version of the page and the version on the right is the no sprites version of the page otherwise they look pretty much the same if you look really carefully i didn't do a great job getting the alignment exactly right on these items but it's certainly possible to get all the items properly aligned on both versions of the page okay now here's the thing that's a little bit fancy so it turns out the left version of the page only has one image for the entire web page whereas the right version of the web page has four images for the web page how can this be well let's start off with the no sprites version of the webpage this is the version that you you guys can all create at this point and so uh you know in the body i've got a bunch of img tags i've got four different img tags and i've got four different images on the server so i've got the caution the no the signal and the stop and those are all independent image files and they all get loaded by these four different img tags here's what the sprites version of the html looks like you can see that we've got four different divs but i don't actually have any images at all on the in the html what's going on here so as the name css sprites suggests i'm actually going to work on the images from the css part of the the html file so instead of putting the information in the body i'm going to go ahead and put it in the style sheet either an internal style sheet or an external style sheet and so what i've got here is this is what the web page would look like if i turned a border on for those four divs if you're actually doing this for css sprites you're not actually going to put a board around it but i just want to want to put give you an idea of what's going on here that's the space those borders are there that's the space that i'm setting aside for these four divs and i'm going to go ahead and do that by giving them a height and a width in the in the style sheet and then i'm going to have a single image that i'm going to download for this webpage and here it is combine.gif and you can see that all four of the symbols that i want to appear on my web page are all combined onto this single gif now what i'm going to do is in the style sheet i'm going to go ahead and write style rules for each of these different divs you'll notice i gave each of the divs different ids and so this first div i go ahead and give it a height and width and then i take advantage of this background image style property and so what the background image style property does is it says you can take any element on the web page and you can stuff a background image behind it and in this particular case i'm going to stuff our combined.gif as the background image and it turns out if that background image doesn't actually fit within uh the background of the particular item um there's there's a bunch of things that you can kind of control and play around with but the basic setting here is it gets cut off so you know that whole image is behind our div here uh but only the uh traffic light's actually going to show up i've left the rest there kind of uh faded out just to remind ourselves that that's the whole that whole combined gif is back there but only the traffic light is actually going to appear on the web page and then i go ahead and do the same thing for the next div so for sprite 2 that's the id for our second div i go ahead and do the same thing but in addition to using the background image style property i use a second style property associated with background images which is the background position i shift that background image over slightly so that the traffic light is no longer showing directly behind this div instead the stop sign is showing behind it and again everything's going to get cut off except for what's actually behind the div so you know i'm showing that full gift there with the traffic light and the stop and the uh the cancel and the caution but really the only thing that's actually going to appear on the web page is the part that's directly behind this div which is a stop sign and then of course i just do the same thing for the other four images and ultimately what appears on the web page is exactly the same thing that appeared on the web page when i had four different img tags so you know again you you probably won't see huge savings if you have just a few images um i believe uh the web browsers will now download up to five files simultaneously i could be wrong on that but uh it used to actually be only two files simultaneously and they've slowly increased the amount but uh you know the more things that you're trying to download from the server the slower your web page is going to appear and so this is an example of a real world sprite this is an old sprite page for as you can tell amazon.com and if you were to count up each of these little parts of the image there's probably over 60 images here and so if amazon needed to download these all individually that would take a really long time that would really kind of bog their connection down it would slow down the the appearance of the web page for their customers and they don't want that to happen so instead they download a single image file and then they use the css sprites technique to uh to actually put the parts of the sprite file onto the web page okay so previously we've seen that we can take an image with no sprites and have four images on the web page and we can take an image with sprites and have one image on the web page i am now going to reduce the number of uh image files associated with the web page to zero i'm going to simplify it and just work with a single image mostly because this is going to turn out to take up a lot of space on the screen but just you can extrapolate from what i'm going to show you and actually replace all four of these images on on our sprites and no sprites version of the webpage with this new technique and get completely rid of any image files okay so this is called base64 and the idea here is bits or bits as we talked about the very first week of this class and so it turns out that you can stick bits into your html file um the html file is going to expect to look like text that's okay we can go ahead and convert an image file to a bunch of bits and then we can ask the computer if these bits were being represented as uh as text uh what what would this appear as what would these ascii uh characters look like and so that's exactly what this this technique does so um the simplified version of the web page with just a signal is actually going to take zero image files and here's what it looks like now we've got our img and then at the very very bottom you can see i close out the img tag with the alt equal signal and then i've got this big old source thing what what the what the heck is that and so that is the actual bits that compose the uh the signal um and so uh i've gone ahead and taken those bits and said hey if i were to represent those bits as as text uh what would they look like um and i've gone ahead and converted those bits treated them as text stuck that into my text editor for my html file but when the web browser gets to it it's going to look at this and say oh i see that this is marked as src equals data image gif base64 and i'm going to re this big long text string and actually treat it as a bunch of bits which ultimately i'm going to treat as an image this technique can definitely increase the speed at which your web pages will download it is a bit more work it's a little unwilling to work with but it's definitely out there and something that's generally supported now so you may be wondering if i want to use this technique how do i convert my image to those text strings basically there's a whole bunch of websites out there that will do it for you just google base64 image encoder you can find different websites that will take your image convert them to strings and then you can just take those strings and stick them into your html files okay that's it for now i'll talk to you all soon