welcome to exploring Computing today's video is computer networks what is a protocol today we're going to be focusing on protocols and we're going to take a detailed look at the protocols underlying the internet and it turns out that the protocols governing the internet have quite a bit to do with what we can or can't do with the internet and why the internet acts the way it does so let's start off by answering the question what in the world is a protocol I want to start off by talking about why we need protocols and I think that will give you a better sense of what the protocols actually are all right let's go back to the example we had last lecture where I've got a bunch of computers on the Wi-Fi network in a classroom and I'm trying to send a message to my friend at the end of last lecture we talked about naming schemes and how to identify individual computers on the network so at this point we have a way of identifying each individual computer so suppose I want to send this message I don't have to send it to everybody in the classroom now I can give the specific address for my friend's computer and make sure it goes to her but what am I actually sending am I just sending the message and she's just going to get a random message saying somebody Center the I love computer science are we going to identify it with the address of the computer this kind of seems a little bit creepier if we're using the physical or Mac address here might be a little bit better if I had the host name although although in general most computers don't actually have host names host names are generally reserved for things like web servers where a lot of people are going to have to access it using a name what I might want to do is include some sort of information with the message that identifies who sent the message and who that message is going to so it maybe something like this to Tammy from Patrick but I have to decide exactly how that's being sent remember what's really being sent from one computer to the other is just a sequence of bits organized into bite so you know maybe I put her name first followed by a that's the asking null that slz is the asking null uh which corresponds to the entire bite being just zeroed out um followed by my name or I could said my name followed by the asking know followed by her name or I could tack on a from and a two and then the question comes well is the from followed by colon is it followed by Dash the basic idea here is there's lots of different ways this message can get sent but what needs to occur is both my computer and her computer need to be in complete agreement on exactly what this message looks like not just the contents of the message but the other information associated with the message like what format am I going to use to send who the sender is and who the recipient is and so this is really what a protocol is a protocol is an agreement between two or more computers on how they plan to carry out a task let's take a look at a real life protocol we're going to look at the HTTP protocol this is the protocol used by the worldwide web and as you can see here HTTP stands for hypertext transfer protocol we'll actually be talking about exactly what hyper text is next lecture for now here's my laptop it's connected to the internet you remember these diagrams from last lecture representing some sort of a network and I'm connected to part of the network and then there's a whole bunch of other networks between my network and where the web server is and that's the dot dot dot the internet and as you recall from last lecture the internet is actually an inter Network a connection of a whole bunch of different networks all combined together and then on the far side we've got the web server now I'm representing the web server by just a box please don't tell my art teachers I've completely given up on any sort of perspective drawing but here on this inset here you can actually see what a web server actually looks like and what we're seeing here is this is a rack that has a whole bunch of different computers in it each of the horizontal components inside this rack actually represent present a different computer and this is what most of the web computers that you're interacting with look like particularly if you're interacting with a commercial installation but we're just going to represent it by that square box okay so here's the simplified diagram I'm getting rid of all the internet stuff but do keep in mind that internet is still there okay so I got my computer and I need to contact the web server we saw previously that the web server is identified by the host name and that needs to get converted to an IP address also known as IP number and then I'm going to go ahead and send the request through the internet to the web server now it turns out that there's actually several types of requests I can make to a web server I can make a get request which says hey you have some information can you go ahead and send it to me I can use a put request which says Hey I want you to do something for me that's going to modify your state here's some information you might need and this is used for things like say electronic Commerce where I'm actually putting an order so I'm sending the order information to the server and the server is changing its status so that it REM remers my order um there's a delete which generally you're only going to be able to do if you have authorization anyway the point is here there's a whole bunch of different requests there are several more that I have not covering here so this all to be part of the HTTP protocol when a a laptop or some other computer is connecting to the web server what sort of requests can it make of that web server and in addition to the request type such as get or post or delete there's actually a bunch of other information that gets attached to the request and so these are just a couple examples we talked about character and codings in fact we talked about character en codings the very first day of class when you learned how to uh Egyptian hieroglyphs using the Unicode utf8 character encoding so I can send information to the web server saying these are the sorts of character en codings I can handle you can send a request to the server saying hey I have a copy of this file but if the file on the server has been modified since a particular date then I want a new copy of it you can tell it that you accept particular types of encoding and in this case I'm not talking about character encoding I'm actually talking about the compression technique so we've talked about compression with images we talked about compression with sounds compression also occurs with files you guys have experimented with that if you've ever used a zip file and so one thing that the server can do is it can zip up the files together or use some other compression technique to reduce the amount of space those files take before sending them through the world y web and so that's what the accept encoding is saying it's saying hey I can handle those zp files if you want to go ahead and send them to me in that format and so you can see that there's lots of different options that the sender or the requester can do with this particular protocol and then as far as response goes the main part of response is the files that I'm going to get back in this case I'm representing as an HTML file we'll talk about HTML again next week but in addition there's other things that the web server can send to the requester that includes hey this content is encoded here's the encoding it includes here's how long this file is good for here's when it can expire and then typically it will also include an idea of how long the file is so that the recipient will know when the file is done transferring another important part of the protocol is the status code you may be familiar with some of these the 200 code you guys never see but your computer does receive it when your computer receives the 200 code it knows oh everything's good and then we of course we have the infamous 404 which means you're requesting a file but that file does not exist the 403 which in some respects I think is a little bit harsher which says yeah that file is there but I'm not giving it to you you don't have permission and then 500 which means there's a server error in fact there's a whole slew of these different status codes and so this is just a simple introduction to http but mostly I wanted to give you a sense of what a protocol looks like using a real life protocol and so from this we can see that yes a protocol is an agreement between two or more computers on how they're going to carry out a task on the network but we also see that sorts of information that needs to be included so the protocol should specify what sorts of requests one computer can make of another request what sort of information would be sent with that what the format of that information is and then also important is what to do when something goes wrong and that's why we have those different error codes we saw there one topic students often find confusing is what is the relationship between a protocol and a program so let's take a quick look at that we've seen how the HTTP protocol works there are many different programs that support the HTTP protocol so for example Chrome Firefox Safari Edge these are all programs that run on are personal computers that understand how to communicate with web servers using the HTTP protocol and as long as our web browser programs understand and follow the same rules they can interoperate with any of the web servers similarly there are many different types of web servers out there and as long as the programs on those web servers follow the rules for HTTP they are able to respond to requests from the different web browsers I should also mention that well most of us typically think of the program that is making requests to the web server as our traditional web browser there are other programs out there that make the exact same HTTP request to the web server as our traditional web browsers do so just to provide a few examples there are audio web browsers which people that are visually impaired use and they will actually be able to read the web page to somebody and then there are other programs such as the Google Search bot which doesn't even involve a human being it just makes requests to web pages and uses those web pages to build up its database which it can use to tell us how to find particular topics the bottom line is the protocol just specifies a set of rules that different programs need to follow if they want to interact with the other computers on the network that are planning to work together to carry out this task many people can write different programs following those protocols and in fact as we've seen here with HTTP they often do in the next series of videos we're going to take a look at the actual protocols on the internet it turns out that the protocols on the internet are what it's referred to as layered this is a relatively complex topic but by understanding the layered protocols and how they work you will have a much much stronger understanding of how the internet works so we're going to go ahead and go over this the next video is going to talk about what layered protocols actually are and then after that we'll take a close look at the actual layers used on the internet I'll talk to you soon