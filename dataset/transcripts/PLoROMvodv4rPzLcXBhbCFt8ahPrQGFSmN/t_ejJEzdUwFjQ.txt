welcome to exploring computing today's video is digital music part two from analog to digital so in the last lecture we saw that music is really a sound wave and that we can actually take a look and see what that wave looks like what we need to do now is figure out how we can take that wave and start using the bits and bytes that we saw in the previous lecture so let's take a closer look at that wave right now and make sure we understand what's going on here so here's a very close-up view of part of the wave from beethoven's fifth symphony and moving along the x-axis this is an increase in time so as time goes on we're seeing the magnitude of the wave at different points in time so in order to store this information into our computer what we need to do is we need to take measurements at specific points in time and what we're going to do is we're going to store a sequence of numbers corresponding to the height of the wave at different points now one of the decisions we need to make when we're doing this is how often to take samples and this is referred to as a sampling rate okay so what we're seeing here is the original sound wave with some samples taken the black vertical bars represent specific times that i'm taking samples the red line represents the line using the samples that i've taken you'll notice that the red line does not follow the original light gray line the light gray line is the original sound wave if we were to take an infinite number of samples then our red line would match the gray original line but we can't take an infinite amount of samples that would take an infinite amount of storage so what's happening here is we're taking specific points along the line and we're attempting to reproduce the original sound wave using the samples we've taken let's watch what happens if we reduce the sampling rate this next image shows a reduced sampling rate again we're seeing samples taken over time but we're seeing a lot fewer samples taken and you'll notice that the red line is starting to diverge pretty far from the original gray line this new wave does not look that much like the original wave and one of the problems is because we haven't taken samples frequently enough our samples have completely missed some of the peaks and valleys of the original signal the other thing we have control over is what our measurements look like along the y-axis this controls our dynamic range and what we can do is we can change what's referred to as the bit depth which is the number of bits we're setting aside to represent numbers along the y-axis here's two examples here in this first example i'm storing numbers between plus 8 and negative eight and in the second example i'm storing numbers from plus two to negative two now if you look at these carefully and you think back to the previous lectures you'll realize that these are slightly off it really should go from plus seven to negative eight and plus 1 to negative 2 in order to actually match the number of bits but i thought that would make the problem even more confusing so we're going to go ahead and stick to an even number of positive numbers and negative numbers just to keep the example simple all right so let's take a look at the plus 8 to minus eight example first and you can see that i'm taking a number of samples so the thing to remember here is i'm setting aside a given number of bits so i can't store an infinite number of possible values i can't store o the height of the wave at this point is 7.2562 i need to store it in the number of bits i've been given so in this example i'm assuming i can store integer values from positive 8 to negative 8 and that is it and so you can see i'm attempting to follow the original gray line but i'm limited to being able to store values along these specific discrete integer values now let's take a look at the other example where i'm only able to store values between negative two and positive and you can immediately see that this next example is not going particularly well so what's happening here is the greater the bit depth the more accurately i'm able to represent the wave so we've seen we can control the sampling rate which is the number of samples taken over time and we can control the bit depth which helps determine the dynamic range and that tells us what particular values we can store at each of the sample points so it may be obvious that the more samples we take the better and the wider our bit depth the better and so the question is why don't we just use huge values for each of these the answer is of course that the higher the sampling rate is and the greater the bit depth is the more space our music is going to take so here's the standard that cds use 44 100 samples per second often just written as 44.1 kilohertz 16 bits per sample and two channels a left and a right channel dvds use something very similar in terms of the same bit depth and very similar numbers of samples per second blu-rays can actually have an increased number of bits per sample but this is essentially what most of us are listening to but we're not really quite done yet because it turns out there's an extra step that occurs before most of the music that you listen to actually gets on your computer and that's because this specification is for an actual physical cd disk and i'm guessing almost none of you actually buy cds so in the next video we're going to see what this extra step looks like and why it's there