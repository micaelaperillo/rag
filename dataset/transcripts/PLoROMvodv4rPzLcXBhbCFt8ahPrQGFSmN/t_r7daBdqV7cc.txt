welcome to exploring computing today's video is creating web pages responsive web design so i've mentioned before that one of the key differences between working with web pages versus working with a printed page and one of the reasons why you can't just take a word processor like microsoft word and generate a web page from it i mean technically you can but it's not going to get you a very good web page is that we don't have control over the output device when we're working with a web page and we're working with a printed page when we're working with microsoft word we can say oh i'm going to print this out on an eight and a half by eleven sheet of paper or i'm gonna print this out on a 17 by 11 sheet of paper with the web browser we don't have that sort of control our website says hey this might be served up on a little cell phone this might be served up on a big tablet um this might be served on a huge desktop computer it might be served on somebody's hd television so we have no control over the output device and so what we need to do is we need to create web pages that will work for all of these different devices and this is kind of a problem because the attractiveness of a web design and the utility is going to vary from one device size to another so something that looks great on a cell phone it's going to look really stupid on an hd television if you know we just take our cell phone design and slap it up up on the hd television so that's not going to work very well and in addition there's various user interface or ui elements that work well on some devices but not others so one example of this would be tool tips a lot of programs use tool tips and people started using tool tips for websites where you move the mouse on top of something you let it sit there for a minute you get some information about that element well that doesn't work with cell phones because you can't hover your finger over a particular element and have the cell phone realize you're doing that in order to bring up a tool tip similarly you know when you're working with your cell phone you've got your finger which is pretty big and fat compared to the sort of pointing device you can get if you've got either a mouse where you've got that nice little thin pointer or if you're working with something like say a a pencil device like say an apple pencil when you're working on your cell phone so in one case with the pencil or the mouse pointer you've got really fine grained control and you can carefully tap small elements on the screen and get it right whereas if you're working with your finger you've got a much more coarse pointing element and it's going to be much harder hitting those different targets so you know depending upon the actual device we're working with some designs will work really well and some designs will work pretty badly and so the question is how how are we going to respond to this so one possibility and this is the basically the way things work for many many many years is that the website designers would just set a minimum standard size and target that so you know i've been working on the web since uh i guess around 97 when i came to stanford uh the web's actually a little bit older than that basically i was working on my phd i was finishing my phd in the last year or two of my php people were like hey there's this cool thing called the web you should check it out and i was like no i'm busy finishing my uh dissertation here and i worked a couple years in industry and then i came to stanford and uh when i took over cs 105 i decided we should be teaching web stuff and so that's when i started working on web technology anyway slow aside there okay so the way things work back in the day and for many years after the web first was introduced was the websites make a decision on what they sort of thought the minimum type of device that people would be visiting their website on so for a while websites were designed for devices that were 640 pixels wide or less and then they were designed they sort of upped it and said okay we think that people uh actually have slightly bigger monitors now so let's go ahead and design our website for people with at least 800 pixel devices and then they redid their design for 10 24 pixel devices and in fact you know every couple years the major websites would do another redesign and the reason why they were doing a redesign is because the monitors that they assumed that people were visiting websites with were slightly larger and so they'd they'd redesign their website for that slightly larger size and you came to visit their website and you had a smaller monitor well you had to put up with uh horizontal scroll bars because the website did not actually fit in the amount of space that you had and if you came to visit that website with a much bigger monitor well that's too bad it was still you know stuck on a particular size so um that was the original way people to sign websites for different devices basically they didn't okay another approach that gained a lot of traction and still is out there is the idea that you actually have different websites for different devices most notably there's often a desktop version versus a mobile version and we can get this because when you make an http request to a website the web browser actually sends along a bit of information on the user agent and so what the web server can do is it can look at that user agent and say oh i think that this particular user agent should be sent to the desktop version or this particular user agent should be sent to the mobile version of the website this also doesn't work great one you have to keep an updated list of what all the different user agents are and where they should be sent and two it means you're maintaining different multiple websites one for the desktop and one for mobile and there are other some also some other issues for example i spent a lot of time on my ipad and it turns out that the ipad often gets shuttled off to the mobile website which can be pretty problematic if the mobile website's designed for a little cell phone and you've got this nice big screen and you're like what the heck guys can i take advantage of my uh 11 or 13 inch screen and they're like no you're in the mobile website you're kind of stuck with this okay so these are all unsatisfactory solutions they've all been done they've been done professionally there's a lot of mobile websites out there and you know and i on the one hand that kind of might make sense in some cases but on the other hand you know i think we're blurring the lines between what's a mobile device how large is a cell phone what's a small size tablet what's a large size tab on what's a desktop computer so there's actually a better approach and the better approach is something called responsive web design and so what responsive web design is going to do is it's going to get information about the actual device that the user is using it's going to ask what the characteristics of that device are and it's going to have different style rules on the basis of that device so you know this works hand in hand with the cascading style sheets in order to use different cascading style sheet rules for different devices and as i've alluded to before this works great with the grid-based layout that i'm recommending you guys learn all right so let's take a look at how this might might work um i'm gonna start off by kind of giving an overview example and this is actually the homework assignment for one of my other classes in fact this part right here you all should recognize because this is part of your homework assignment um so you know you've all done this this particular assignment here but what i do for my cs193c class this is a web development class for majors that i teach during the summer i make them change the web design on the basis of what sort of characteristics of the device that are visiting the web page are so in addition to what you guys have to do when the web page gets narrower and narrower at some point it doesn't really make sense to have that counter off to the right side you can do it but what's going to happen is that the news article is going to get smaller and smaller so um so instead what we do is we move the calendar below the news article and then if it gets even narrower we no longer float the image on one side instead we have the image take a 100 percent of the width of the web browser window and then we put the text of the article below it and then we put the calendar below it so this is a three-stage design you can have as many stages as you want i'm not going to show you the source for this because it is a homework assignment for cs193c and i don't want the solutions floating around uh okay so here's the example here's one of several examples we're going to take a closer look at okay so in this case i've got a article about the stanford residence halls and on the left i've got a list of all the stanford residence halls and so we're going to do here is we're going to start by something pretty simple what we're going to do is as the web browser window gets narrower we're just going to go ahead and completely get rid of that list of residence halls um okay so how are we going to do that it's actually pretty easy and basically i'm just going to introduce this concept of a media query and we're going to talk a little bit about what your options are you're not actually going to have to do this on any homework assignments but i did want to kind of give you an idea of how this works and this is definitely something that if any of you go out and create an actual website this is definitely something you should be thinking about okay so um the list of the dorms on the left that's inside of a nav element that's one of the new html5 special semantic element along with the article and i've mentioned the figure and the fig caption before so there's a nav element and so that list of dormitories is in the nav element we're going to see another example a little bit later on that we can actually take a look at the html but for now just just realize that that list of dormitories is within that element okay normally that nav element is floated to the left and so that's what we're seeing in our left screenshot there but what i do is i have this media query and i say hey if the maximum width of the screen is 480 pixels in other words if the screen is 480 pixels or less then just get rid of that nav element just don't display it at all and so that's what we've got on the right okay so that definitely works but you know for most purposes you don't want to just get rid of the navigational element you want to move them and so that's what our next example is going to do instead of completely getting rid of the navigational elements i'm actually going to put them across the top of the screen when the window gets really narrow and so here's how i'm doing that again i'm floating the nav to the left i've got a media query for a particular width and so here you can see that you can actually have multiple style rules within the media query section so if the maximum width is 600 pixels or less then i've got two different rules that are going to apply first of all i'm going to get rid of the float on the nav element and then i'm going to turn all the list items from their standard which is display block to display inline and so here on the right you can see this is the actual html so you can see i've got that nav element i've got a unordered list i've got a bunch of list items and so list items are normally block level elements they create blocks of text similar to divs and so what i'm doing is i'm actually able to change them their behavior and say i don't want to treat them as blog level elements i want to treat them as remember what we refer to as inline or text level elements and those are are for things for for example we would use for the bold tag or the italics tag those were inline or text level elements i'm saying i'm saying hey i know the the list item is normally a block but don't treat it as a block anymore just treat it as a as just a basically span tag and so you can see uh the effect is that the list no longer goes top to bottom instead of the list goes left to right okay so here i'm doing this by actually putting the media query directly into the style sheet there's actually possible to do something similar where you just you use the media query same as before but you've actually got different cascading style sheet files and so i just wanted to mention this is impossible and you can see the syntax here and there's several different ways of doing this you can use the at import within the style tag itself or you can create multiple link tags to different cascading style sheet files okay so the last thing i wanted to mention is just to give you a sense of what sort of things we can ask about so here are some of the sorts of things you might query uh about in order to determine which set of style sheets or which style rules to use um and there are other ones in addition to these but i think these are probably the most important so you can determine what the width and the height of a of the user's devices um or what their window looks like you can determine whether their device is in landscape mode or portrait mode so um that basically if you're not familiar with the terms that means whether the person's cell phone is rotated width-wise or or lengthwise uh you can determine what the aspect ratio is you can determine information about how many colors they're able to display you can get information about what the screen resolution is how many dots per inch there are and so these are all going to determine what sort of look your web page should have and what your web page design should look like there are also a couple more that i think are really interesting um maybe that says something about what i find interesting and says something about me but uh uh yeah i mentioned earlier the idea that depending on whether you're using your finger to select items on a web page or you've got a finer grain pointer like a mouse or a touch sensitive pen or pencil you might have different web designs and so you can actually find that information you can ask you can use a media query to say hey if if i have a fine grain pointer i want to use the following elements my web page or i want my elements to be such and such a size but if somebody's navigating my web page with their finger i realize they're not going to be able to tap these things quite as you know fine-grained and so maybe i'm going to increase the size of my navigational elements and then the hover that's the part where you know i still really like tool tips but i certainly acknowledge it does not work at all with cell phone with somebody trying to navigate with a finger so you can ask we say does the user have the ability to hover and if they're using a mouse then the answer is yes but if they're using their finger on the cell phone the answer is no and so you can change your design on that basis anyway so this whole idea of responding to information about the user's device and using your cascading style sheets to change how the web page appears is you know it's really very important if you're planning to do professional design if you're doing let's say you end up you're doing a non-profit or something and you need to create a web page because nobody else in the nonprofit knows how to create a web page you can still do some basic web querying you know if you go back to that first example i started off with that's the homework assignment in cs193c that's actually fairly straightforward saying hey i've got a couple breaks where you know maybe if the person's monitors 1200 pixels or more let's do this if the person's monitors 800 pixels or more let's do this other thing that's actually fairly easy so you know if you are planning to create a website it's definitely something to consider all right i'll talk to you all soon you