welcome to exploring computing today's video is introduction to css so last lecture we learned how to use html and you may be wondering am i ready to make cool web pages and the answer is well not really it turns out that you actually need to know two different languages to make web pages you need to know html and you can make web pages with just html but if you want cool interesting fun looking web pages you need to learn a second language css or cascading style sheets what we've done here is we've separated out our semantic information from our presentation information so html is now used just to provide semantic information and cascading style sheets tells us how to present that information so what's the difference here well the paragraph tag tells us that we have a paragraph that's semantic information if we want to style that paragraph like we say oh i want that to have a one inch indentation or i want to surround the paragraph with a two pixel saw red border that's presentation information similarly if we have a list of items the semantic information is it's a list of items the presentation information could be well i don't really want to use bullets there i want to use little stanford tree logos in front of each of the items in the list or i want each of the items to be separated by a two pixel red line so that's the presentation information so basically the html is only going to provide information telling the web browser this is the type of element this is but not this is how to present this particular element that's the job of the cascading style sheets why are we doing this why are we separating these well originally we only had html and it did everything but by separating the two out we actually have a lot more flexibility for changes so for example suppose we were to create a news article back in 2005 and someone were to search for that news article on our website and our website has gone through several design changes since then and the question is should that article look like the 2005 website or should we somehow upgrade that web page to match the new 2020 web design and so by separating out the semantic information which is the same regardless of whether the article was written in 2005 or 2020 you know if that's an h1 that's the major size heading if that's a paragraph that's a paragraph whereas the information on hey we've decided that our h1 should be centered and in red now whereas 15 years ago we thought it should appear you know on the left side in black that's presentation information i think even more importantly today we need to remember that there's different presentations for our website depending upon the device it's appearing in so we still have the same semantic information that's a paragraph that's a list and that's a table but exactly how it's going to appear will depend on whether or not the user is visiting our website on a desktop machine on a tablet or a smartphone we'll see more of this as the quarter goes on basically the cascading style sheet provides all the formatting information from the web page and rather unfortunately that that was maddie she seems to be super excited about something um [Music] she's very excited uh unfortunately cascading style sheets have their own language with their own syntax roles in its own semantics and frankly it does not look like the html team and the css teams were talking at all okay so we're going to go over a example here this is the example i usually go through in my classes and unfortunately it's going to be a bit awkward doing it in this format but i think it's a pretty good example it basically will allow me to show you all the different things i think you should need to know about cascading style sheets at least as far as the basics go so this is a big game example about the big game between stanford and cal and what we're seeing here is this is the top of the file and you can see you know we've got our h1s we've got h2s we've got a bunch of paragraphs and then if we were to continue scrolling down down at the bottom and this is important because i do use this for part of the example you can see down at the bottom there's an ordered list with a bunch of list items showing the scores from earlier big games and then there's an unordered list with a bunch of list items uh talking about other things other than just a football game um the difference between the ordered list and the unordered list is the ordered list lists different items and puts numbers in front of them so it'll be like item one item two item three although with cascading style sheets you could actually change item one item to item three to roman numeral 1 roman numeral 2 roman numeral 3 or letter a letter b letter c and you can also do upper or lower case so uppercase a uppercase b uppercase c and so on and then the unordered list generally presents the items with bullets in front of them but again with cascading style sheets you could say well i don't want bullets in front of them i want squares in front of them or as i suggested a little earlier if you really wanted to you could put little stanford logos in front of each of the items all right well let's move on here okay so here's what the website looks like actually displayed on the web browser here's the top of the web page and here's the bottom of the web page and you can see down at the bottom of the web page there's our ordered list and our unordered list okay so what we're going to do here is we're going to start off by showing you how to put style rules directly into the html file we'll see later at the end of this lecture that you can actually stick the style rules in an external file and we'll talk about why you might want to do that later on but for now we're just going to put the styles directly into this html file and so what i've done is up in the head and this goes in the head because this is not stuff that appears directly on the web page this is stuff about the web page so let's go in the head we're going to add a style start tag and a style end tag and then we're going to stick in a bunch of star rolls this is what a style roll looks like and this particular style rule says i want all the h1s on my web page and in this case there's only one h1 to appear in red okay so there's a couple different parts of the style rule there's what's called a selector and the selector says these are the different elements on the web page that this particular rule should apply to so we're going to see lots of different ways to select items on the web page so you know we're going to say oh i want to select these particular uh items on the web page and apply this style rule to it we'll see that throughout the rest of this lecture and then the other part is what's called a declaration block and that says this is the presentation information for elements which match this particular selector in this case i want this color to appear in red and you can have a bunch of items in the declaration block so here i say oh i want the color to be red i want the text decoration to be underlined and i want it to be align center and notice that you separate out each of these items with semicolons okay the individual declarations consist of a style property and there are a whole bunch of style properties i provided you with appendix b from the cs 105 course reader that has a list of quite a few of them but there are a fair amount more um so it says the style properties is the color and then the style value is red so this says appear in with the color red okay we're going to spend most of this lecture talking about the different ways we can select items on the web page i will briefly go over uh the different style properties that are available for us to modify um i'll kind of give you an overview of what the different style properties available to modify are and we'll be seeing different stop properties over the next uh couple weeks well the next couple weeks for cs105 for sys106e we're only covering this for a week so okay so this first selector that we saw this is what's referred to as a type selector it says this is the particular type of element that i want this to apply to so i want this to apply to just the h1s we can actually list a bunch of these so this is also type selector this says i want this to apply to the h1s h2s and the h3s and you can see the h1 and h2 and h3 that fit on the screen at least all appear in red now let's go back to that end section i mentioned we were going to use it for part of our example so we have that ordered list and we have that unordered list and both the order list and the unordered list use list items so if i want to color one of the list items i can go ahead and do that here i've said all the list items should appear in red and they all appear in red what if i want only some of those list items to appear in red what if i only want the items in the order list to appear in red and not the ones in the unordered list so i can use a descendant selector for that and so what i say is this will apply to all list items that are inside of an ordered list notice that the descendant selector we just separate the element types with spaces whereas the type selector remember the h1 the h2 and the h3 i said i wanted to apply all three of those i separate those by commas so use commas when you say oh here's a bunch of items i want this to apply to any of the elements that match this criteria and then use the spaces when you're trying to say this element is contained within this other element with our descendant selectors there are some fancier selectors which i'm not going to go over that say the decided selector says this will apply to this element if it is nested at any level so if i have an ordered list that has an unordered list in it that has an unordered list in it that has an ordered list in it this will apply to any of those because all those list items are ultimately inside of the ordered list there's another one where you can say it must be a direct descendant but we're not going to go over that you can look that up if you want let's go back to the middle of our example so i've got these um h3s here so the bonfire impaling oski gadeys and the ax these are all different things related to big game suppose i wanted to apply a rule to one of these h3s but not the other two can i do that yes you actually can what we could do is we can add a class attribute value pair to one of the h3 so here i've added the let's say somebody uh in the class is in gadey's and they think the gates is more important than the other two so we're going to add h3 class equals important in the html tag for the h3 and then we're going to create a style rule that specifically says it only applies to things that are important so this is called a class selector and in the html i just say class equals quote important end quote and then the style selector itself i put a dot in front of it so the dot goes in the style rule it does not appear in the html tag with the class and so you can see that this has turned the gates h3 heading 3 to um to green and it has italicized it now with the class i can actually apply this to multiple items so let's say uh so impaling oski that's done by the leland stanford junior university marching band and so let's say somebody in the class is in the band and they're like hey gates is great but the band is important too so i can go ahead and mark both of these as classy was important and our rule will apply to both of those and in fact i'm not limited to just h3s so you know maybe the gates person's like okay fine we put impelling oski into uh classic was important well i'm not only going to have my heading important i'm going to have my entire paragraph important and so we can go ahead and do that that rule applies to um you know all three of these elements even though one is a paragraph and the other twos are h3s and you can actually combine different selectors so what i've done here is i said okay that's great all the important elements will appear with color red and they will appear uh font style italic but the paragraph that is important will also have an underline other paragraphs that aren't marked as important they're not going to have an underline but any paragraph that has class equals important i want that to be underlined and sure enough that's what it does now there's another selector we can use that very similar to the class selector but it's a little bit different and it serves a slightly different purpose and this is the id selector so um let's say somebody is on the ax committee and they're like hey what about me and they think i'm going to want up those guys they've got class equals important well anybody can put on classes was important i'm going to mark mine with an id equals superior and uh this is how the id selector works um it uses the number sign instead of the dot and the key thing about the id is only one element on the web page may have a given id so you know other elements on the web page we can mark as many elements on the web page as we want with class equals important there can only be one single element on the web page with id equals superior and that's really its purpose so there's a couple of times when you know you're trying to create an element on the webpage and you only want one possible element to be there and it's also useful as a documentation device if somebody creates a web page design and somebody else is trying to maintain that web page when they see that they're it's using id selector that sort of tells them hey i really only want one of these elements for this id whereas if there's a class they can go ahead and modify the design a bit and add classes to a bunch of items now one of the things about this big game web page is it's got the word stanford in a bunch of places on the web page no surprise there what if i wanted to do some styling information on just the word stanford could i do that well if the word stanford were in italics for example and i wanted to turn stanford red i could go ahead do that i could just say hey stanford's in italics and i'm going to go ahead and add a new class say class equal stanford and then i can write a rule for things that have classical stanford and i just say dot stanford but that only works if the word stanford is inside of some sort of uh set of tags like the italics tag or the bold tag what if i don't have stanford inside a set of tags can i still write a class for it and the actually the answer is yes you need to add a tag but there's a special tag whose only purpose in life is to allow you to put classes or ids on it and this is the span tag so here i've added span tag around the word stanford if i didn't put a class on this or an id on it this would serve no purpose at all it by itself the span tag does absolutely nothing but because the word stanford now has a tag around it i can go ahead and give it an id i give it a class you know i can put some other items on it as well okay so uh there's actually a pair of these there's the span tag and then there's a div tag um i don't have an example for the div tag here but what's there between the span tag and the diff tag well remember in the last video of the last lecture i talked about how there's this difference between text level also known as inline tags which are supposed to put styling on just a couple a word or a couple words or maybe even a couple letters within a word and then there are block level tags which create blocks of information so inline or text level text would be like the bold tag or the italics tag block level tags would be like the paragraph tag or the h1 h2h3 and other heading tags or like there's a table tag those are all creating blocks of information and we talked about how you can't put an inline tag around a block tag but you can put a block around an inline tag well it turns out span is an inline tag so if you want to completely surround a bunch of blocks you couldn't put a span around a bunch of blocks because that's illegal that would be putting an inline tag around a bunch of block tags div on the other hand is a block level tag and it can contain flow so that means you can put a div around a whole bunch of items and if those items are block tags that's totally legal other than that div tag largely works the same as the span tag it its main purpose in life is to just allow you to stylize things div tag can also be used as sort of a replacement for paragraphs so arguably it's a little bit more useful than span default div tag by itself will create a little block but in contrast to the paragraph which as we've seen puts a blank line between it and other elements the div tag does not put any blank lines okay um so as i mentioned you know we've been mostly going over here's how to select different items on the web page and give them style rules what i want to talk about now is what sort of properties are out there and i'm going to go through this really quick i'm not going to go into detail and there are plenty more where these came from but i just want to kind of give you sense on well what sorts of things can we do and again uh check appendix the appendix b handout that has a list of a whole bunch of them okay so i can change uh font properties so these include things like what the font family is that would be like am i using times new roman am i using helvetica you know what font am i using um i can change the font style this will allow me to do italics um i can change the font weight this is oh man he's going at it again um there was a skunk out earlier and she was going absolutely berserko when this when we could smell the skunk from inside that may still be what's going on there anyway um font weight this is a lot this is how you change things to bold it turns out that font weight is actually a bit fancier it allows us to go from 100 up to 900 so like 700 is bold i think 400 is regular 300 is light and so like 900 is super bold most fonts don't actually support this and not necessarily every web browser will support it but uh but that option is there and um just as a side note i was playing around with photoshop trying to get one of the title uh those little uh art one called art those little drawings i have uh the title of each of these videos and i did run into a font that had all sorts of different options including semi-bold and bold and light and and regular so there are some fonts out there that definitely support this and that is font size um okay and then there's text properties uh so if you've ever been working on a paper for a class uh cs106e students i know some of you may be using four unit maybe taking cs106e for four units and might need to uh write some papers don't listen to this part of the lecture i don't want you doing this okay so for the rest of you guys if you've ever been in a class and they're like hey we need to get you uh we need to have you print you need to write a four page essay and you start off and you're not quite there and you're like oh i'm going to increase the line size well you could do that with the text properties you can increase the spacing between the lines but you can actually go a bit further you can increase the spacing between the words just slightly and if that's still not doing it you can actually increase the spacing between the letters and get yourself a little bit more space and it's also got text decorations which allows to underline and actually you put a line through something or you can put a line above something it controls vertical alignment and text align which is horizontal alignment i should match in one of the interesting things about cascading style sheets that we didn't used to have with html is cascading stylesheets actually allows us all sorts of different measurement types so when you're putting in a measurement often you can put a percentage and not always but you can also put in measurements in pixels millimeters uh inches um picos uh there's just a whole bunch of different measurement types you can use so that's kind of cool okay um color and background properties so you can set the color that's the foreground color you can set the background color um we'll talk in the lecture about how to actually create these colors uh you can put an background image behind any elements you can put a background image behind the entire web page body and could put a background image behind specific elements there's a bunch of other properties i'm not listing here that kind of control how those background images work okay another set of properties are the box properties these are used to create borders around elements so you can create the border itself you can also control the spacing between the element and the border and control the spacing between the border and the surrounding elements we're going to go over this in more detail when i show you how to create images and put images on your web page you can also move elements uh to the left or the right of the web page and have text flow alongside on the opposite side of the page this is called float and again we'll we'll see this in detail when we go over images okay so that kind of gives you an idea of uh the sort of properties that are out there there are a couple more specialized properties um for example there's uh properties that allow you to place elements at specific points on the web page these are called positioning properties um 105 students will take a look at those 106 e students i am going to put the extra 105 lectures up on the 106e canvas site so you know if you're interested you can you can watch those as well but they won't be part of the standard uh cs1060 lectures okay so as i said when we started this all and we're gonna we put the style tag directly into the html file now there's um i did that because i think it's easiest to understand what's going on but it's not it's not always the best approach uh let's say i've got another web page so i've been styling our big game web page and i've got a different web page on graduation at stanford which has its own set of traditions and here you can see i've got my big game webpage that i've stylized now and then i've got my graduation webpage and the graduation web page looks kind of boring now because it has no styling information whatsoever so suppose i wanted to take the style rules from the big game web page and stick them in the graduation wire page could i do that well the simplest thing to do based on what you know right now is you just go in you grab that style tag and all the style rules between the style start tag and style and text you copy it and you paste it in the graduation html file and that totally will work but now they're out of sync so if you were to make changes to one of the style sheets it would not be updated on the other style sheet so that's actually not the best approach what you really want is you want a single style sheet that applies to all the html files on your website so we can do this with an external style sheet so what we're going to do is we're going to take all the style roles in the stop in the style tag we're going to toss out the style tag itself so i've seen a lot of students copy it over and they copy the style tag as well as all the style rules don't do that only copy the style rules and we're going to put into another file which we're going to give the name example.css so this is a css file and then what i'm going to do is i'm going to remove the style tags from the original html i'm going to replace them with a link tag here's what the link tag looks like link relationship equals stylesheet and then href and then a reference to the style sheet that i'm using this relationship here is is kind of interesting because this link tag they've had lots of theories about what this link tag could be used for other than style sheets but as far as i know it's still pretty much just used for style sheets what else could it be used for well um so here's an example uh so if you've working with if you've got a windows pc you may be familiar with the idea that if you hit the f1 key that actually brings up help about the application now if you're running a web browser and you hit the f1 key that doesn't bring up information about the current website so let's say i can't figure out what this website's all about i hit the f1 key what do i get i get help for chrome or firefox i don't get help for the website and so the idea here would be you say link relationship equals help and then you could list an html file that would tell the web browser if somebody asked for help about this web page here's what you should tell them you should take them to this particular web page another one that was proposed um and these have been in the standard although they've kind of shuffled them in and out of the standard is you know they're like this is a great idea and then none of the web browsers end up supporting it i really like this idea there was the idea of having a relationship with glossary so if you're on a website that has relationships with glossary and the web browser understands is what relationship equals glossary means and there's some word on that website you don't understand you select that word you hit some key that the web browser understands and it's like oh i know here's the glossary file for that let me look it up in the glossary file for this website and i can tell you what that word actually means they've also had forward and backward relationships and that would be if you're trying to page through the website but for some reason you don't want to click on links you just want to hit some key on your web browser or maybe you know maybe you're on your mobile phone and you just want to thumb through it so anyway they have lots of different ideas on what relationships could mean but as far as i know the style sheet is the only one that's really in widespread usage anyway so that's why you need to put in the relationship there so this is there use the link tag just the general purpose tag and you need to specifically say this is the particular use of the link tech i'm using these two files are related to each other and the relationship between them is this other file example.css that is the stylesheet for the html file that the link tag is appearing in okay so i can use the same link tag in both big game.html graduation.html and then bang that copies the styles over to both of them and then if i make further changes to example.css it will affect the styles in both of these web pages so in general you want an external style sheet because it's going to allow you to make changes in a single location have them ripple across all your web pages on your website okay last thing i wanted to cover today or at least for this video the cascade so you know this is called cascading style sheets and so you could probably get some sense on why it's called style sheets why is it called cascading style sheets what is this word cascade so here's the idea on cascade um you can have multiple rules which conflict with each other so here i'm saying all h3 should appear in blue and things that are important should appear in yellow and h3s that are important should appear in red so the question is if you've got an h3 that's important does it appear in blue yellow or red and the answer is red so basically that the simple handy rule is the more specific elements are going to win so dot important is more specific than an h3 and h3 and dot important is more specific than just dot important so the most specific rule wins it actually turns out each of these different selector types has a point value and the system adds up to point values so i i actually don't know what the point values are i have to look them up so h3 has this particular point value class and dot important is going to have a higher point value and then h3 dot important you're going to add the two together so you get an even higher point value but then something like an id selector that has a higher point value than a class selector i think probably the h3 dot important is still going to beat out an id selector but that that's basically the way the cascade works so that that is um the cascade so we're going to continue to seek css usage uh throughout the rest of our discussion on web pages so you know if you want to know what else can i do with this um we'll be taking a look at some examples and you want to know a better sense of like how does this work how does this fit in when do i use an external versus internal style sheet we're going to be going over a lot more examples all right so that's it for this video