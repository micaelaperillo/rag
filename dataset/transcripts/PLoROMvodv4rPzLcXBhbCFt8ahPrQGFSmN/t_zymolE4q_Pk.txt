welcome to exploring computing today's video is introduction to html hypertext markup language so in the last lecture we saw the origins of the world wide web and we spent some time understanding what hypertext means and previously in the last lecture we took a look at http which is a hypertext transport protocol we're going to begin this lecture by considering what the relationship between the http protocol and the html hypertext markup languages and then we're actually going to study how html actually works and in the following video we're going to get some hands-on practice using html by the end of these two videos you should be able to make your own web pages let's start off with a quick review from last lecture so you recall that http stands for hypertext transfer protocol and this is a protocol that governs how two computers on the world wide web interact and so a computer can make a request to a web server asking for a particular file and the web server will respond by sending the file the files actually can have any one of the number of formats the most common is probably the html file which was what we're going to be talking about in this lecture but cascading stylesheet files or css files are also quite common and we'll study that in the next lecture and of course the image files that we've talked about in our second lecture of the quarter are also commonly used and it turns out that http does not actually specify the formats of any of these files http simply tells two computers on the web how one computer can send a request to another computer asking for a file to be sent back it does not specify the format of the files themselves and so there are many other types of files that could be sent by the worldwide web such as video files and again in fact you could come up with new file types and http doesn't really care what the file types are it's just designed so that one computer can request a particular file of the other computer without regard to what the internal format of that file is now html stands for hypertext markup language and as i suggested it is the most common file format so that's what we're going to take a look at now and it is a key file format and any web page on the world wide web needs to have an html file in addition to whatever other files are included so html as i've suggested stands for hypertext markup language and we've seen what hypertext means from the last lecture and language more or less refers to what you'd expect and it turns out that computer languages have many similarities with human languages they have their own grammar they have their vocabulary they're not that different from french or japanese or whatever other human languages that you've learned but this other part markup we haven't talked about that so let's talk a little bit about markup and what that all means so the term markup comes from publishing so what i have here is i have a worldwide webpage from the stanford daily so one question to ask is did the author of this particular article make decisions like whether or not a particular photo should appear in the article or whether the caption appearing underneath the photo should appear in with a light gray background if the date of the article should appear in sans-serif font in light gray or if that first sentence in the article was written in bold so i've not talked to the particular author of this article george chen but i have talked to other stanford daily writers and they tell me that that's not how it works and in fact that's not traditionally how it would work in publishing so that's not really a surprise so typically what's going to happen is the author is just going to write the text of the article and then somebody else say an editor will go in and make decisions on what sort of formatting should appear in the article so we could say oh i want this first section up here this title i wanted to appear in bold 24 point font and maybe i want that byline underneath it to appear in sans serif font we'll talk about what sans serif means in another lecture if you're not familiar with the term and then i want to go ahead and insert a photo in there so these are all decisions that somebody other than the author would make and traditionally the editor would actually write these comments down using what's called markup so what i've done here is i've marked up the original text from the author providing markup comments that will be used by whoever does the type setting for the publishing and so this is really what html is all about so in html we're going to use this form of markup in order to tell the computer how to display their web pages so let's take a look at html we've seen what hypertext is we've just learned what markup is and this is a language and i'll be talking in another lecture a little bit more closely about the similarities and differences between human languages and computer languages it turns out an awful lot of what drives html though is this concept of markup that we've just gone over so let's say we want to create a web page that says go stanford and we want the go to appear in italics and stanford to appear in bold if i were working with a human type setter i could just go ahead and do my scrawled markup using a pen like this but that's not gonna work with a computer computers are getting better at reading handwritten stuff but we're not really quite there yet so this is what it's gonna look like in html basically i'm providing the same information that i would to a human type setter but i'm going to do it in a more formal manner that's easier for the computer to process what we're seeing here these are what are referred to as tags the tags often work in pairs so i have a start tag and an end tag where the end tag is the same as a start tag except for has a slash in front of it we also talk about these as elements so the element consists of the start tag the end tag and whatever goes between the start and end tag here i have an i element which stands for an italics element and a b element which stands for bold element and in fact the key to learning how html works is to learn all the different tags this is actually a fairly large subset of the tags and we'll be providing you with a list of tags that you can look over there really aren't that many tags so what i recommend is at some point you either look through the list that we'll be providing you which is probably the vast majority of the tags that are used in widespread use or you look at an official list which is a bit bigger than the list i'll be providing you with and just get a sense of what the tags that are that are out there you don't need to memorize the tags but you do want to have some familiarity with what's available and then when you need a particular tag you're like oh i want to create a bold at least you'll remember oh i seem to recall there's a there's a tag for that and you can go ahead and look it up we sometimes refer to the elements as containers and in this particular case i have the italics element and then you can see that the bold element contains both the italics element as well as the word stanford you do need to maintain this containing relationship so if i try and mix the two as shown here that actually turns out to be illegal so don't do that an element must be completely contained within another element we can't have an element partially containing an element sometimes the tags themselves don't provide sufficient information we need to add additional information suppose i wanted to link the word stanford here to the actual stanford website it turns out that the tag used to link from one website to another is the a tag which stands for anchor but i need to provide additional information telling what the website i'm linking to is and so here i've added in what's called an attribute value pair the ahrefs stands for hypertext reference and i'm providing the anchor tag with additional information telling it where the anchor is linked to some tags don't actually work in pairs so suppose i want to create a line break a line break is going to allow me to basically have a character turn in the middle of a line i could have a line break start tech and line break end tag but that doesn't make a huge amount of sense and so this particular tag can be done without a start and end tag and i'm going to indicate that using a closing slash as shown here one thing that you'll notice if you start trying to create these web pages is that it turns out that if you put character turns or spaces or tabs into a document those actually all get combined into a single space so basically what html is going to do is it's going to take any what it's referred to as white space so in computer science we refer to white space we're talking about any of the characters which can create blank space on a web page that includes the character turns the tabs and the spaces it will take all the white space you enter and it will just treat it as a single space so here i've said go stanford in my source that's in my source html i put in a couple carriage returns i put in another go cardinal put in a couple character turns and then when it's actually gets displayed it's as if those character turns or any tabs i entered or whatever i entered it's just going to be treated as a single space so what's the solution here well it turns out that there is a special tag which i need to use in order to get these to appear in paragraphs so there's a paragraph tag and so i go ahead and create two paragraph elements here you may be wondering what the relationship between the paragraph tag is and the line break tag we saw earlier notice these paragraphs have a blank line between them if i were to use a line break as i show here there is no blank line between the two lines so the line break does create a carriage return between the two lines but it does not create a blank line whereas the paragraph typically will create a blank line between the two paragraphs although we'll see next lecture when we start learning cascading style sheets you can actually control exactly what the paragraph tag does if you want the paragraph tag create two blank lines great go ahead and do it if you want the paragraph tag to create no blank lines you could do that as well we'll learn about that next lecture also notice because html doesn't care about extra white space if i have the line break tag followed by a carriage return that creates the web page we've seen here but if i don't have a carriage return and i just have it all in one line i get the exact same result another tag that's pretty useful is the h1 tag it's used to create a heading and so h1 is the most important heading but there's actually six different types of headings with h1 being the most important and h6 being the least important you may be wondering at this point what if i want to set the foreground or background color of my text or what if i want to change the font or how can i control alignment and have it right aligned or left aligned or center aligned and it turns out that while once upon a time we did do this with html we no longer do it with html we now do it using cascading style sheets and this is a legacy of our physics past so remember html was originally created for physics papers and they really didn't need that much formatting but modern web pages are created by graphic artists and other media professionals and they want a lot more control so we've taken a lot of the simple formatting that was available in the original html for physics papers and we've actually moved it to second language called cascading style sheets which i'll talk about next lecture in addition to tags which we've gone over which structure the web page itself there's some additional tags which you need to provide for all web pages and what you're seeing here is here's some additional tags that are needed to have a well formatted html file up at the top i've got the doctype this is a bit of an odd tag and it doesn't really follow the syntax rules of the other tags you can see it starts off with the exclamation point it has a capital doctype it's standalone but does not having an ending slash you do need to include this although as you can see from my little comment here it's mostly not used anymore but you do need to include it it used to specify all sorts of things like hey this is html4 this is xhtml1 and we'll talk a bit later but the web browser manufacturers are trying to get rid of all the version numbers however if you do not have the version at all it turns out that this is going to cause the web browser to think that you have a really really old web page create it back before the doctype tag was included and it will throw your web browser into a weird mode called quarks mode and you don't want that to happen so even though i'm just specifying the dog type as html instead of html4 html5 xhtml1 you still do need to provide the doctype so don't forget that otherwise you may get some really weird looking web pages okay so there's an html start and end tag that surrounds everything and then i have this head section and body section so let's take a look at those the head section provides information about the web page and the body section provides the actual contents of the web page let's take a closer look at that head section you can see that the head section includes the character encoding and this is what we talked about the first lecture where we talked about ascii we talked about iso 8859 which allowed us to do something like western european eastern european cyrillic and a couple other things all fitting into a single byte and then we talked about unicode and so this is where you're going to specify what sort of encoding your html source file is using and then there's a title and the title is what appears on the tab in the web browser and notice from this image here that the title does not actually appear on the web page itself so in this case i've used the title title for tab and notice title for tab does not actually appear in the actual contents of the webpage it only appears on the tab of the web browser so this sort of emphasizes what i mentioned earlier the head is things about the web page it's not the actual web page contents and we'll see throughout our study of html and css that there's a variety of different information that goes into the head so for now it seems pretty simple but we will be adding some extra information into this section and then the body is whatever actually appears on the web page itself there are a number of different versions of html as i alluded to a bit earlier the current version of html is html5 but as i suggested the web browser manufacturers are not super happy with version numbers i think one of the things that's going on is they don't like having specific version numbers and then people pointing at them saying hey you are not fully supporting this version so this is a reason why we've gotten rid of the version numbers in the doctype in addition to just the different versions numbers like html 3.2 html4 html 4.1 xhtml1 there are several variants of html the variant that i'm using is called xhtml and xhtml has a set of more formal rules than standard html so for example standard html if i were to write head for the head section i could write it in lowercase i could write it in all caps i could even mix the casing having a capital h a lowercase e and uppercase a and a lowercase d and those would all be legal in xhtml they're like wait wait wait this is out of hand please write your tags in lowercase letters that closing slash that i had on the line break that's actually not necessary in html but i use it because i like the students when they see that i've written a tag that has only a tag instead of a pair with a start tag and an end tag i like them to see that slash at the end and realize immediately oh that's a standalone tag this is not part of a pair and then finally is another example between xhtml and standard html xhtml requires that all attribute value pairs have the value in quotes whereas html has a bunch of different rules for whether or not quotes are necessary so basically the xhtml variant i'm using is just going to lead to more uniform looking code and i would strongly recommend that you use it for your code i think it's actually quite common probably amongst professional web pages it's used more often than not all right so that's our little introduction to html in the next video we're going to take you on a hands-on look on how to actually create an html file and how to to load into web browse and how to test it i'll talk to you soon