welcome to exploring computing today's video is web page reproduction the new york times so in this video we are going to reproduce the new york times front page from scratch using grid grid-based layout so one of our main purposes in this video is to show you that using grid-based layout you can actually create some very complex websites without that much trouble there are some nuances we're going to see in reproducing this web page but for the most part it's actually pretty straightforward i certainly would not try to do this with either float based layout or flexbox layout so this move to grid-based layout has really opened up a lot of doors for people in terms of being able to create relatively complex websites without that much difficulty so let's get started so this is the uh copy of the new york times we're going to be working with there are a couple different things to notice about this website first of all you'll notice that there are three main columns um as shown here and that um there are a few areas which don't really follow the column rule so we look at this section down near the bottom you can see that that actually crosses two columns so that's basically column span and then if we look at the photo up at the top that also goes across multiple columns and then there's that center row that just kind of violates the rules of the other section i'm going to ignore that for now and then we'll get back to it and fix it before this video is over but for now we're just going to assume that section is not there and that everything either follows these main three rows or is a calm span on these main three rows now what you've got here is on our left this is the copy of the new york times that we are going to create from scratch and on the right this is a screenshot of the actual new york times so you know it's pretty close i am missing some things i don't have the light gray comments saying how long ago a particular article was created or how many comments there were on there and you'll notice that i am using the lorem ipsum again which uh just as a reminder lorem ipsum is randomized latin text from cicero it's quite commonly used in as example text and type setting situation so we're going to go ahead and follow that our alarm ipsum i think is a little bit more uplifting than the then the headlines from the days when i took this uh photograph and recreated this last uh last year and certainly more uplifting than what's going on right now and then of course i'm replacing the photographs i like my photographs better too all right let's start off by taking a quick look at the original html um so this is the html in the body and you can see i've got a number of sections here i've basically created a number of divs and i'm going to label them a1 for the divs associated with the first row so there's a1 and a2 for the first row b1 b2 and b3 for the second row and then c1 and c2 for the third row but i do want to emphasize that because this is a grid-based layout i am not limited by the order in which these appear in the html i put them in the html and given them labels uh which are appropriate for the layout we're planning to do but in fact we could rearrange these in any order we want with no problems and this is one of the huge benefits of grid based layout if we were doing float based layout or flexbox layout we absolutely could not do this so you know lots of flexibility and the other bit of flexibility which we're not going to be talking about today but definitely is very important is that not only can we move these around anywhere on this current layout but we can create an entirely different grid for different devices so one grid for large desktop monitors another grid for tablets and then a third grid for cell phones and i can move any of the elements to any of the locations on any of those grids so big win for grid-based layout plus as i mentioned earlier it really is way easier you know as i said i would definitely not be trying to reproduce this page with float based layout or flexbox layout okay so uh for now we're going to go ahead and put our grid in the body we'll go back to the on this decision a little bit later and talk about you know alternatives but for now i'm just going to go ahead and put in the body i need to tell the web browser that the body of the web page is a grid and that there are three columns of 400 pixels 360 pixels and 240 pixels and i basically i picked those by going into uh photoshop and doing some measurements on the original new york times so uh so we could get an accurate comparison to what they were using as far as the rows go you'll notice that there are these lines running between each of the sections now there are a couple different ways to create these lines one possibility is to put top borders on each of the elements but that turns out to cause a bit of a problem and um so what i'm showing you on the inside here is uh what one of those lines would have looked like if i were using them on each of the elements and if you look closely you'll notice that there are breaks in that line and so those breaks are coming from the margins or alternatively we haven't talked about this but there's a there's a particular way to create the cloven of margins in grid-based layout called gaps so whether you're using margins or using gaps you are going to get breaks in that top top border and so the top border does not work very well that way so what i've done instead is i'm going to go ahead and create divs for each of these um i'm going to give them different classes because the top line in the new york times is actually thicker than the other ones and so i'm going to go ahead and create different divs for each of these i'm going to go ahead and give them classes now as to where i want to put divs within the html file they do need to be children of the body because the body is where the grid's located but other than that i can put them directly above the divs representing the different uh articles and images i can put them on the bottom uh i can put interspace them between each of the different rows it doesn't really matter i can go ahead and take any div that is a child of the body and place it within the grid set up for the body so the exact placement of these divs is really a matter of personal choice i went ahead and um if you take a look at the source code i'm going to go ahead and release my source to you guys you'll see that i actually interspersed it so that the div for that double wide line up at the top is before the divs for the a section uh and then i've got a div between the a section of the b section and then i've got a dip between b section in the c section and then i've got a div down at the bottom but you really can place them wherever you want okay and so here are the rules that i'm using to actually create the lines you can see i am creating a border on the top of these divs that don't actually have any contents i am setting a margin on the top and bottom of 5 pixels in a margin of zero on the right and the left and so remember if you list two different values for the margin or the padding um the one the first one listed is associated with the top and the bottom and the second one listed is associated with the right and the left also you should put measurement types for each of your measurements for example 5px representing pixels unless the value is 0. if you're using zero it doesn't matter whether it's zero inches zero millimeter zero pixels zero is just zero you may also be wondering you know i talked about how you couldn't use a border a minute ago because you're gonna have breaks in the border why am i using a border now isn't this what i just told you a couple minutes ago wouldn't work well the difference here is that these divs go all the way across the web page the issue with the breaks is that if you have a number of different columns and your elements are breaking along those columns and you need to put margins them that's where the breaks are going to occur these particular divs go across all of the columns and so let's actually take a look at that next and here's where i'm actually placing the uh these divs and so you can see i am placing one in row one and then row two is the actual contents uh including the photo of venice and then i am placing one in row three and then row four uh that's the row with uh london bridge in there and then i'm placing one of these at row five and then row six that's the last section of text and then i'm placing one at row seven so every other row is going to have one of these divs and then how how are these divs being placed these divs start in column one they go across columns two and three and then remember the n rows actually beyond uh the end of where we actually want these to go so there's a non-existent row four and that is the end point for these elements and there again you know i i'm emphasizing that these run across elements one two and three and the problem if we had put the borders on the individual elements is there could have been a break between row one and row two or row two and row three and because these go across all those rows i don't need to worry about those gaps appearing okay as far as the rows go um i've set the columns at 400 pixels 360 pixels and 240 pixels and as far as the rows go i'm going to leave that at auto so this means that the rows will increase or decrease in height depending upon the actual contents placed within the row all right so let's go ahead and place the items into the web page uh this is pretty straightforward for the most part but we will see there there are a few issues that come up okay so i'm going to go ahead and place my a1 section that's the actual original lorem ipsum that goes in the top left notice that uh this has an h2 in it and it's got a honor list with a bunch of list items and the point here is you know this is a div you can put any renderable elements inside of a div you can put photographs you can put tables you can put paragraphs you can put headings anything can go inside of a div so basically any one of these squares within the grid that we've defined for the main body any of these grid elements can contain any html we want in them okay so i'm going to go ahead and put this in row 2 because remember row 1 is that double thick line up at the top so i'm going to go ahead and put this in row 2 in column 1. i don't need to list an end column because this is only filling up a single square on the grid and then i am going to go ahead and set a margin here so you will see margins appearing at various points um in my grid placement and that's just to try and get a little bit of extra space i'll have to admit i did not pay that much attention to making it match exactly the amount of space that the new york times was using but i did want a little bit of space there if i didn't put that margin right eight picks that image of venice would be bumping right up against the uh text there and that would look a little bit odd okay and so here's the image itself um you can see i am putting this in row two same as uh the alarm ipsum on its left um it is going from column two to column four so that means it's crossing columns two and three again ending the end is one pass where we're actually covering so that's column four um so this is a column spanning image uh and you can see that i've given a specific width of 600 pixels now this part is actually important the width of the image will vary depending upon where we want to place it obviously if i want to put it in a single column instead of uh multiple columns with the column span like we have here that's going to make it much shorter but you know even if we were to move it if we were to move it from its position up in the top right to the left side i would actually need to increase the width so covering columns two and three is 600 pixels coloring covering columns one or two is actually 760 pixels and you can work that out by just looking at the uh the width of the column so we can see that the left column is 400 pixels which means the right two columns is 600 pixels uh if we move it over to the left two columns that is the 400 pixels plus the 360 pixels so that gives us 760 pixels so depending on how you want to place the images you do need to increase or decrease the width all right so now we're going down to the next row remember row 3 is actually that border between uh the a section and the b section so now we're in the b section the b section is being placed in row four um and again you can see i i am putting a little bit of a margin there now this next one's a little bit more interesting this includes both the image as well as the caption underneath the image um and again i mentioned this just a minute ago but you know b2 is just a div and inside of div you can put whatever you want so it's certainly fine for me to put both an image and a paragraph into it uh again as with the image of venice we do need to set a width on this or alternatively i suppose you could set a height i think the width makes a lot more sense here though it's easy to calculate we know how wide the columns are we don't know how tall the uh the rows are going to be um so i'm going to go ahead and set a width on this and then i am going to also uh let's change the color of the caption down at the bottom and i do want to shrink the text up a bit uh to match more or less what the new york times was doing uh for their for their caption on their image down there all right and then on the far right um i'm going to go ahead and put my last element for the b section now if we look closely at the original from new york times you can see that there is that light gray line running vertically between the image on the left and the news article on the right and so i went ahead and tried to reproduce that mine it looks like i really should have increased the margin between that image and the border it's a little bit hard seeing the border but again you know there's a one pixel saw light gray border you can kind of see it there it's much more prominent on the new york times which means i i messed up a little bit on my design there uh but yeah so go ahead and put a little bit of margin and padding and then put the light gray border to to reproduce what they're doing there and then finally i have the c-section here the c-section is a little bit interesting because if you look at the original you can see here johnson and johnson recalls and if you look at the amount of space there between johnson and johnson and the text on the right side you know that word recalls could totally fit in that space if they want it similarly taint it uh probably could have fit between asbestos and the next column over so they actually pushed that title and they made it shorter than the actual amount of space on the column and so that's what i've gone ahead and done here i've set the width of this particular element to only 250 pixels so the column takes up more space than the text here and i'm forcing the text to have a bit shorter width uh to try and get it to match what was going on in the new york times there and then find the last element and so the main thing that's interesting about this last element is it is doing a column span so it starts in column two and then it crosses columns two and three and then so we list the end as one past the column three so i list the end as column four all right so we've been looking at close in screenshots of just the contents of the web page let's back out a minute here and take a look at what this looks like in a web browser so based on what we've got right now this image here on the left this is what this web page looks like in a web browser now probably what we want is more like what we have here on the right this is the way the new york times actually works and so the difference here is with the image on the left you can see that when the web browser window gets wider my web page sits stuck to the top left-hand corner of the web page and i can increase the width of the window and i'm going to get wider and wider right margins but the left margin is still fixed at zero and so on the right side we can see that the uh the web page stays in the middle of the browser window and as we increase the width of the browser window space will increase on both the left and the right side and so we've seen this effect before and as you'll recall the way to fix this is to put the entire contents of the web page into a div and i've been given that div the id main and so here you can see i've i've gone ahead and everything that previously was in the body is now inside of this div with id equals main now as for how i actually worked out the margins i i will have to admit it probably a little overkill in terms of going all in on the grid-based layout i laid it out with a grid um it does give you another chance to to see how grid works but i i could have just put left and right margins on id main that probably would have been a better move but let's go ahead and take a look at how i did this here okay so i said that the body is also grid and that the grid in the body has three columns one column is set to 1fr the middle column is set to 1000 pixels and the last column is set to 1fr and so you recall from our previous discussion on what fr means fr is short for fractional and so fractional the frs are going to take up the extra space not used by the fixed element so we have a thousand pixel fixed element and then any additional space in the web browser window for the in this case for the width since we're doing with columns that's going to be divided between our two frs and so that's going to split the extra space between the left margin and the right margin or in this case the left column and the right column which are empty and then as far as main goes uh now i need to go ahead and place that in the grid that that the body has so the body has a grid and so this is going to appear in row 1 and then it's going to be in column 2 because column 1 is that blank 1 fr on the left and then column 3 is that blank fr on the right and so i want to go ahead and put the actual main contents of the web page into column two and then because i want to place the divs inside of the main div onto the web page now that's going to go into grid in the main element and so i do need to define that grid and so this grid here on id main this is the grid that used to be on the uh the body all right let's go back to that section that i said i was ignoring uh and so this is the section that does not follow the rules of the other parts of the grid all right so what are we gonna do with this well here's a close-up of it and you can see that there's a number of different elements on here in addition to just the fact that it doesn't follow the columns of the rest of the web page so if you look at the top here you can see that there's a border running across the top but it doesn't run all the way across all three columns as it does in all the previous cases it only runs across two of the columns you'll also notice that that last element on the far right that is actually captioned for the image up on top of it and so there's no border there and it does use that light gray that they've been using for captions um and then you'll also notice that there is a another line running between the two stories on the left so these are all different things that we want to make sure our solution takes care of and so up on the top that's the original from the new york times and down in the bottom this is our reproduction so let's take a look at how we might reproduce this so one thing we might do is we could add an extra column so here i've got four columns instead of three columns the main issue here is just uh we're gonna have to set calm span on pretty much all of our elements because uh other than this one individual row um everybody else does not follow these rules and so they're going to have to have column span in order to get rid of this this extra row here on the other hand uh if we are going to use this particular set of divisions and other locations on our web page this is probably the right way to go so you know if mostly we're using the original three columns but there's a couple places where we have this alternative um use of columns and it shows up again and again in different locations on our web page then sure go ahead and add in that fourth column and then you know use a column span for all the elements that previously would have just taken up column two uh those elements are now going to cross columns two and three and so you know it's definitely doable the alternative approach and this is the one i actually used was i'm gonna go ahead and have a single element span both the original two columns and then it's going to have its own internal structure and so that's the way i chose to do it so let's go ahead and take a look at the source here you can see that here's i've got a div i've given the id x1 and that is going to cross both those columns from the original setup and it's going to contain two internal divs one div i've given the id xy1 and the other div i've given the id xy2 and again these are both inside of the div idx1 and then i've also got id x2 and that's the caption on the far right notice that that is not inside of the uh the div x1 it is separate from it and it's not part of that that other structure okay so let's go ahead and place the x1 structure here it is right here um key things to notice here uh again this contains x y one and x y two which are the two stories inside of it uh notice that this does cross two columns so starts in uh well this is obviously row three uh starts in column one goes across column two ends in column three um it's got its own border remember we have that border that goes across just these two columns but does not go across the third column so i went ahead and put a border on this and i put in a top margin and a little bit of padding there and then finally because this element has its own internal items and has its own internal structure i need to go ahead and define it and in this case uh since we're we're all about grid uh i went ahead and defined a grid inside here there's there's obviously other ways to do this uh and in fact this is you know this would be a reasonable place to use your flexbox um okay so i went ahead and defined a grid inside of this element and i said that there's two columns 460 pixels and 300 pixels and i'm going to set the row size to auto and i just need to go ahead and place those individual elements so the one on the left that's x y one go ahead and place that row one column one and then x y two uh row one column two and then the main thing i've added here is i do have that little light gray uh border going between these two elements again i i was not paying as close attention to new york times as i should have i think i think i need to have a little bit of a little bit more padding there does not look quite uh quite like the original but you can tell you know same basic idea would be pretty easy to do a fix on this and then finally x2 this is not inside of that div so this is part of the original structure and so you know this is a child of the main div and it is using the original grid placement that we're using for all the other elements on the web page um i did use the class caption uh we used this previously uh for the caption below london bridge image and we're getting that kind of light gray look that that the new york times is using for that all right so uh here's the original uh new york times on the right uh and then on the left we've got the reproduction new york times and hopefully you'll agree with me that this is you know that's not exactly match uh could have done a little bit better job on some of those margins um particularly for those those gray vertical bars as opposed to horizontal bars but i mean basically it's the same idea and you could easily go in and tweak it if you wanted to so you know i think i think using this grid based layout is makes it pretty easy to do some pretty complex stuff and hopefully you know watching this video it has been fairly long but hopefully all of it has been pretty understandable and you can say hey you know using what i've i've learned in this class i do see how i can recreate a complex web page like the new york times here now i actually have another one of these i have a reproduction of the washington post but um having recorded uh this whole new york times section uh and thinking about you guys listening to this this relatively long reproduction in new york times i think we should save that for another day so we will take a look at uh reproducing a section of the washington post i think there's some other interesting lessons on on that recreation but uh this will be it for uh the recreations for today i'll talk to you soon you