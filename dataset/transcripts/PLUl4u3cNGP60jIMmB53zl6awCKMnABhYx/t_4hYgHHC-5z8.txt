one of the key ways of learning is to look at examples past examples of both successful and failed projects or designs what we find in systems engineering is that often the problems Begin by at the requirement stage where either um a requirement is missing or there's redundancy or in some cases requirements are written that are overly ambitious and utopian given you know the time frame and the budget available so what you have is always a trade-off between how ambitious you are technically the schedule and the budget that's available and how much how much risk you are willing to take and so the students are pushing the envelope in these different dimensions and learning what's feasible what's not feasible and uh what can we learn from past failures we can learn from from General examples of projects that um that had difficulties either in Aerospace in the automotive industry in consumer products uh in hindsight one is always smarter but it is it is worth to look at these specifically with the canat competition since the competition has a rich history and a very active set of sponsors and quite a good website as well there's there's a lot of opportunities to learn from mistakes uh that other teams have made in the past for example you know designing um a glider that um where there's not sufficient tolerances within the uh between the vehicle itself and the container and basically the deployment doesn't go well another example is um designing a glider that does not fly properly in a circular pattern and flies too well actually and flies off into into the woods never to be seen again uh there's of course a lot of lessons learned from establishing a stable Communications link from having worked out procedures you know how do you deploy system how do you test it how do you communicate with it how do you collect it how do you post-process the data in each of those critical areas we see that learning from the past is critical to avoid you know mistakes that could be avoided with uh with these learnings