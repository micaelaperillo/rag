and thanks for being so patient but boy do we have a fun fun fun class for you today we get to talk about serious counting before we jump into that though there are a couple quick announcements uh the most important announcement is that problem set one goes out today um it's got 12 problems and there's actually uh or sorry 11 problems and there's an extra credit problem if you want and we use this thing called the problem set app uh and it's something that I developed after teaching cs1i for a really long time I noticed this point in point of students would work on problems and you'd like to get the immediate feedback am I getting this right so we built the problem set out you can see the problem you can write up your explanation but you can also put in your answer and check did I get the right number uh now at the end of the day we really care that you understand the mathematics so we really want you to give your explanation of how you got that right number but you can get that sort of validation that whatever I did led me to the answer that was what the TA is expected and so you can have an idea if you're on the right track uh so the problem set app it's a gift from us to you uh use it have a good time we did build it ourselves um and it does a lot from some other cool things one of the things that allows for is you can do simulations like we can use probability to build things and I can have you code up things that can solve problems and you can run it and test it all in this environment it is a good time it allows us to ask more interesting questions now this does mean that some of your answers will require some python if you've programmed in Python before fantastic if you've never programmed python before not a problem as long as you program I'm in a different programming language you can also come learn about python where you have two different python review sessions not one not two both optional they're both going to be on Fridays this week and next week they'll be at 5 PM they'll be online and they'll be recorded with one of our fantastic Tas so come learn about python particularly for probability the first week will be mostly just the semantics Python and the next week will be a lot about python particularly for this uh topic now have you ever seen a textbook kind of beautifully written math or you look at a handout or uh um maybe an academic paper and there's a really beautiful symbols and in their textbook it turns out there's a language for how you could write mathematics to generate these symbols and it's a language that you'll all become fluent in cs109 it'll be useful if you go into research or if you just want to go make beautiful Pro PDFs that have some mathematics there's a language called latex and it's pretty straightforward it looks scary the first time you use it you write things like slash sum if you want that big sum figure use the underscore to say I want this in the subscript because the power symbol say I want this in the superscript and then what comes after shows up on the right side of the sum but it's a pretty similar simple language it's not like python where you'll be learning a whole new way of communicating complicated ideas this was just more of a markup for mathematics there's a handout on the website that tells you and gives you lots of examples for latex you don't have to use it for cs109 you can write all your answers without latex and that'll be just fine but if you want to learn you absolutely couldn't not be encouraged because it'll make your problems look more beautiful do you grade you on beauty no but does it feel good yeah it's like oh look at that some simple beautiful anyways let's talk there you go one of the great parts of this class as you know are sections you don't you shouldn't have signed up for a section yet um because section signups will be going out tomorrow and they'll be open until Saturday it's not first come first serve so don't be like waiting up till midnight to try and like book a spot in your favorite section instead you'll just give us all your preferences and then on Sunday we'll do a big matching between uh sections and section times I want to give you guys a guys of hey what's our expectation problem set for how much of an explanation you should give and here's the broad level you should give enough explanation that you could teach another student in 109 who's just about to start the problem set how to do it with your explanation so definitely don't leave your explanation blank that will not give you full credit don't just write one sentence but write a you know maybe a couple sentences to show somebody the idea that you use to get to your answer and you know it should be in that level of detail something that if we took your explanation and put a little section in a textbook that explanation should fit into something like a course reader for cs109 does that sound good okay so explain your work if you do a reasonable job we are not going to be overly intense about it just do the explanation uh and I think you we will all be good on that front uh Honor Code you know we have to talk about it you guys probably want to understand what the honor code means for cs109 honestly if you feel like you are not cheating the system you're probably doing it right but there are explicit rules that uh we list on the website and you know maybe one of the things that is pretty obvious is like don't look for the answer from past quarters uh don't ask somebody in a different part of the world to do the the problem set up for you and don't give the answers to somebody else in the class but maybe you do want to make friends in this class you do want to work on problems together we absolutely encourage this we would love for you guys to make friends and work on these things together where do we draw the line well you can work on the problems you can talk about the problems but you all have to write up your own Solutions so everybody writes up their own Solutions and that's where we'd like to draw the line for the honor code if you have any questions ask us or the Tas okay late policy you know what I want you guys to learn this I want you to all walk out of this class have you master this material if you feel like that would be better achieved if you take a small break at some point in the quarter absolutely fine with me I want you to get there by the end of the quarter so I came up with a late period that gives you as much a late policy that gives you as much power as possible so here's how it works there will be a due date for problems that's because we're Tas are students too we need to grade we need to be able to give you guys feedback so there has to be a due date for problem sets that due date for problem sets though let's say you just miss it by five minutes we don't give you a zero on the problem side so what instead what we do is we give everybody a free grace period in fact instead of five minutes we say Okay up to 24 hours after that due date if you submit it we will take it and you can use that for things like oh I just needed to sleep in a little bit longer or I just missed the deadline now that's a very harsh cutoff after 24 hours there will be a computer moderated moment when it's no longer in the grace period now if you missed the grace period do we give you a zero no we're going to allow you to give yourself long extensions in cs109 and a long extension is about two class periods if you take a long extension not a problem for us we'll still be able to grade your assignments on time the thing is it could be a problem for you because 109 is a fast-paced class like while you're taking that extension we're moving on with material and then the next problems that's going to come so fast we know how hard time management is at Stanford or if you're new to Stanford hey quarter system's a crazy Beast so you can give yourselves this extension but we want you to be thoughtful about how you're going to catch up and you can do this two times in the quarter and you don't really need our permission we just want you to log your plan for catching up and if you need more than two times in a quarter you just let us know if you need an extension longer than this there is a small logistic problem which is we will have already released the solutions and we'll already have started grading generally we don't take extensions past this 120 hour mark or what we call the super late extension and if you need one if you're in that situation talk to us as soon as possible and we'll talk to like academic directors we'll come up with like a bigger plan to get you back on track for cs1 it's not like if you miss this you're out of the class but we do need to have a more serious conversation if you can't make that very late extension so basically I give you all the power to control your life in cs109 okay the problem said man made with love for you guys but it's pretty nudes I've used it in only one quarter before this uh we made it last winter we think it's very robust you know it's gone through a whole course but you might see something that uh is surprising if you guys find any bugs I would really appreciate to know and I'll fix it as soon as humanly possible um and I'll appreciate you guys letting me know because we'd like to make a beautiful tool for a future cs109 to use as well okay oh and then some of you have this desire to hack things I think we're pretty hack proof but uh I just slightly say what if we try to hack it after the quarter because then it doesn't look like academic dishonesty uh so if you want to try and figure out ways that you can poke around and break the problem set up that'd be fantastic but like let's wait until you know final exam is done uh okay and then I put one problem on the problem set which is requires a bit of creativity to solve so it'll be the very fast oh if it'll be the very last boo the very last problem on the first problem set it's a oh there's an extra credit problem sorry my internet's not very good and Huang which is not that important there's an extra credit problem you don't have to do it but if you want to just challenge yourself and try and do something creative interesting there have at it there's a cool problem for you wow that's a lot of logistics I guess we're still at the beginning of the quarter and there's a lot of things to talk about any questions about this before I move on yeah oh yeah for that one I want to I want you to get the right answer that's a good question generally you know actually that's a great question because it applies to everything else like in cs19 if you don't get the right answer we generally give you partial credit whether it's a problem set midterm or final we generally give you partial credit but for this extra credit one I really want to see people get the right answer in fact because the right answer is very obvious it's how you get to the right answer that's more interesting um good good question okay yeah because I read through the syllabus and it wasn't very clear uh like what see so what is the um problem sets each week how do we submit them like if we hit check answer does that mean it's like submitted or what oh my gosh so such a good question um the problem set app is continuously submitting like when you're programming it's on our server there's no point hitting submit we already have it and so it will just stay open until like at one moment the the the deadline will pass and then you won't be able to edit anymore so as long as you're editing we're getting it um so oh it's just Placebo yeah click it and I think it says a message like this didn't actually submit it because you're constantly submitting uh so very good question uh yeah and when you hit check answer yes all everything does get automatically put on our database so if you hit check answer we know that you've got that green check mark II okay and then there is one last thing for today uh if you go to cs109 and you go to lecture two oh man my lecture my internet is really slow are you guys finding internet slow too good oh well um anyways there is a way that you can go follow along with the Press questions for lecture two but one of the questions for lecture two is just the first question just says presence serious uh and it says what is the word written on the board and the answer is purple zebra you can put this into the problem set app anytime between now and five o'clock and I'll know you're in lecture and the idea here is I have thought a lot about this and I know that coming to lecture is such a good thing for you it's a good thing for you it's a good thing for the class like trying to stay on top of a fast-paced Stanford class without going to the synchronous lectures is a very hard task I've been a student and I failed at doing that at one point in my career I've seen lots of people try and some are successful but by and large I know that coming to lecture is a good thing for you it's also a good thing for your friends like coming here and having community of learning what a beautiful thing so you don't have to come to lectures optional you get 100 in the class if you don't but if you do come to lecture and you know you fill in the word on the board uh every single class or for most of them so like for 90 of the classes I'll take five percent off your final exam and I'll just give you a full credit for that and so it's just a way to incentivize you to come to lecture but an optional one don't take it it's not a problem if you feel like you can do the final exam without coming to any lectures not a problem at all does that sound cool trying something out that's new if you guys have questions about it please do let me know uh no most most States you're great at the end of the day and I'll say is your grade better because you just like Rock the Final or is your grade better because you came to many lectures I'll choose whichever one's the Max and I'll give you guys the max of those two greats that was a fantastic question more questions okay yeah um if I type something into oh never mind you don't have to do this now if you don't have a computer that's not a problem I'll just have a sheet at the end of the day you can come in all right at the end of class and you can come write down your name so if you don't have a computer that's actually a great thing um as well okay exciting but not as exciting as counting so cs109 we're going to build this beautiful edifice of knowledge and it all starts with the very humble beginnings of counting and online in last class we learned about the two most fundamental rules of counting from which all the theories of counting are derived and from which the theory of probability Finds Its Origins we learned about counting with steps you want to count the number of exp outcomes to a particular experiment well if you break it up into different steps if it happens to be a case that the number of outcomes from one step doesn't change how many outcomes are to Future steps you can just multiply the number of outcomes in each steps together to get the total number of outcomes in the experiment you can take a big counting problem and you can break it into smaller ones if you can find steps that could construct outcomes of the type you're looking at that's one core idea in counting and the other core idea of counting is if we're trying to count number of outcomes to experiment if we can think of those number of outcomes and we can split it into outcomes either come from group a or they come from Group B we can use this or method of counting in which case you say let's count how many outcomes are from group a let's count how many outcomes are from Group B let's add those together and then let's subtract off how many outcomes are in both groups because it's possible for some outcomes to be in both groups and if you didn't subtract this out you would be double counting and that's where we left off those are the two core ideas and we're going to play with them a lot today we solved a whole bunch of problems in fact this was a nice one if you had to choose one problem to review from problem set or from lecture one to make sure you understand both those I think it's this one because here we construct strings that either start with a zero one or end with a one zero and we use both ideas we say we're going to count number of strings that are one two three four five six digits long they can either come from set a which starts with zero one or they can come from set B which ends with one zero there are some elements that are in both sets and we can just add those up and subtract off the over counting but in order to construct each of these sets we could use the step rule of counting like if you want to figure out how many strings start with zero one you could say okay the steps to create a six digit string is two zero one then you have two choices for this bit two for this bit two for this bit two for this bit it's a five step process step one there's only one choice choose these two bits step two step three step four step five so we can use step processes to construct our strings but we can also use the oral counting together in one problem what a beautiful thing and at the end of class we looked at this problem which we're going to go a little bit deeper into today okay these are the core building blocks but there's a lot of canonical problems in counting and these canonical problems show up in probability as well so it's worth knowing them just because they're a beautiful natural occurrence in our world but also because they're useful for understanding to the topic of today's class so we talked about this a little bit at the end of class how many letter orderings are possible of the following string that is c-h-r-i-s and the way we thought about this was we can use the step rule of counting here's all the orderings so when we say we're counting number of outcomes we want to say how many things are on this screen each outcome is a distinct construct we're not doing the task of enumerating all the distinct constructs we're doing the task of counting how many there are but the Step rule of counting says what are the steps that you could have used to construct one of these answers so what are the steps that could be used to end up with curse or uh hit occur something like that and here's steps that we talked about step one choose your first letter there's five choices for that after you choose your first letter there's four left for your second letter no matter what your first choice was there's always going to be four for a second and then you'll have three left over and two left over and one left over you can have a five step process to choose all of your letters so you can say there's a five step process one of the outcomes could have been choosing H which leaves four outcomes left for the next letters because you could use c s i or R and you repeat this and we have a step construction of our outcomes because we've been able to break this into steps and because it has the property that the choice of one step doesn't affect how many outcomes you have in future steps we can use the step rule of counting and it's five times four times three times two times one and in fact this problem construct comes up so much that has a special name and people write down the definition in textbooks and they call it permutations permutations we're going to consider any ordered arrangement of objects so if you think of every character as an object and you think of a string as an ordering of those characters you can see how your unique strings are in fact orderings of objects if all of your objects are distinct so all your letters are different then it's just going to be n and this isn't like really loud n this is n factorial which means n times n minus 1 times M minus two um going on until one and that's the unique number of orderings so let's warm ourselves up uh how many unique six digit passcodes are possible on a phone which uses each of six distinct numbers and my story for you is you're the FBI you found this phone and it's got smudges on exactly six of the numbers so you know that they're using these six numbers for their passcodes you just don't know what the order is and how many possible passcodes would you have to try to try all possible passcodes that uses each of those six smudges take a moment say hi to the person next to you see if you can think about this problem okay anyone have an idea of how we can approach this I know that's not enough time but we got a lot of cool stuff to do today we have like not that many rules we've learned today we've learned permutations so guess what it is just factorial it's a permutation yeah exactly it is factorial uh and and I guess the idea here is what are the objects that you're ordering yeah the numbers and are they all distinct and we want an ordering so if you have objects they're all distinct you want an ordering you can use the rule of permutations so the number of distinct orderings of distinct objects is going to be factorial and there's one two three four five six distinct objects so it's going to in fact be six factorial so 6 times 5 times 4 times 3 times 2 times 1 which is there's 720 passcodes to check and I think your iPhone starts to shut down after you've tried like five okay um so there's an another question that I think is interesting for Illuminating this how this thought process could be used in a similar problem that's slightly different what if I said how many unique passcodes are possible if the phone password is some ordered subset of any six digits so now forget the smudges you just say passcodes have six digits in them how many ways could you make a six digit passcode if you say that each of the numbers have to be different so in this case you know there's six digits so there's 10 choices for your first number nine choices for your second if you say that each of the numbers have to be different eight choices for your third seven choices for your fourth six choices for your fifth and five choices for your last one uh and then after this point you have a step rule that has constructed a six digit password where each of your numbers are distinct uh and in this case you know we don't keep going through the full factorial because our passcodes are only of length sixth not of length ten if you wanted all the orderings of ten numbers that are of length 10 is 10 factorial but if you want of length six you know at some point you stop and you don't get the full factorial instead you get the factorial uh divided by all those ones you didn't count so four times three times two times one okay so here's my question for you though we've talked about how you can order objects if they are distinct but it turns out this project gets problem gets a lot more interesting if you allow for some of your objects to be indistinct so for example if I said you know order the numbers one two three four five we could just use five factorial but the problem breaks down if some of those numbers are indistinguishable from one another and why is that you know in one of your orderings you'll get one one zero zero zero in this case but in a different ordering you could get one one zero zero zero because if you think of these two ones as indistinct you'll have an ordering where these two ones are flipped and these don't actually look any different so if some of your objects are indistinct there's not five times four times three times two times one options for orderings there's something a little bit less in order to teach you how to drive this I'd like to tell you a story of Coke cans and it speaks to a strategy that we use in counting but we also use in probability a lot instead of ordering ones and zeros I'm gonna be ordering my Coke ones and my Coke Zeros yet again this is the exact same problem I'd like to know how many ways are there of ordering these cans but the coke series are indistinguishable from each other and the coke ones are indistinguishable making sense here's the trick here's the pro tip and you're going to use this Pro tip a lot in counting even though they're indistinguishable we're going to make them fancy we're going to make them be distinguishable just for a moment as a first step in our derivation so I'm going to take these boring Coke cans and I'll make them I'm name them after all my friends so I got Aisha can I got the Tim can I got the arena can I got the Joey can I got the Wadi can uh and there now I took these indistinct objects and I gave them personality they are now all distinct and because I've done this I've kind of brought it into this land of a solution space we understand so if all your Coke cans are distinct then solving number of orderings becomes easy again you know it's just permutations if we think about how many ways you can order these distinct cans five options for your first can four options for your second time you guys are starting to see this pattern right so there's five factorial ways of ordering them if they're distinct but now you say Chris they're not distinct and because of that you've over counted you know there's the time where you have this like the one Coke can that is for uh Irina and there's the one Coke can that's for Aisha and you're thinking about these two different orderings as being the same or as being distinct from each other so we kind of have we've done this simplification but we have to fix all of our double Counting so I have a task for you guys I want to count how many Coke cans there are how many unique orderings there are I've made all my Coke cans distinct and I said that there's five factorial ways of counting those distinct ones and I'm telling you I've over counted but I have this challenge for you is think how many times I've over counted take a moment talk to the person next to you first see if you can make sure that you both understand the question and then see if you can figure out a way to figure out how many times I have over counted by making them all distinct talk to the person next to you let's see if we can solve this very hard problem together okay let's just try a thought process if there's a 120 different ways of ordering five distinct items but I'm claiming not all of our things are distinct three of the zeros are indistinguishable from one another and two of the ones are indistinguishable do you guys think the total number is going to be larger or smaller just yell it out loud yeah okay that's good um that's a good smoke test so it's going to be smaller we've over counted in some way if you've over counted in some way there's two ways you could have over counted you could have over counted by a fixed number of ways like maybe there's five or of these orderings that somehow break the rule and you just need to find those five and then subtract out the number five there's a different way of over counting there's a way of over counting where you have a multiple of over countings like for example double counting would be for every unique outcome you've shown it's shown up exactly twice in your count of 120. and those are two different mechanisms of double counting it turns out in this case we've done the second one so if we think about some of these as indistinct there's a couple ways that we could think about solving this and in fact you know one of the ways one of the approaches for understanding this is you could say I've got my 120 outcomes each of those outcomes look like this where you have you know an ordering of your ones and zeros but we think of them as distinct for every single outcome you could take the eyes and you could switch their places and you would find exactly one duplicate of that outcome does that make sense so for all the eyes we've double counted we can take this 120 and we can divide it by two but then you'll also find some situations where they'll look the same but the distinct version will have different subscripts on the zeros divided by two solves the problem that the subscripts on the eyes might lead to in distinct things being looking like distinct but we haven't solved the zeros how many ways have we overcounted once we start thinking about the zeros does that one come up with an idea while we were talking yes um so for those three you're basically like how many you look at how many ways there are to order those three independent of how you've ordered the other two and then that's three factors yeah so that's a oh great oh by the way that was really funny you didn't raise your hand but the person next to it was like that guy knows which I really appreciate um so for any ordering of the zeros you can imagine within our data set you'll see a version of this string where you see Zero with all these different subscripts in every permutation possible in every ordering possible so you'll get wtj wjt all three factorial permutations will show up in this format so it turns out we've also over counted by the number of ones or all the number of zeros that are indistinct that we treat as distinct all the different orderings of those so in fact this should be 120 divided by two times three factorial there's a second way you could get this insight and this is a little bit nuanced but this shows the derivation for the rule we just used so if you want to get away from intuition you just like want cold hard math rules this is a way you could have derived it you could have said I want to think of this two-step process that creates all the permutations of distinct objects let me give you a two-step operation that will lead to permutations of distinct objects your first step is make all the permutations where some of your objects are interesting so all the permutations of zeros where zeros are indistinct in all the permutations of one where ones are Instinct this is the target we're looking for that's the thing we're trying to count but that's the first step in this two-step process first you make those and then as your second step you find a way to switch out the zeros and ones you choose some ordering for the actual subscripts the eyes and the A's and then after you chose this orderings for the subscripts you choose the orders for the subscripts of the second uh in distinct group so this is a two-step process that describes how you can get all the permutations of distinct objects we're not trying to calculate the permutations of distinct objects we're trying to calculate how many things are in this step but those are guys who are fans of multiplication division know that like oh I can just get you cheekily over there and then you have a way to calculate the permutations where some of your objects are indistinct that's the situation we have you know some of the zeros are indistinct and the ones are indistinct is you just count how many permutations there are Imagine they're all distinct and they have to divide out how many ways you could permute each of the groups of indistinct objects so again that would lead to 120 so that's um five factorial divide by two factorial times three factorial I forgot a factorial here is that a problem like that derivation suggests that this should have been two factorial did I make a mistake thank God and it's because two factorial is in fact equal to two because two times one is Dusty okay this leads to a general rule so the general rule is let's say we want to count orderings of objects and not all the objects are distinct you have different subcategories of indistinguishable objects like N1 of your objects are the same and two are same in a different way and and are the same in an earth way the rule is the total number of permutations are n factorial divided by N1 factorial times n two factorial up to NR factorial okay last class I gave you guys this teaser at the end of class I said how many different orderings are there of the word Mississippi you now have the rule confirm it with the person next to you make sure you understood this very important rule in counting how many orderings are the there of the letters m-i-s's i-s-s-i-p-p-i go for it okay you know there's an art form to mathematics especially as you get into higher level mathematics like where do you go from cs109 like what's the next step in your mathematical Journey you'll learn a few more classes but you're getting closer to the Forefront of you know what humans know and if you take math beyond that Forefront so much of it is creativity so much of it is taking the real world finding mathematical constructs and either recognizing that they're already solved problems or realizing you've discovered an unsolved mathematical problem that you can work on so there's this art form mathematics of somebody gives you a construct like this and you have to formalize it and that's very similar to what my day-to-day life looks like when I'm doing research in math it's hard though I mean in this case maybe we only have a few tools but as you add more and more tools it can be a hard task and that's one of your learning goals in cs109 not just knowing the formulas but knowing how you can see the mathematical structure in the natural world okay so you're like what's natural about the string Mississippi well you know we're at the beginning of cs19 it gets more and more natural Mississippi how many letters are there I actually don't know but I think it's like 11. okay woohoo so how many orders are those letters there's 11 factorial am I right yeah yeah I'm sorry I guess that was really cheeky of me uh yes there are in fact 11 factorial orderings of the letters but if you did 11 factorial it would give you every ordering and it's thinking about these s's as being different from one another so you'll get an ordering where like these two s's are in the different order and that doesn't actually look like a different word I've over counted how many times have I over counted someone help me out here four wait where did four come that is magical where did this come from oh there's four S's and all the S's look indistinct so I've over counted because for every true unique ordering you'll get every permutation of those indistinct s's okay great what else have I overcounted am I done okay there are you getting the four eyes Okay four eyes and then how many M's are there is it gonna mess it up if I put in a one factorial here no divided by one doesn't matter at all but you know what I feel like including you m welcome to the party okay who else gets included in the party oh and do I just do p factorial here ah silly uh I think there's two peas yeah feeling good and have I gotten them all okay there you go now you can know how you can do orderings of Mississippi is this important to know how many organs are there were the Mississippi yes no I'm just joking but is the mechanism of how we derived it important because it applies to lots of problems in further mathematics absolutely permutations especially the Instinct objects show up a lot in fundamental theories but it's you know fun party fact Okay so in this case 11 factorial divided by four factorial four factorial two factorial uh there's 34 000 different orderings of those letters okay uh now I do want to show you because you're computer scientists one of the things that you can do as a computer scientist if you're finding any of this stuff hard you have the power of computers we're talking about counting how many outcomes there are so if we say we want all the orderings of the words Boba we want to know how many of those are we don't have to construct each one but as a computer scientist one of your ways to solve this would be to write some code that constructs every single ordering and python has a beautiful tool called permutations and if you call permutations on any list it will construct every permutation of the elements in that list in this case I put that through a set and then I just print out everything in the set I do some pretty printing this is a little bit of advanced python except for this line and maybe the fact that this function exists you know if some of this code is looking novel to you come to Friday's review session we're going to talk all about python it's a beautiful thing but it's also the language of pseudocode so if you don't know python uh hopefully this is making sense take my letters get every single permutation and then print them out so you can use the power of python to help you out this would be a really really long way of finding out that there are 4 factorial divided by two ways of solving this here's this the shorter way of counting how many outcomes there are you can say python what's four factorial python what's two factorial Python's like it's two but Python's so polite it's never a condescending it'll just give you back two very politely and they'll get four factorial divided by two and you get the answer much quicker okay so now you know a little bit of code here are all the formulizations of tasks we're going to do so what we've just talked about is how you can sort objects and you've got to become really good at counting orderings of objects and you might feel like is that the only task counting people care about no we care about other things like objects or choosing objects and putting things in buckets you're like do you care about other things like your family's like no I just care about these three tasks no I'm kidding um uh let's talk about some other tasks oh and actually though I do want to give us one more challenge because even though we're going to talk about canonical tasks I want you to always return to those two rules we learned last class the step rule of counting and the two uh the or rule of counting because those are your building blocks it's easy to take a problem that's slightly different from a permutation problem where you have to combine those building blocks with canonical things like permutations let me give you an example we're going to go back to our trusty old phone and now instead of having six smudges there are five smudges it is still a length six password so my question for you is if there's five smudges how many unique passwords could exist and this is just an example of why you want to know those fundamental rules in addition to the generalized formulas like permutations you guys want to get to know that person next to you this is a little challenging but think about it and it's certainly solable with the tools you have five smudges six digit passcodes how could we possibly do this okay let's get amongst okay I often ask you some pretty hard questions in lecture this is a pretty hard one what I'm going to do in lectures I'm going to show you lost six examples and that way you'll get some intuitions you know when I look at a math problem I'm not starting from scratch I have seen many many math problems solved they live somewhere in my brain so I see a new problem I kind of do some sort of pattern matching I I do think about the problems I've seen before so in lecture I'm going to show you lots of examples I'll ask you to solve them like you're seeing it for the very first time and that's hard I all I ask of you is that you engage with it you get your mind amongst it because if you get your mind amongst it even if you don't derive this really hard problem on the spot when you do see the derivation you'll be a little bit more ready for it because you'll at least appreciate the difficulties so whether or not you got the answer let's talk about it together I also have a pro tip for you guys let's say you're working on a problem set starting today um when you're working on the problems that there'll be a lot of counting problems and sometimes you'll look at County problem like this one and it will look daunting a first step if you find anything hard is to start writing examples of outcomes you're counting like it's really abstract what we're counting here but if I make concrete outcomes it becomes a little clearer okay I'm counting all of these different outcomes you know what your outcomes look like one of the reasons that's also helpful is if you use the step rule of counting you're explaining steps that could generate each of your outcomes So speaking of which what are steps that could generate each of these outcomes okay an idea choose the five numbers and then choose which you know that you need to use all five because of the smudges so exactly one must be repeated do you choose which one you repeat then you choose the two slots in some in the sequence where you use that repeated number and then you preview the rest of them okay that says step one we know there's exactly one digit that will be repeated your first step is to choose that digit to repeat how many choices do you have you could choose to repeat the two you could choose to repeat the four the five the six or the eight all those are good choices for the digit that gets repeated that's our first step does that construct an outcome no it just chooses a digit we need to continue our construction ways your step two is to generate the passcode you now have four distinct objects and two indistinct objects you know there's one number which is repeated and there's four numbers that occur exactly once so if you have six objects four of them are distinct and two of them look indistinct how many ways could you order those six objects yeah just say it out wow what are you thinking he has louder much louder it's okay if you talk over each other this one okay okay but I really appreciate the the uh that you guys don't want to talk over each other uh six factorial but six factorial over counts the fact that two of them are indistinct and you need to divide by that two factorial just like we were doing over here so there's six factorial ways of ordering your digits divided by two factorial to deal with the over counting so there's five choices for the double digit and then your next step is to take those things that you've set out on your table and actually come up with an ordering and there's six factorial divide by two factorial so this combines a rule we just learned into the step rule of counting so we're going to show you these canonical rules but always remember your your two most fundamental ones the step rule of counting and the or rule of counting okay so at this point you guys are old enough and you guys are wise enough to learn about Combs uh combinations combination is a different counting task in this different counting task we're going to take objects and we're going to choose some subset of them so you know my example that we're going to run with is eventually going to be I give I have five books here I want to figure out how many ways could I choose three of them and you can start thinking about that but I'm going to tell you guys a story I'm going to tell you guys a story and it's going to show us how we can solve all the problems in this space and it involves cake a delicious thing in fact actually I have a one and a half year old right she discovered cake like two weeks ago and it's like deep in our psyche she like had that she's like that is good stuff and like ever since she's like how about more cake and we're like What if we ate dinner she's like no more cake so going on that Vibe let's learn about counting of combinations using cake we're going to have a party and this party there's going to be 20 people but this isn't a very nice party we're only going to give five people cake you're like what sort of awful like diabolical human being are you ha ha ha ha ha so this is the task of choosing a subset so you have 20 people are going to choose a subset of five to give cake can I tell you a story of how we could come up with every different way we could give five people cake we could say here is a generative story and generative story is invoking the step rule of counting I'm going to show you steps that could lead to an outcome where we've given exactly five people cake we get all the people in our party in a line also not a good thing to do at a party then after that we're going to say hey everybody in this line has an ordering they have a location in the line and we're going to take those first five people and we're gonna give them cake like you awful awful person give everyone cake so we got n people in line how many ways can we do that well it depends if people are distinct are people distinct of course no two people are alike we're all individuals we all have our own hopes and wants and dreams in this wild world we're all distinct so is permutations of distinct objects there's n factorial of them step two there's only one way of doing step two is to draw a line after the first person and it's going to say every person in the front of this line welcome to the cake room and there's only one way of doing this uh this next step but now that we put all these cake room we're gonna give them cake but if you think about an outcome where these five people get cake it doesn't really matter which order they're standing in they all get cake and so they could be this way in the room they could be at a different permutation room any permutation still leads to exactly those five distinct people getting caked so imagine the next step is I'm going to let all these people in the room chill and intermingle and enjoy their cake and so they can go spread out and we're gonna say they can when they intermingle there's gonna be five factorial ways that they could intermingle uh within this group so if my next step is to let them intermingle you know there's five factorial ways of doing that next step now all these other people who are not in the cake room they've also not gotten cake but in this construction I've chosen these five people to get cake I've chosen these uh 15 people not to get cake but I'll have an outcome for every ordering of these 15 people even though in that outcome this exact set of 15 people didn't get cake I've over counted by 15 factorial in my last step I have to let these people who are not in the cake room I have to let them intermingle now if n is the total number of people and K is the number of people who got cake there's nysk factorial ways that I could let these people intermingle and then you're like I'm not an awful person so I'm like just kidding you guys all get cake and not even cake to everybody and then we like have a party and we're like why are we in different rooms we should all be in the same room having this blast of a party and everyone's like yeah cake no dinner for us for adults we get to make our own choices what have I done here any story I want to give you a deep idea for where the rule comes from for counting ways that you could give K or you could choose Cape a subset of size K from a group of size n formally outside of the world of K we call this a combination so if you have K objects you want to choose a subset of n we're going to call that a combination and the rule for combination is the number of ways that you could do that the ways you could take your 20 people and choose five to get cake would be 20 factorial but then you have to divide out the five people in the room with cake and you have to divide out the 15 people in the room without cake because if you think about this as an ordering of that line of people it doesn't not every of those ordering is a distinct assignment of cake to people so we've counted by this many times and the derivation was you know n factorial ways to line people up one way to put the cake not cake split uh there's K factorial people in the cake room they need to not worry about ordering and there's nysk people who are not in the k group we also not need to not worry about ordering so we can have this one two three four step process that could generate an or a particular assignment of a chosen take people out of your set of n you should know that derivation because it's fun and interesting and I think it's Illuminating and it can teach us things about probability but you can also just know this General canonical process if you want to choose a subset of size K from a group of n you can just use this equation now this equation shows up so much in so many distinct parts of mathematics that it gets its own notation you might see this it's called the binomial coefficient nothing we've talked about has anything to do with binomial distribution but it turns out the coefficients if you had to set up a binomial equation end up having weights that can be derived using this formula as well there's lots of parts of mathematics where this exact calculation shows up so we have the special notation for it and if you see a problem and you can understand it as choosing a subset you can just use this equation quick check in this problem formulation are all your objects assumed to be distinct or indistinct distinct think about your people they're all different Unique Individuals if you want to choose three items from a set of ten and they're all indistinct many ways are there of doing that yeah because if they're all interesting it's like you have 10 Coke hands you choose three you've got I have three Coke cans and no matter how you choose three cocains it looks exactly like three cookouts there's only one unique outcome so if everything is Instinct this problem is actually not that interesting uh so we are Marching right along now I told you as a motivating example of this not to think about cake but to think about a slightly more realistic problem say I have these five lovely textbooks I have the course textbook do you know the course has a textbook it's a really good resource if you want to go even deeper into some of the stuff humans in New York they tell stories mostly humans mostly in New York the definition of everything in mathematics quite a small book I like this book it's called the theory that would not die it's about Bayes theorem and how Bayes theorem allowed you know Turing to break the Enigma in World War II how it kept showing up in the 90s in the revolution mathematics that came from the computer science departments and how it continues to influence thinkers in fact a few of the papers I've written in new algorithms have in fact used this old old idea called base theorem where could you learn about Bayes theorem in this how cool is that and this is really one student took the course reader and published it into like a hard book which is like kind of funny thing there's only one copy in the world so I'll fight you to the death over it or maybe I'd lend it to you let's say there's six distinct books and I want to choose three uh how many ways could I do that and to be clear if I give you these three books do you care if I give it to you like this or like this or like this no it's the same three books you just care that I gave you these three books as opposed to these three books so in this problem type we don't care about ordering we just care about what was chosen so there's a combination choosing three books out of six take a moment instead of talking person next to you think about it you're like hmm do we have a rule for this like yeah you don't have to go to the Kate derivation you could be like okay I'm gonna get all my books in a line I'm gonna draw a cut off at three then I'm gonna let these go into room and permute I'm gonna get these uh remaining two to go into another room in preview and then I have five factorial divided by three factorial divided by two factorial you don't have to go to that origin story you could good times or you could just say I recognize this as a combination problem all my items are distinct and I'm choosing a set of three from a set of six so there's in fact just six choose three ways so you can say this is six choose three which is the same as six factorial divide by three factorial divide by three factorial uh 20 ways okay so here's another instance of this problem and this is going to be a sub problem it's something you'll see in your problem set so worth paying attention to I have myself here a deck of cards it is a standard deck of cards except that they're awesomely large a lot of games involve getting a hand of size of five cards and in this hand of five cards it does not matter the size of the cards it does not matter the ordering the cards but it does matter which of the cards you get all the cards in a deck of cards are unique if you didn't know they all have a unique combination of number and suit and so this is different from say this hand and if you want to do mathematics around gambling and much of probability was invented by people who are horribly addicted to gambling and they're inventing probability so that they could beat their friends you would have to be able to count how many different hands of cards are possible so you have a deck of 52 cards how many ways could you get say five cards and at this point you're like I know this I'm starting to get comfortable with combination things I'm starting to see this in many problems in the world uh this is in fact a combination now if you want to calculate that combination you can just say in Python you can ask the question hey what is 52 factorial divided by 5 factorial divided by 52 minus 5 factorial let me go to the code for a second uh and I have myself here a video server the problem set app and over here is a way to count how many unique hands there are in cards so check out this python I'm going to first do this the long way and then I'm going to do this the short way in the long way I'm going to construct a deck of cards with 52 different cards I'm going to take for every value and for every suit I'm going to get every combination afterwards there'll be 52 elements in my list of cards these three four lines just create a deck of cards I told you that python has this thing called inner tools you can also say give me every combination if I say enter tools give me every single combination it will give me every combination of the cards of size five it'll give it to me as a list and I can print out the length of this list uh let's just run that because what a good time count hands and it says there are 2.6 million unique uh choices of five cards from all your 52 cards if you wanted to as a computer scientist you could actually look at what each of those are um so for hand in subsets you could print out each hand one at a time and if I do this every single line here will show up exactly one so it'll be one unique choice of cards how many times is this program gonna run or how many lines is going to print out 2.5 million that's too long I am not patient for that um so I want to use this as a chance to enumerate the difference between we're counting versus we're going to generate each of the outcomes in this part of cs109 we are just counting how many things you have to do instead of creating all of these cards though we could have just done this we could say you know how many hands there are we can do either you can ask python what is 52 choose five and well hey they're not safe I always forget to save we've all been there and it'll say 2.5 million or similarly I could say hey the formula for 52 choose 5 is math factorial of 52 divided by math.factorial of 5 times math. factorial of 52 minus 5 and you guys are getting way of people reading can you guys see that math factorial 52 divided by math factorial of 5 times math factorial 52 minus 5. all these three things get you to the same answer the factorial gives you a way to count the number of outcomes in a much faster way than if you had to generate every single outcome yourself and also I just want an excuse to show you guys some cool code so now you know as a computer scientist you can do this like even cooler than the math friends that you've got yeah one that one we just before like refuting for people in the game room and outside of the case as in distinction in fact during the entire thing divided by um feeding sanctified people inside the room which has interchangeable all the people out there okay and then you've done a beautiful thing it's not very obvious but what you've seen is you've recognized that this combination is very similar to ordering of dis indistinct items you have two groups of indistinct items people in Cape crew and people are not capable for some of you guys this is like totally going to be a mind flip once you've seen a problem one way it's sometimes very hard to see a different way but your abs are right there is an equivalence between those two problems and you've seen it if you don't see it that's absolutely fine but if you guys want to think about a little bit more that's a really cool thing can you recognize why does this formula looks so similar to ordering of items where some of your items are indecent and if you can flip a problem there's always an equivalence where you can do a combination and express it as an ordering of distincts and distinct I don't think that was your question you had a different question the 15 people who are not part of Peter why do we care about that communication sure sorry we shouldn't care about them um if we're just choosing people for cake but if you don't count them we know we'll get a different answer than we got from itter Tool so clearly it's an important step in getting the right answer but what's going on there if you just construct your cake room let's choose a smaller number by the way other Pro tip if something is hard you want to think about choose small numbers let's say there's six people and we're going to choose three that's the book example so we put three people in our cake room and three people in our not cake room if step one is to come up with all orderings there's 100 or there's six factorial different orderings and in some of those orderings you'll get zero you know these three people here and you've figured out a way to come up with every over counting of those people inside but if you took any single one of those or you had like this person this person this person when you generated your six factorial you'll get every permutation of people outside you'll get like X1 X2 X3 and you'll get x2 X3 X1 so when you start with six factorial that describes the size of a huge set and within that set there is groups where even if you thought of these as indistinct you've already handled that case you will see an outcome which is these three interesting things get cake and these guys don't get cake and then you'll have this outcome which looks basically the same but you just have treated these people outside as indistinct is a really cool subtle question but you do need to deal with the fact that in our first step when we created all these six factorials we generated a lot of examples of different orders of people not getting cake very subtle very cool question okay let's take our two-minute pedagogical pause before we do that what is what can you do during your two minute paragraph pause you can have a good time you can talk to person next to you but if you want to the number one thing you could do for learning is to try and crystallize what we've learned try and summarize what we've done so far before we move into the next great topic of cs109 okay fantastic take your two minute pedagogical pause talk to you in a second okay we have one last thing to do today but I wanted to sell celebrate we did something you know kind of straightforward we made it more complicated this thing had a whole cake story that was wild and we're getting into the final task that you need to do in counting in cs109 and that is let's figure out how we can put some stuff in buckets let's do it uh we're going to be thinking about a distinct case and then we'll think about the interesting case thinking about the distance imagine you have four distinct things and you want to put them into three distinct buckets it turns out that this is a little bit straightforward using the step rule of counting each distinct thing chooses its bucket first distinct thing chooses buckets it's number buckets options the next distinct thing chooses its bucket number of buckets because each of your objects are distinct and each of your buckets are distinct it ends up just being you have all the bucket choices for the first string this is putting strings into buckets all the second all the bucket choices for the second string and all the bucket choices for your nth string you could have derived this from first principle in fact if you never memorize this rule even if it was like an exam setting this is a sort of thing that if you knew your step rule of counting you could come up with but if you have distinct objects being put into distinct uh buckets it's just a power so maybe sit with that for a second see if you can think of a good question is there anything confusing about this it's R times R times r n times there's n steps and each step has R options what's R the number of distinct buckets we have and what's n the number of distinct items so choice of buckets times choice of buckets times choice of buckets and times okay it's going to get a little bit more exciting though when we think about indistinct things into our buckets you guys ready for it okay I'm going to close my slides for a second and we are going to just think about this using physical objects oh that's kind of interesting it's stuck on that slide Good Times I have myself here four indistinct objects and I would like to put them into buckets may I tell you another story because if these were distinct objects which they are not and we want to put them into buckets we think of each of our buckets as different that's not too bad because there'd be number of buckets choices for this little fellow number of buckets choices for this little fellow number of tobacca's choices for this little fellow and number of buckets of choices for this little fellow and that would just be buckets times buckets and buckets buckets buckets to the power of four but they are not indistinct or so they're not distinct they all look the same so if you use that formulation you will have over counted I told you there's two different ways of over counting sometimes you over count by a fixed number you subtract it off sometimes you over count by a multiplicative you divide it out unfortunately if you went about starting with this formulation thinking them as distinct and then try and subtract or divide on your mind will explode instead there is the most wonderful creative interesting description for how you could derive how many ways you could put those things into buckets I am going to introduce you to my new friends the dividers we're going to put those cans into well let's say three distinct buckets if I want to put those cans into three distinct buckets I'm going to introduce two new friends divider one and divider two and what I'm going to now do is I'm going to think about organizing not just by Coke cans but my Coke cans and these two new friends are dividers so here's one ordering of my Coke cans and these two dividers notice that order is a thing we already know how to do if I ordered my Coke cans and my dividers like this I can interpret as this coke can is in this bucket these two Coke cans are in this bucket sometimes your dividers just fall off and you know that doesn't really get oh you know my dividers are going to be face down because then no one gets hurt um so I have my face down dividers it's okay it's like ten thousand dollars worth of equipment um but this tells you that there's this you know one cocaine in this bucket and then whatever between these two dividers I think of in bucket two in this case I've got three buckets my claim is I can think about any assignment of my indistinct objects into buckets by thinking about an ordering of both the Coke cans and the dividers so if you gave me any ordering like this ordering for example or you know this ordering for example like there's just not enough space for you guys cook cans you're up here you can't see it okay here you go I have two can you see it now okay if I have two dividers in Coke cans any ordering of these six objects you give me I can interpret as Coke cans and buckets this is how many things are in buckets in the first bucket how many are there here's how many things are in the second bucket how many are there this is how many things are in the third bucket how many are there oh you guys are good what if I did this how many in the first bucket how many in the second bucket how many third bucket oh you guys are good any ordering of my Coke cans and uh in my dividers leads to a unique assignment of Coke cans into buckets but now we have a challenge how many orderings are there I have four Coke cans I have two dividers I have six objects are there six factorial different orderings I see some shaking ahead you guys know that doesn't count because four of my Coke cans are indistinct and this is orderings with some indistinct items how about those uh dividers if you have two dividers like this and two dividers like this we still think of this as bucket zero we still think that this is bucket one we still think if this is bucket two so if you just switch the ordering of the dividers it doesn't change which Coke cans go into bucket zero one or two so you can think about all the orderings of your Coke cans and you can think about all the orderings of your dividers and this is how many times we've over counted so if there's six factorial divided by four factual divide two factorial that is the number of ways that you could put four objects into three different buckets do you notice how the number three didn't show up there and it's not because it didn't show up there it in fact did it showed up because there's not three dividers there's two dividers why would there be two dividers if there's three buckets it's a fence post bug you know if you have six buckets you've got five dividers if you've got three buckets you've got two dividers because you know there's a bucket on one side and there's a bucket on another side if you want to see this problem using helmets instead of Coke cans you absolutely can but no matter how you derive it there is this simple rule for how you can count ways you can put stuff into buckets if some of your stuff is indistinct you think of your n indistinct items and you think of your R minus one dividers and we're going to get all the orderings of those but then we're going to divide out the fact that in those orderings we thought of your n items as distinct but they're not and then we're going to divide out the fact that in this ordering we treat the dividers like they're distinct but they're not and if you do this you end up with n plus r minus 1 Factor I'll divide by n factorial divide by R minus 1 factorial which gives you the rules for how many ways you can put indistinct items into buckets and there you have it it's a formula that you can use and the derivation would be a really hard one to do but you could figure it out if you wanted we're going to come back on Friday and we're going to talk about probability and to do a probability you need to know this one very well you need to know this one very well and you need to know this one very well all the versions of indistinct if you like this go do problem sets and do problems one two three four before Friday if you really like this this is the coolest example I've ever written about counting go check it out and if you really like this here's a challenge problem you can think about between now and Friday have a great day see you next Friday